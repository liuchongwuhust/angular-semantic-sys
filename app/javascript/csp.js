/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
var cspApp = angular.module('cspApp', [
  'cspRouters',
  'cspCtrls',
  'cspServices',
  'cspFilters',
  'oc.lazyLoad'
]);

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
var cspCtrls = angular.module('cspCtrls',[]);


cspCtrls.controller('AppCtrl',['$scope','$state','UserInfoService',
function($scope,$state,UserInfoService){


  $scope.currentUser = null;
  $scope.setCurrentUser = function(user){
  $scope.currentUser = user;
 }



  $scope.$on('$stateChangeStart',function(event, toState, toParams, fromState, fromParams){

    // 如果是进入登录界面则允许
	  if(toState.name === 'home'){
      $('#loginModal').remove();
      $('#orderModal').remove();

    }else if(toState.name === 'allProducts'){
      $('#allPro_orderModal').remove();
    }
    else if(toState.name === 'usercenter'){
      $('#wechat_modal').remove();
    }
      // UserInfoService.cspCheckLoginState('',function(res){
      //   if(!res.loginState){
      //     event.preventDefault();// 取消默认跳转行为
      //     $state.go("home",{from:fromState.name,w:'notHome'});//跳转到登录界面
      //   }else{
      //     UserInfoService.cspCheckRiskState({},function(result) {
      //         if(!(result.result === 'succeed' && result.riskstate === true)) {
      //             event.preventDefault();// 取消默认跳转行为
      //             $state.go("risklevel");//跳转风险评测
      //             var a={
      //               uid:'',
      //             }
      //             a.uid=res.uid;
      //             $scope.setCurrentUser(a);
      //         }
      //         else {
      //             var a={
      //               uid:'',
      //             }
      //             a.uid=res.uid;
      //             $scope.setCurrentUser(a);
      //         }
      //     })
      // }
  // })
});



}])

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
 cspCtrls.controller('allocateStockCtrl',
 function($scope,$state) {

//跳转到交易小组管理
  $scope.goTradeTeamManage = function(){
    $state.go('tradeTeamManage')
  }



   $scope.allocateStockCtrlInit = function(){
     document.getElementById('csp_header_containter').style.display = "none";
     document.getElementById('csp_footer').style.display = "none";
     document.getElementById('homeSpaceDiv_37px').style.display = "none";
     //计算一下屏幕高度*0.8
    //  var height = document.documentElement.clientHeight;
    //  var minHeight = height + "px";
    //  document.getElementById('csp_allocate_content_div').style.minHeight = minHeight;
     window.scrollTo(0,0);
   }

   //跳转到操作员管理
   $scope.goOperManage = function() {
       $state.go('opermanage');
   }


 })

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
cspCtrls.controller('CommentCtrl',
function($scope,$rootScope,$state,$interval,CommentService,$filter,UserInfoService,usercenterService){
    $scope.themes = [];
    $scope.showstate = 0;
    $scope.commentpath = "";
    $scope.currentTheme = {};
    $scope.publishVersionData = [];
    $scope.publishTopic = {};
    $scope.currentBigImg = {};
    $scope.showBigImage = false;
    $scope.timePromise = undefined;
    //要显示的页码
    $scope.modulePages = [];
    //总页码
    $scope.moduleTotalPage = 1;
    //显示页码数
    $scope.modulePageCount = 10;
    $scope.moduleItemCount = 10;
    $scope.moduleCurrentPage = 1;
    //显示首页，上一页，下一页，尾页
    $scope.moduleShowPrev = false;
    $scope.moduleShowNext = false;

    //定义编辑器
    $scope.topicEdit = undefined;

    $scope.cspCommentInit = function() {
        //加载编辑器js
	    var js = document.createElement("script");
	    js.src = "lib/ueditor.config.js";
	    document.getElementsByTagName("head")[0].appendChild(js);
	    var js1 = document.createElement("script");
	    js1.src = "lib/editor_api.js";
	    document.getElementsByTagName("head")[0].appendChild(js1);
      document.getElementById('csp_header_comment_label').className = "csp_header_label csp_header_active_label";
    document.getElementById('csp_header_comment_label2').className = "csp_header_label2 csp_header_active_label2";
          document.getElementById('csp_header_home_label').className = "csp_header_label";
          document.getElementById('csp_header_product_label').className = "csp_header_label";

          document.getElementById('csp_header_home_label2').className = "csp_header_label2";
          document.getElementById('csp_header_product_label2').className = "csp_header_label2";

          document.getElementById('csp_header_product0_label').className = "csp_header_label";
            document.getElementById('csp_header_product0_label2').className = "csp_header_label2";

          document.getElementById('csp_header_containter').style.display = "block";
		  document.getElementById('csp_footer').style.display = "block";
          UserInfoService.cspCheckLoginState({},function(result) {
              if(result.result === "succeed" && result.loginState === true) {
                $scope.setHeaderName(result);
                  UserInfoService.cspCheckRiskState({},function(res) {
                      if(res.result === "succeed") {
                          if(res.riskstate === false) {
                              $state.go('risklevel');
                          }
                          else {
                              $scope.commentpath = "tpls/comment/themes.html";
                              $scope.showstate = 0;
                          }
                      }
                      else {
                        $('#loginModal').remove();
                          $state.go('home');
                      }
                  })
              }
              else {
                $('#loginModal').remove();
                  $state.go('home');
              }
          })
    }
    $scope.setHeaderName=function(userInfo){
      usercenterService.getUserInfo(userInfo,function(res){
        if(res==false){
          return;
        }
        if(res.conlevel==7||res.conlevel==2||res.conlevel==1)//只有是砖石会员才会显示策略产品
        {
          document.getElementById('product0Btn').style.display='';
          document.getElementById('product0BigBtn').style.display='';
        }
        document.getElementById('header_username').innerHTML=res.tel;
      });
    }

    $scope.cspcommentload = function() {
        window.scrollTo(0,0);
        if($scope.showstate === 0) {
            //读数据库，获取当前所有的模块
            $scope.themes = [{
                'name':'csp',
                'id': '1',
                'description':'客服服务平台，贴心为您服务。您可以在这里留下您对CSP平台的意见及建议',
                'piclink':'images/VCS.png',
                'versions':[]
            },{
                'name':'cms',
                'id':'2',
                'description':'您可以在这里留下您在使用CMS软件过程中遇到的问题或困难，以及您对CMS的意见及建议',
                'piclink':'images/VCS.png',
                'versions':[]
            },{
                'name':'twd',
                'id': '3',
                'description':'您可以在这里留下您在使用TWD软件过程中遇到的问题或困难，以及您对TWD的意见及建议',
                'piclink':'images/VCS.png',
                'versions':[]
            }]
            document.getElementById('csp_comment_themes_waiting').style.display = "none";
            document.getElementById('csp_comment_themes_content').style.display = "block";
            //计算一下屏幕高度*0.8
            var height = document.documentElement.clientHeight * 0.8;
            var minHeight = height + "px";
            document.getElementById('csp_comment_themes').style.minHeight = minHeight;
        }
        if($scope.showstate === 1) {
            //计算一下屏幕高度*0.8
            var height = document.documentElement.clientHeight * 0.8;
            var minHeight = height + "px";
            document.getElementById('csp_module_page').style.minHeight = minHeight;
            var json = {};
            json.modulename = $scope.currentTheme.name;
            $scope.moduleCurrentPage = 1;
            json.page = $scope.moduleCurrentPage;
            json.pageCount = $scope.modulePageCount;
            CommentService.cspCommentSelectOpionByModule(json,function(res) {
                if(res.result === 'succeed') {
                    if(res.data.length === 0) {
                        document.getElementById('csp_module_waiting_label').innerText = "未查询到相关数据";
                    }
                    else {
                        $scope.opions = res.data;
                        for(var i = 0; i< res.data.length; i ++) {
                            //分割图片
                            var picarr = res.data[i].imglink.split(',');
                            if(picarr.length === 1 && picarr[0] === "") {
                                $scope.opions[i].pictures = [];
                            }
                            else {
                                $scope.opions[i].pictures = picarr;
                            }
                            if(res.data[i].likeid === -1) {
                                $scope.opions[i].uplike = false;
                            }
                            else {
                                $scope.opions[i].uplike = true;
                            }
                            $scope.opions[i].replys = [];
                            $scope.opions[i].show = false;
                            $scope.opions[i].currentReply = {};
                        }
                        document.getElementById('csp_module_waiting').style.display = "none";
                        document.getElementById('csp_module_show').style.display = "block";
                        //获取所有的versions
                        var currentVersions = [];
                        for(var j = 0; j < res.data.length; j++) {
                            for(k = 0; k < currentVersions.length; k++) {
                                if(currentVersions[k] == res.data[j].version) {
                                    break;
                                }
                            }
                            if(k >= currentVersions.length) {
                                currentVersions.push(res.data[j].version);
                            }
                        }
                        $scope.currentTheme.versions = currentVersions;
                        //设计分页
                        $scope.moduleTotalPage = Math.ceil(res.count/$scope.modulePageCount) ;
                        $scope.modulePages = [];
                        var start = 1;
                        if( $scope.moduleCurrentPage <= Math.ceil($scope.moduleItemCount/2) || $scope.moduleTotalPage <= $scope.moduleItemCount) {
                            start = 1;
                        }
                        else {
                            start = $scope.moduleCurrentPage - Math.ceil($scope.moduleItemCount/2) +1;
                            if($scope.moduleTotalPage -  start + 1 < $scope.moduleItemCount ) {
                                start = $scope.moduleTotalPage - $scope.moduleItemCount +1;
                            }
                        }
                        for( var r = start ; r < start + 10; r ++ ) {
                            if(r > $scope.moduleTotalPage || $scope.moduleTotalPage <= 1) {
                                break;
                            }
                            else {
                                var json = {};
                                json.num = r;
                                if(r === $scope.moduleCurrentPage) {
                                    json.select = true;
                                }
                                else {
                                    json.select = false;
                                }
                                $scope.modulePages.push(json);
                            }
                        }
                        if($scope.moduleTotalPage <= 1) {
                            $scope.moduleShowPrev = false;
                            $scope.moduleShowNext = false;
                        }
                        else {
                            $scope.moduleShowPrev = true;
                            $scope.moduleShowNext = true;
                        }
                    }
                }
                else {
                    document.getElementById('csp_module_waiting_label').innerText = "查询失败，请检查网络连接";
                }
            })
            $scope.publishTopic.publishModule = $scope.currentTheme.name;
            $scope.publishTopic.loadimg = false;
            $scope.publishTopic.pictures = [];
            $scope.publishTopic.publishVersion = "";
            $scope.publishTopic.content = "";
            $scope.publishTopic.versionerror = false;
            //初始化编辑器
            if(UE.delEditor !== undefined) {
                UE.delEditor("topicEditor");
    			$scope.topicEdit = undefined;
    			$scope.topicEdit = UE.getEditor('topicEditor',{
    				//这里可以选择自己需要的工具按钮名称,此处仅选择如下五个
    				toolbars:[['Undo','Redo','insertimage']],
    				//focus时自动清空初始化时的内容
    				autoClearinitialContent:true,
                    enableAutoSave: false,
    				//关闭字数统计
    				wordCount:true,
    				//关闭elementPath
    				elementPathEnabled:false,
                    maximumWords:1000,
    				//宽度设计
    				initialFrameWidth: '100%',
    				//默认的编辑区域高度
    				initialFrameHeight:300,
    				//更多其他参数，请参考ueditor.config.js中的配置项
    				zIndex: 0,
    				autoHeightEnabled: false
    			})
    			$scope.topicEdit.ready(function() {
    				$scope.topicEdit.setContent("请输入您的意见或建议");
    			})
    			$scope.topicEdit.addListener('contentChange',function() {
    				$scope.publishTopic.content = $scope.topicEdit.getContent();
    			})
            }
            else {
                document.getElementById('editload').style.display = "block";
                $scope.timePromise = undefined;
                $scope.timePromise = $interval(function(){
                    if(UE.delEditor !== undefined) {
                        $interval.cancel($scope.timePromise);
  					    $scope.timePromise = undefined;
                        document.getElementById('editload').style.display = "none";
                        UE.delEditor("topicEditor");
            			$scope.topicEdit = undefined;
            			$scope.topicEdit = UE.getEditor('topicEditor',{
            				//这里可以选择自己需要的工具按钮名称,此处仅选择如下五个
            				toolbars:[['Undo','Redo','insertimage']],
            				//focus时自动清空初始化时的内容
            				autoClearinitialContent:true,
                            enableAutoSave: false,
            				//关闭字数统计
            				wordCount:true,
            				//关闭elementPath
            				elementPathEnabled:false,
                            maximumWords:1000,
            				//宽度设计
            				initialFrameWidth: '100%',
            				//默认的编辑区域高度
            				initialFrameHeight:300,
            				//更多其他参数，请参考ueditor.config.js中的配置项
            				zIndex: 0,
            				autoHeightEnabled: false
            			})
            			$scope.topicEdit.ready(function() {
            				$scope.topicEdit.setContent("请输入您的意见或建议");
            			})
            			$scope.topicEdit.addListener('contentChange',function() {
            				$scope.publishTopic.content = $scope.topicEdit.getContent();
            			})
                    }
                },1,1000000);
            }
        }
    }
    $scope.cspCommentGoOpion = function(theme) {
        // if(UE.delEditor != undefined) {
        //     $scope.currentTheme = theme;
        //     $scope.currentTheme.currentVersion = "";
        //     $scope.commentpath = "tpls/comment/module.html";
        //     $scope.showstate = 1;
        // }
        $scope.currentTheme = theme;
        $scope.currentTheme.currentVersion = "";
        $scope.commentpath = "tpls/comment/module.html";
        $scope.showstate = 1;
    }
    $scope.cspBackToTheme = function() {
        $scope.currentTheme = {};
        $scope.commentpath = "tpls/comment/themes.html";
        $scope.showstate = 0;
    }
    $scope.cspReply = function(index) {
        //$scope.opions[index].show = !$scope.opions[index].show;
        if($scope.opions[index].show === true) {
            $scope.opions[index].show = false;
        }
        else {
            // $scope.opions[index].replys = [1,2,3];
            var selectjson = {};
            selectjson.tid = $scope.opions[index].tid;
            CommentService.cspCommentGetReplysByTid(selectjson,function(res) {
                if(res.result === "succeed") {
                    $scope.opions[index].rcount = res.data.length;
                    $scope.opions[index].replys = res.data;
                    for(var i=0; i< res.data.length; i++) {
                        if(res.data[i].rto === "") {
                            $scope.opions[index].replys[i].replyposter = true;
                        }
                        else {
                            $scope.opions[index].replys[i].replyposter = false;
                        }
                    }
                    $scope.opions[index].show = true;
                    $scope.opions[index].currentReply.tid = $scope.opions[index].tid;
                    $scope.opions[index].currentReply.reply_to = "";
                    $scope.opions[index].currentReply.error = true;
                    document.getElementById('replyarea'+index).placeholder = " 回复 ";
                    document.getElementById('replyarea'+index).value = "";
                }
                else {
                    alert("网络连接错误，请检查网络");
                }
            })

        }
    }
    $scope.cspReplyTo = function(rootindex,index) {
        document.getElementById('replyarea'+rootindex).placeholder = " 回复 "+ $scope.opions[rootindex].replys[index].rfrom;
        $scope.opions[rootindex].currentReply.reply_to = $scope.opions[rootindex].replys[index].uid;
        $scope.opions[rootindex].currentReply.error = true;
        document.getElementById('replyarea'+rootindex).value = "";
    }
    $scope.cspModuleReplyReady = function (index) {
        $scope.opions[index].currentReply.error = true;
    }
    $scope.cspModuleReplayCommit = function(index) {
        if(document.getElementById('replyarea'+index).value === "") {
            $scope.opions[index].currentReply.error = false;
        }
        else {
            $scope.opions[index].currentReply.content = document.getElementById('replyarea'+index).value;
            CommentService.cspModuleAddReply($scope.opions[index].currentReply,function(res) {
                if(res.result === "succeed") {
                    var selectjson = {};
                    selectjson.tid = $scope.opions[index].tid;
                    CommentService.cspCommentGetReplysByTid(selectjson,function(result) {
                        if(result.result === "succeed") {
                            $scope.opions[index].rcount = result.data.length;
                            $scope.opions[index].replys = result.data;
                            $scope.opions[index].show = true;
                            $scope.opions[index].currentReply.tid = $scope.opions[index].tid;
                            $scope.opions[index].currentReply.reply_to = $scope.opions[index].uid;
                            $scope.opions[index].currentReply.error = true;
                            document.getElementById('replyarea'+index).placeholder = " 回复 "+ $scope.opions[index].username;
                            document.getElementById('replyarea'+index).value = "";
                        }
                        else {
                            alert("网络连接错误，请检查网络");
                        }
                    })
                }
                else {
                    alert("回复失败")
                }
            })
        }
    }
    $scope.cspModuleSelectOpionsByVersion = function(version) {
        window.scrollTo(0,0);
        document.getElementById('csp_module_waiting').style.display = "block";
        document.getElementById('csp_module_show').style.display = "none";
        document.getElementById('csp_module_waiting_label').innerText = "数据加载中，请稍候";
        if(typeof(version) === "undefined" || version === "") {
            var json = {};
            json.modulename = $scope.currentTheme.name;
            $scope.moduleCurrentPage = 1;
            json.page = $scope.moduleCurrentPage;
            json.pageCount = $scope.modulePageCount;
            CommentService.cspCommentSelectOpionByModule(json,function(res) {
                if(res.result === 'succeed') {
                    if(res.data.length === 0) {
                        document.getElementById('csp_module_waiting_label').innerText = "未查询到相关数据";
                    }
                    else {
                        $scope.opions = res.data;
                        for(var i = 0; i< res.data.length; i ++) {
                            //分割图片
                            var picarr = res.data[i].imglink.split(',');
                            if(picarr.length === 1 && picarr[0] === "") {
                                $scope.opions[i].pictures = [];
                            }
                            else {
                                $scope.opions[i].pictures = picarr;
                            }
                            if(res.data[i].likeid === -1) {
                                $scope.opions[i].uplike = false;
                            }
                            else {
                                $scope.opions[i].uplike = true;
                            }
                            $scope.opions[i].replys = [];
                            $scope.opions[i].show = false;
                            $scope.opions[i].currentReply = {};

                        }
                        document.getElementById('csp_module_waiting').style.display = "none";
                        document.getElementById('csp_module_show').style.display = "block";
                        //设计分页
                        $scope.moduleTotalPage = Math.ceil(res.count/$scope.modulePageCount) ;
                        $scope.modulePages = [];
                        var start = 1;
                        if( $scope.moduleCurrentPage <= Math.ceil($scope.moduleItemCount/2) || $scope.moduleTotalPage <= $scope.moduleItemCount) {
                            start = 1;
                        }
                        else {
                            start = $scope.moduleCurrentPage - Math.ceil($scope.moduleItemCount/2) +1;
                            if($scope.moduleTotalPage -  start + 1 < $scope.moduleItemCount ) {
                                start = $scope.moduleTotalPage - $scope.moduleItemCount +1;
                            }
                        }
                        for( var r = start ; r < start + 10; r ++ ) {
                            if(r > $scope.moduleTotalPage || $scope.moduleTotalPage <= 1) {
                                break;
                            }
                            else {
                                var json = {};
                                json.num = r;
                                if(r === $scope.moduleCurrentPage) {
                                    json.select = true;
                                }
                                else {
                                    json.select = false;
                                }
                                $scope.modulePages.push(json);
                            }
                        }
                        if($scope.moduleTotalPage <= 1) {
                            $scope.moduleShowPrev = false;
                            $scope.moduleShowNext = false;
                        }
                        else {
                            $scope.moduleShowPrev = true;
                            $scope.moduleShowNext = true;
                        }
                    }
                }
                else {
                    document.getElementById('csp_module_waiting_label').innerText = "查询失败，请检查网络连接";
                }
            })
        }
        else {
            $scope.currentTheme.currentVersion = version;
            var jsontemp = {};
            jsontemp.modulename = $scope.currentTheme.name;
            jsontemp.moduleversion = $scope.currentTheme.currentVersion;
            $scope.moduleCurrentPage = 1;
            jsontemp.page = $scope.moduleCurrentPage;
            jsontemp.pageCount = $scope.modulePageCount;
            CommentService.cspCommentSelectOpionsByVersion(jsontemp,function(res) {
                if(res.result === 'succeed') {
                    if(res.data.length === 0) {
                        document.getElementById('csp_module_waiting_label').innerText = "未查询到相关数据";
                    }
                    else {
                        $scope.opions = res.data;
                        for(var i = 0; i< res.data.length; i ++) {
                            //分割图片
                            var picarr = res.data[i].imglink.split(',');
                            if(picarr.length === 1 && picarr[0] === "") {
                                $scope.opions[i].pictures = [];
                            }
                            else {
                                $scope.opions[i].pictures = picarr;
                            }
                            if(res.data[i].likeid === -1) {
                                $scope.opions[i].uplike = false;
                            }
                            else {
                                $scope.opions[i].uplike = true;
                            }
                            $scope.opions[i].replys = [];
                            $scope.opions[i].show = false;
                            $scope.opions[i].currentReply = {};
                        }
                        document.getElementById('csp_module_waiting').style.display = "none";
                        document.getElementById('csp_module_show').style.display = "block";
                        //设计分页
                        $scope.moduleTotalPage = Math.ceil(res.count/$scope.modulePageCount) ;
                        $scope.modulePages = [];
                        var start = 1;
                        if( $scope.moduleCurrentPage <= Math.ceil($scope.moduleItemCount/2) || $scope.moduleTotalPage <= $scope.moduleItemCount) {
                            start = 1;
                        }
                        else {
                            start = $scope.moduleCurrentPage - Math.ceil($scope.moduleItemCount/2) +1;
                            if($scope.moduleTotalPage -  start + 1 < $scope.moduleItemCount ) {
                                start = $scope.moduleTotalPage - $scope.moduleItemCount +1;
                            }
                        }
                        for( var r = start ; r < start + 10; r ++ ) {
                            if(r > $scope.moduleTotalPage || $scope.moduleTotalPage <= 1) {
                                break;
                            }
                            else {
                                var json = {};
                                json.num = r;
                                if(r === $scope.moduleCurrentPage) {
                                    json.select = true;
                                }
                                else {
                                    json.select = false;
                                }
                                $scope.modulePages.push(json);
                            }
                        }
                        if($scope.moduleTotalPage <= 1) {
                            $scope.moduleShowPrev = false;
                            $scope.moduleShowNext = false;
                        }
                        else {
                            $scope.moduleShowPrev = true;
                            $scope.moduleShowNext = true;
                        }
                    }
                }
                else {
                    document.getElementById('csp_module_waiting_label').innerText = "查询失败，请检查网络连接";
                }
            })
        }
    }

    $scope.cspModulePublishOpion = function() {
        var height = document.getElementById('csp_module_publish_div').offsetTop;
        window.scrollTo(0,height - 100);
    }
    $scope.cspModulePublishCancel = function() {
        var json = {};
        json.filepath = $scope.publishTopic.pictures;
        json.count = $scope.publishTopic.pictures.length;
        CommentService.cspCommentDeleteFile(json,function(res) {
        });
        $('.ui.long.small.modal.csp_module_publish_modal').modal('hide');
    }
    $scope.cspModuleSelectFile = function() {
        if($scope.publishTopic.pictures.length >= 6 ) {
            document.getElementById("csp_module_file_tips_label").innerText = "您最多只能上传6张图片";
        }
        else {
            document.getElementById("csp_module_file_input").click();
        }
    }
    $scope.cspModuleFileChange = function() {
        $scope.publishTopic.loadimg = true;
        document.getElementById("csp_module_file_tips_label").innerText = "";
        var fd = new FormData();
        var file = document.getElementById('csp_module_file_input').files[0];
        fd.append('file', file);
        CommentService.cspCommentUploadFile(fd,function(res) {
            document.getElementById('csp_module_file_form').reset();;
            if(res.result === "succeed") {
                $scope.publishTopic.pictures.push(res.piclink);
                $scope.publishTopic.loadimg = false;
            }
            else {
                $scope.publishTopic.loadimg = false;
                document.getElementById("csp_module_file_tips_label").innerText = "文件上传失败";
            }
        })
    }
    $scope.cspDeletePic = function(index) {
        var json = {};
        json.filepath = $scope.publishTopic.pictures[index] ;
        json.count = 1;
        CommentService.cspCommentDeleteFile(json,function(res) {
            if(res.result === "succeed") {
                $scope.publishTopic.pictures.splice(index,1);
            }
            else {
                alert("删除文件失败，请检查网络连接");
            }
        })

    }

    $scope.cspModulePublishVersionChange = function() {
        $scope.publishTopic.versionerror = false;
    }

    $scope.cspModulePublishCommit = function() {
        var error = false;
        if(typeof($scope.publishTopic.content) === "undefined" || $scope.publishTopic.content === "" ) {
            error = true;
        }
        if(typeof($scope.publishTopic.publishVersion) === "undefined" || $scope.publishTopic.publishVersion === "") {
            error = true;
            $scope.publishTopic.versionerror = true;
        }
        if (error === true) {}
        else {
            //处理图片，将图片分割
            var imgarr = $scope.publishTopic.content.match(/src=\"([^\"]*)\"/gi);
            if(imgarr !== null) {
                for(var i = 0 ; i < imgarr.length; i++) {
                    $scope.publishTopic.pictures[i] = imgarr[i].substring(5,imgarr[i].length-1)
                }
            }
            var commitjson = {};
            //var content1 = $scope.publishTopic.content.replace(/<img(?:.|\s)*?>/g, "");
            //commitjson.content = content1.replace(/<p><\/p>/g,"");
            commitjson.content = $scope.topicEdit.getContentTxt();
            commitjson.anonymous = '0';
            commitjson.app = $scope.publishTopic.publishModule;
            commitjson.version = $scope.publishTopic.publishVersion;
            commitjson.imglink = $scope.publishTopic.pictures.join(",");
            CommentService.cspCommentAddOpion(commitjson,function(res) {
                if(res.result === "succeed") {
                    $scope.publishTopic.publishModule = $scope.currentTheme.name;
                    $scope.publishTopic.loadimg = false;
                    $scope.publishTopic.pictures = [];
                    $scope.publishTopic.publishVersion = "";
                    $scope.publishTopic.content = "";
                    $scope.publishTopic.versionerror = false;
                    $scope.topicEdit.setContent("请输入您的问题或建议");
                    window.scrollTo(0,0);
                    document.getElementById('csp_module_waiting').style.display = "block";
                    document.getElementById('csp_module_show').style.display = "none";
                    document.getElementById('csp_module_waiting_label').innerText = "数据加载中，请稍候";
                    var json = {};
                    json.modulename = $scope.currentTheme.name;
                    $scope.moduleCurrentPage = 1;
                    json.page = $scope.moduleCurrentPage;
                    json.pageCount = $scope.modulePageCount;
                    CommentService.cspCommentSelectOpionByModule(json,function(result) {
                        if(result.result === 'succeed') {
                            if(result.data.length === 0) {
                                document.getElementById('csp_module_waiting_label').innerText = "未查询到相关数据";
                            }
                            else {
                                $scope.opions = result.data;
                                for(var i = 0; i< result.data.length; i ++) {
                                    //分割图片
                                    var picarr = result.data[i].imglink.split(',');
                                    if(picarr.length === 1 && picarr[0] === "") {
                                        $scope.opions[i].pictures = [];
                                    }
                                    else {
                                        $scope.opions[i].pictures = picarr;
                                    }
                                    if(result.data[i].likeid === -1) {
                                        $scope.opions[i].uplike = false;
                                    }
                                    else {
                                        $scope.opions[i].uplike = true;
                                    }
                                    $scope.opions[i].replys = [];
                                    $scope.opions[i].show = false;
                                    $scope.opions[i].currentReply = {};
                                }
                                document.getElementById('csp_module_waiting').style.display = "none";
                                document.getElementById('csp_module_show').style.display = "block";
                                //设计分页
                                $scope.moduleTotalPage = Math.ceil(result.count/$scope.modulePageCount) ;
                                $scope.modulePages = [];
                                var start = 1;
                                if( $scope.moduleCurrentPage <= Math.ceil($scope.moduleItemCount/2) || $scope.moduleTotalPage <= $scope.moduleItemCount) {
                                    start = 1;
                                }
                                else {
                                    start = $scope.moduleCurrentPage - Math.ceil($scope.moduleItemCount/2) +1;
                                    if($scope.moduleTotalPage -  start + 1 < $scope.moduleItemCount ) {
                                        start = $scope.moduleTotalPage - $scope.moduleItemCount +1;
                                    }
                                }
                                for( var r = start ; r < start + 10; r ++ ) {
                                    if(r > $scope.moduleTotalPage || $scope.moduleTotalPage <= 1) {
                                        break;
                                    }
                                    else {
                                        var json = {};
                                        json.num = r;
                                        if(r === $scope.moduleCurrentPage) {
                                            json.select = true;
                                        }
                                        else {
                                            json.select = false;
                                        }
                                        $scope.modulePages.push(json);
                                    }
                                }
                                if($scope.moduleTotalPage <= 1) {
                                    $scope.moduleShowPrev = false;
                                    $scope.moduleShowNext = false;
                                }
                                else {
                                    $scope.moduleShowPrev = true;
                                    $scope.moduleShowNext = true;
                                }
                            }
                        }
                        else {
                            document.getElementById('csp_module_waiting_label').innerText = "查询失败，请检查网络连接";
                        }
                    })
                }
                else {
                    alert("发布失败")
                }
            })
        }
    }
    $scope.cspModuleAddLike = function(index) {
        var json = {};
        json.tid = $scope.opions[index].tid;
        CommentService.cspCommentAddLike(json,function(res) {
            if(res.result === "succeed") {
                $scope.opions[index].uplike = !$scope.opions[index].uplike;
                $scope.opions[index].ucount = $scope.opions[index].ucount +1;
                $scope.opions[index].likeid = res.likeid;
            }
            else {
                alert("操作失败");
            }
        })
    }
    $scope.cspModuleCancelLike = function(index) {
        var json = {};
        json.likeid = $scope.opions[index].likeid;
        CommentService.cspCommentCancelLike(json,function(res) {
            if(res.result === "succeed") {
                $scope.opions[index].uplike = !$scope.opions[index].uplike;
                $scope.opions[index].ucount = $scope.opions[index].ucount - 1;
            }
            else {
                alert("操作失败");
            }
        })
    }

    $scope.cspModuleShowBigImg = function(rootIndex,index) {
        console.log(rootIndex,index);
        document.getElementById('csp_module_big_img_show').style.width = "auto";
        document.getElementById('csp_module_big_img_show').style.height = "auto";
        $scope.currentBigImg.count = $scope.opions[rootIndex].pictures.length;
        $scope.currentBigImg.nowindex = index;
        $scope.currentBigImg.pictures = $scope.opions[rootIndex].pictures;
        $scope.currentBigImg.bigImgSrc = $scope.opions[rootIndex].pictures[index];
        $scope.currentBigImg.tipShow = false;
        $scope.currentBigImg.tipContent = "";
        if(index === 0) {
            $scope.currentBigImg.prevTitle = "当前已经是第一张";
        }
        else {
            $scope.currentBigImg.prevTitle = "上一张";
        }
        if($scope.currentBigImg.count === index + 1) {
            $scope.currentBigImg.nextTitle = "当前已经是最后一张";
        }
        else {
            $scope.currentBigImg.nextTitle = "下一张";
        }
        $scope.showBigImage = true;
    }

    $scope.cspModuleShowPreImg = function () {
        if($scope.currentBigImg.nowindex === 0) {
            $scope.currentBigImg.tipContent = "当前已经是第一张";
            $scope.currentBigImg.tipShow = true;
            $scope.timePromise = undefined;
            $scope.timePromise = $interval(function(){
                $interval.cancel($scope.timePromise);
                $scope.timePromise = undefined;
                $scope.currentBigImg.tipShow = false;
            },1000,100);
        }
        else {
            document.getElementById('csp_module_big_img_show').style.width = "auto";
            document.getElementById('csp_module_big_img_show').style.height = "auto";
            $scope.currentBigImg.nowindex = $scope.currentBigImg.nowindex -1;
            $scope.currentBigImg.bigImgSrc = $scope.currentBigImg.pictures[$scope.currentBigImg.nowindex];
            if($scope.currentBigImg.nowindex === 0) {
                $scope.currentBigImg.prevTitle = "当前已经是第一张";
            }
            else {
                $scope.currentBigImg.prevTitle = "上一张";
            }
            if($scope.currentBigImg.count === $scope.currentBigImg.nowindex + 1) {
                $scope.currentBigImg.nextTitle = "当前已经是最后一张";
            }
            else {
                $scope.currentBigImg.nextTitle = "下一张";
            }
        }
    }
    $scope.cspModuleShowNextImg = function () {
        if($scope.currentBigImg.nowindex === $scope.currentBigImg.count -1) {
            $scope.currentBigImg.tipContent = "当前已经是最后一张";
            $scope.currentBigImg.tipShow = true;
            $scope.timePromise = undefined;
            $scope.timePromise = $interval(function(){
                $interval.cancel($scope.timePromise);
                $scope.timePromise = undefined;
                $scope.currentBigImg.tipShow = false;
            },1000,100);
        }
        else {
            document.getElementById('csp_module_big_img_show').style.width = "auto";
            document.getElementById('csp_module_big_img_show').style.height = "auto";
            $scope.currentBigImg.nowindex = $scope.currentBigImg.nowindex + 1;
            $scope.currentBigImg.bigImgSrc = $scope.currentBigImg.pictures[$scope.currentBigImg.nowindex];
            if($scope.currentBigImg.nowindex === 0) {
                $scope.currentBigImg.prevTitle = "当前已经是第一张";
            }
            else {
                $scope.currentBigImg.prevTitle = "上一张";
            }
            if($scope.currentBigImg.count === $scope.currentBigImg.nowindex + 1) {
                $scope.currentBigImg.nextTitle = "当前已经是最后一张";
            }
            else {
                $scope.currentBigImg.nextTitle = "下一张";
            }
        }
    }
    $scope.cspModuleShowBackClick = function() {
        $scope.showBigImage = false;
    }

    $scope.cspModuleShowContentClick = function(e) {
        e.stopPropagation();
    }
    $scope.cspModuleShowBigClose = function(e) {
        $scope.showBigImage = false;
        e.stopPropagation();
    }

    $scope.cspModuleLoopToPage = function(page) {
        if(page.num === $scope.moduleCurrentPage) {
            //啥也不干
        }
        else {
            if($scope.currentTheme.currentVersion === "") {
                window.scrollTo(0,0);
                document.getElementById('csp_module_waiting').style.display = "block";
                document.getElementById('csp_module_show').style.display = "none";
                document.getElementById('csp_module_waiting_label').innerText = "数据加载中，请稍候";
                var json = {};
                json.modulename = $scope.currentTheme.name;
                $scope.moduleCurrentPage = page.num;
                json.page = $scope.moduleCurrentPage;
                json.pageCount = $scope.modulePageCount;
                CommentService.cspCommentSelectOpionByModule(json,function(result) {
                    if(result.result === 'succeed') {
                        if(result.data.length === 0) {
                            document.getElementById('csp_module_waiting_label').innerText = "未查询到相关数据";
                        }
                        else {
                            $scope.opions = result.data;
                            for(var i = 0; i< result.data.length; i ++) {
                                //分割图片
                                var picarr = result.data[i].imglink.split(',');
                                if(picarr.length === 1 && picarr[0] === "") {
                                    $scope.opions[i].pictures = [];
                                }
                                else {
                                    $scope.opions[i].pictures = picarr;
                                }
                                if(result.data[i].likeid === -1) {
                                    $scope.opions[i].uplike = false;
                                }
                                else {
                                    $scope.opions[i].uplike = true;
                                }
                                $scope.opions[i].replys = [];
                                $scope.opions[i].show = false;
                                $scope.opions[i].currentReply = {};
                            }
                            document.getElementById('csp_module_waiting').style.display = "none";
                            document.getElementById('csp_module_show').style.display = "block";
                            //设计分页
                            $scope.moduleTotalPage = Math.ceil(result.count/$scope.modulePageCount) ;
                            $scope.modulePages = [];
                            var start = 1;
                            if( $scope.moduleCurrentPage <= Math.ceil($scope.moduleItemCount/2) || $scope.moduleTotalPage <= $scope.moduleItemCount) {
                                start = 1;
                            }
                            else {
                                start = $scope.moduleCurrentPage - Math.ceil($scope.moduleItemCount/2) +1;
                                if($scope.moduleTotalPage -  start + 1 < $scope.moduleItemCount ) {
                                    start = $scope.moduleTotalPage - $scope.moduleItemCount +1;
                                }
                            }
                            for( var r = start ; r < start + 10; r ++ ) {
                                if(r > $scope.moduleTotalPage || $scope.moduleTotalPage <= 1) {
                                    break;
                                }
                                else {
                                    var json = {};
                                    json.num = r;
                                    if(r === $scope.moduleCurrentPage) {
                                        json.select = true;
                                    }
                                    else {
                                        json.select = false;
                                    }
                                    $scope.modulePages.push(json);
                                }
                            }
                            if($scope.moduleTotalPage <= 1) {
                                $scope.moduleShowPrev = false;
                                $scope.moduleShowNext = false;
                            }
                            else {
                                $scope.moduleShowPrev = true;
                                $scope.moduleShowNext = true;
                            }
                        }
                    }
                    else {
                        document.getElementById('csp_module_waiting_label').innerText = "查询失败，请检查网络连接";
                    }
                })
            }
            else {
                window.scrollTo(0,0);
                document.getElementById('csp_module_waiting').style.display = "block";
                document.getElementById('csp_module_show').style.display = "none";
                document.getElementById('csp_module_waiting_label').innerText = "数据加载中，请稍候";
                var jsontemp = {};
                jsontemp.modulename = $scope.currentTheme.name;
                jsontemp.moduleversion = $scope.currentTheme.currentVersion;
                $scope.moduleCurrentPage = page.num;
                jsontemp.page = $scope.moduleCurrentPage;
                jsontemp.pageCount = $scope.modulePageCount;
                CommentService.cspCommentSelectOpionsByVersion(jsontemp,function(res) {
                    if(res.result === 'succeed') {
                        if(res.data.length === 0) {
                            document.getElementById('csp_module_waiting_label').innerText = "未查询到相关数据";
                        }
                        else {
                            $scope.opions = res.data;
                            for(var i = 0; i< res.data.length; i ++) {
                                //分割图片
                                var picarr = res.data[i].imglink.split(',');
                                if(picarr.length === 1 && picarr[0] === "") {
                                    $scope.opions[i].pictures = [];
                                }
                                else {
                                    $scope.opions[i].pictures = picarr;
                                }
                                if(res.data[i].likeid === -1) {
                                    $scope.opions[i].uplike = false;
                                }
                                else {
                                    $scope.opions[i].uplike = true;
                                }
                                $scope.opions[i].replys = [];
                                $scope.opions[i].show = false;
                                $scope.opions[i].currentReply = {};
                            }
                            document.getElementById('csp_module_waiting').style.display = "none";
                            document.getElementById('csp_module_show').style.display = "block";
                            //设计分页
                            $scope.moduleTotalPage = Math.ceil(res.count/$scope.modulePageCount) ;
                            $scope.modulePages = [];
                            var start = 1;
                            if( $scope.moduleCurrentPage <= Math.ceil($scope.moduleItemCount/2) || $scope.moduleTotalPage <= $scope.moduleItemCount) {
                                start = 1;
                            }
                            else {
                                start = $scope.moduleCurrentPage - Math.ceil($scope.moduleItemCount/2) +1;
                                if($scope.moduleTotalPage -  start + 1 < $scope.moduleItemCount ) {
                                    start = $scope.moduleTotalPage - $scope.moduleItemCount +1;
                                }
                            }
                            for( var r = start ; r < start + 10; r ++ ) {
                                if(r > $scope.moduleTotalPage || $scope.moduleTotalPage <= 1) {
                                    break;
                                }
                                else {
                                    var json = {};
                                    json.num = r;
                                    if(r === $scope.moduleCurrentPage) {
                                        json.select = true;
                                    }
                                    else {
                                        json.select = false;
                                    }
                                    $scope.modulePages.push(json);
                                }
                            }
                            if($scope.moduleTotalPage <= 1) {
                                $scope.moduleShowPrev = false;
                                $scope.moduleShowNext = false;
                            }
                            else {
                                $scope.moduleShowPrev = true;
                                $scope.moduleShowNext = true;
                            }
                        }
                    }
                    else {
                        document.getElementById('csp_module_waiting_label').innerText = "查询失败，请检查网络连接";
                    }
                })
            }
        }
    }

    $scope.cspModuleLoopToFirst = function() {
        if($scope.moduleCurrentPage === 1) {}
        else {
            if($scope.currentTheme.currentVersion === "") {
                window.scrollTo(0,0);
                document.getElementById('csp_module_waiting').style.display = "block";
                document.getElementById('csp_module_show').style.display = "none";
                document.getElementById('csp_module_waiting_label').innerText = "数据加载中，请稍候";
                var json = {};
                json.modulename = $scope.currentTheme.name;
                $scope.moduleCurrentPage = 1;
                json.page = $scope.moduleCurrentPage;
                json.pageCount = $scope.modulePageCount;
                CommentService.cspCommentSelectOpionByModule(json,function(result) {
                    if(result.result === 'succeed') {
                        if(result.data.length === 0) {
                            document.getElementById('csp_module_waiting_label').innerText = "未查询到相关数据";
                        }
                        else {
                            $scope.opions = result.data;
                            for(var i = 0; i< result.data.length; i ++) {
                                //分割图片
                                var picarr = result.data[i].imglink.split(',');
                                if(picarr.length === 1 && picarr[0] === "") {
                                    $scope.opions[i].pictures = [];
                                }
                                else {
                                    $scope.opions[i].pictures = picarr;
                                }
                                if(result.data[i].likeid === -1) {
                                    $scope.opions[i].uplike = false;
                                }
                                else {
                                    $scope.opions[i].uplike = true;
                                }
                                $scope.opions[i].replys = [];
                                $scope.opions[i].show = false;
                                $scope.opions[i].currentReply = {};
                            }
                            document.getElementById('csp_module_waiting').style.display = "none";
                            document.getElementById('csp_module_show').style.display = "block";
                            //设计分页
                            $scope.moduleTotalPage = Math.ceil(result.count/$scope.modulePageCount) ;
                            $scope.modulePages = [];
                            var start = 1;
                            if( $scope.moduleCurrentPage <= Math.ceil($scope.moduleItemCount/2) || $scope.moduleTotalPage <= $scope.moduleItemCount) {
                                start = 1;
                            }
                            else {
                                start = $scope.moduleCurrentPage - Math.ceil($scope.moduleItemCount/2) +1;
                                if($scope.moduleTotalPage -  start + 1 < $scope.moduleItemCount ) {
                                    start = $scope.moduleTotalPage - $scope.moduleItemCount +1;
                                }
                            }
                            for( var r = start ; r < start + 10; r ++ ) {
                                if(r > $scope.moduleTotalPage || $scope.moduleTotalPage <= 1) {
                                    break;
                                }
                                else {
                                    var json = {};
                                    json.num = r;
                                    if(r === $scope.moduleCurrentPage) {
                                        json.select = true;
                                    }
                                    else {
                                        json.select = false;
                                    }
                                    $scope.modulePages.push(json);
                                }
                            }
                            if($scope.moduleTotalPage <= 1) {
                                $scope.moduleShowPrev = false;
                                $scope.moduleShowNext = false;
                            }
                            else {
                                $scope.moduleShowPrev = true;
                                $scope.moduleShowNext = true;
                            }
                        }
                    }
                    else {
                        document.getElementById('csp_module_waiting_label').innerText = "查询失败，请检查网络连接";
                    }
                })
            }
            else {
                window.scrollTo(0,0);
                document.getElementById('csp_module_waiting').style.display = "block";
                document.getElementById('csp_module_show').style.display = "none";
                document.getElementById('csp_module_waiting_label').innerText = "数据加载中，请稍候";
                var jsontemp = {};
                jsontemp.modulename = $scope.currentTheme.name;
                jsontemp.moduleversion = $scope.currentTheme.currentVersion;
                $scope.moduleCurrentPage = 1;
                jsontemp.page = $scope.moduleCurrentPage;
                jsontemp.pageCount = $scope.modulePageCount;
                CommentService.cspCommentSelectOpionsByVersion(jsontemp,function(res) {
                    if(res.result === 'succeed') {
                        if(res.data.length === 0) {
                            document.getElementById('csp_module_waiting_label').innerText = "未查询到相关数据";
                        }
                        else {
                            $scope.opions = res.data;
                            for(var i = 0; i< res.data.length; i ++) {
                                //分割图片
                                var picarr = res.data[i].imglink.split(',');
                                if(picarr.length === 1 && picarr[0] === "") {
                                    $scope.opions[i].pictures = [];
                                }
                                else {
                                    $scope.opions[i].pictures = picarr;
                                }
                                if(res.data[i].likeid === -1) {
                                    $scope.opions[i].uplike = false;
                                }
                                else {
                                    $scope.opions[i].uplike = true;
                                }
                                $scope.opions[i].replys = [];
                                $scope.opions[i].show = false;
                                $scope.opions[i].currentReply = {};
                            }
                            document.getElementById('csp_module_waiting').style.display = "none";
                            document.getElementById('csp_module_show').style.display = "block";
                            //设计分页
                            $scope.moduleTotalPage = Math.ceil(res.count/$scope.modulePageCount) ;
                            $scope.modulePages = [];
                            var start = 1;
                            if( $scope.moduleCurrentPage <= Math.ceil($scope.moduleItemCount/2) || $scope.moduleTotalPage <= $scope.moduleItemCount) {
                                start = 1;
                            }
                            else {
                                start = $scope.moduleCurrentPage - Math.ceil($scope.moduleItemCount/2) +1;
                                if($scope.moduleTotalPage -  start + 1 < $scope.moduleItemCount ) {
                                    start = $scope.moduleTotalPage - $scope.moduleItemCount +1;
                                }
                            }
                            for( var r = start ; r < start + 10; r ++ ) {
                                if(r > $scope.moduleTotalPage || $scope.moduleTotalPage <= 1) {
                                    break;
                                }
                                else {
                                    var json = {};
                                    json.num = r;
                                    if(r === $scope.moduleCurrentPage) {
                                        json.select = true;
                                    }
                                    else {
                                        json.select = false;
                                    }
                                    $scope.modulePages.push(json);
                                }
                            }
                            if($scope.moduleTotalPage <= 1) {
                                $scope.moduleShowPrev = false;
                                $scope.moduleShowNext = false;
                            }
                            else {
                                $scope.moduleShowPrev = true;
                                $scope.moduleShowNext = true;
                            }
                        }
                    }
                    else {
                        document.getElementById('csp_module_waiting_label').innerText = "查询失败，请检查网络连接";
                    }
                })
            }
        }
    }

    $scope.cspModuleLoopPrev = function() {
        if($scope.moduleCurrentPage === 1) {}
        else {
            if($scope.currentTheme.currentVersion === "") {
                window.scrollTo(0,0);
                document.getElementById('csp_module_waiting').style.display = "block";
                document.getElementById('csp_module_show').style.display = "none";
                document.getElementById('csp_module_waiting_label').innerText = "数据加载中，请稍候";
                var json = {};
                json.modulename = $scope.currentTheme.name;
                $scope.moduleCurrentPage = $scope.moduleCurrentPage -1;
                json.page = $scope.moduleCurrentPage;
                json.pageCount = $scope.modulePageCount;
                CommentService.cspCommentSelectOpionByModule(json,function(result) {
                    if(result.result === 'succeed') {
                        if(result.data.length === 0) {
                            document.getElementById('csp_module_waiting_label').innerText = "未查询到相关数据";
                        }
                        else {
                            $scope.opions = result.data;
                            for(var i = 0; i< result.data.length; i ++) {
                                //分割图片
                                var picarr = result.data[i].imglink.split(',');
                                if(picarr.length === 1 && picarr[0] === "") {
                                    $scope.opions[i].pictures = [];
                                }
                                else {
                                    $scope.opions[i].pictures = picarr;
                                }
                                if(result.data[i].likeid === -1) {
                                    $scope.opions[i].uplike = false;
                                }
                                else {
                                    $scope.opions[i].uplike = true;
                                }
                                $scope.opions[i].replys = [];
                                $scope.opions[i].show = false;
                                $scope.opions[i].currentReply = {};
                            }
                            document.getElementById('csp_module_waiting').style.display = "none";
                            document.getElementById('csp_module_show').style.display = "block";
                            //设计分页
                            $scope.moduleTotalPage = Math.ceil(result.count/$scope.modulePageCount) ;
                            $scope.modulePages = [];
                            var start = 1;
                            if( $scope.moduleCurrentPage <= Math.ceil($scope.moduleItemCount/2) || $scope.moduleTotalPage <= $scope.moduleItemCount) {
                                start = 1;
                            }
                            else {
                                start = $scope.moduleCurrentPage - Math.ceil($scope.moduleItemCount/2) +1;
                                if($scope.moduleTotalPage -  start + 1 < $scope.moduleItemCount ) {
                                    start = $scope.moduleTotalPage - $scope.moduleItemCount +1;
                                }
                            }
                            for( var r = start ; r < start + 10; r ++ ) {
                                if(r > $scope.moduleTotalPage || $scope.moduleTotalPage <= 1) {
                                    break;
                                }
                                else {
                                    var json = {};
                                    json.num = r;
                                    if(r === $scope.moduleCurrentPage) {
                                        json.select = true;
                                    }
                                    else {
                                        json.select = false;
                                    }
                                    $scope.modulePages.push(json);
                                }
                            }
                            if($scope.moduleTotalPage <= 1) {
                                $scope.moduleShowPrev = false;
                                $scope.moduleShowNext = false;
                            }
                            else {
                                $scope.moduleShowPrev = true;
                                $scope.moduleShowNext = true;
                            }
                        }
                    }
                    else {
                        document.getElementById('csp_module_waiting_label').innerText = "查询失败，请检查网络连接";
                    }
                })
            }
            else {
                window.scrollTo(0,0);
                document.getElementById('csp_module_waiting').style.display = "block";
                document.getElementById('csp_module_show').style.display = "none";
                document.getElementById('csp_module_waiting_label').innerText = "数据加载中，请稍候";
                var jsontemp = {};
                jsontemp.modulename = $scope.currentTheme.name;
                jsontemp.moduleversion = $scope.currentTheme.currentVersion;
                $scope.moduleCurrentPage = $scope.moduleCurrentPage - 1;
                jsontemp.page = $scope.moduleCurrentPage;
                jsontemp.pageCount = $scope.modulePageCount;
                CommentService.cspCommentSelectOpionsByVersion(jsontemp,function(res) {
                    if(res.result === 'succeed') {
                        if(res.data.length === 0) {
                            document.getElementById('csp_module_waiting_label').innerText = "未查询到相关数据";
                        }
                        else {
                            $scope.opions = res.data;
                            for(var i = 0; i< res.data.length; i ++) {
                                //分割图片
                                var picarr = res.data[i].imglink.split(',');
                                if(picarr.length === 1 && picarr[0] === "") {
                                    $scope.opions[i].pictures = [];
                                }
                                else {
                                    $scope.opions[i].pictures = picarr;
                                }
                                if(res.data[i].likeid === -1) {
                                    $scope.opions[i].uplike = false;
                                }
                                else {
                                    $scope.opions[i].uplike = true;
                                }
                                $scope.opions[i].replys = [];
                                $scope.opions[i].show = false;
                                $scope.opions[i].currentReply = {};
                            }
                            document.getElementById('csp_module_waiting').style.display = "none";
                            document.getElementById('csp_module_show').style.display = "block";
                            //设计分页
                            $scope.moduleTotalPage = Math.ceil(res.count/$scope.modulePageCount) ;
                            $scope.modulePages = [];
                            var start = 1;
                            if( $scope.moduleCurrentPage <= Math.ceil($scope.moduleItemCount/2) || $scope.moduleTotalPage <= $scope.moduleItemCount) {
                                start = 1;
                            }
                            else {
                                start = $scope.moduleCurrentPage - Math.ceil($scope.moduleItemCount/2) +1;
                                if($scope.moduleTotalPage -  start + 1 < $scope.moduleItemCount ) {
                                    start = $scope.moduleTotalPage - $scope.moduleItemCount +1;
                                }
                            }
                            for( var r = start ; r < start + 10; r ++ ) {
                                if(r > $scope.moduleTotalPage || $scope.moduleTotalPage <= 1) {
                                    break;
                                }
                                else {
                                    var json = {};
                                    json.num = r;
                                    if(r === $scope.moduleCurrentPage) {
                                        json.select = true;
                                    }
                                    else {
                                        json.select = false;
                                    }
                                    $scope.modulePages.push(json);
                                }
                            }
                            if($scope.moduleTotalPage <= 1) {
                                $scope.moduleShowPrev = false;
                                $scope.moduleShowNext = false;
                            }
                            else {
                                $scope.moduleShowPrev = true;
                                $scope.moduleShowNext = true;
                            }
                        }
                    }
                    else {
                        document.getElementById('csp_module_waiting_label').innerText = "查询失败，请检查网络连接";
                    }
                })
            }
        }
    }

    $scope.cspModuleLoopNext = function() {
        if($scope.moduleCurrentPage === $scope.moduleTotalPage) {}
        else {
            if($scope.currentTheme.currentVersion === "") {
                window.scrollTo(0,0);
                document.getElementById('csp_module_waiting').style.display = "block";
                document.getElementById('csp_module_show').style.display = "none";
                document.getElementById('csp_module_waiting_label').innerText = "数据加载中，请稍候";
                var json = {};
                json.modulename = $scope.currentTheme.name;
                $scope.moduleCurrentPage = $scope.moduleCurrentPage + 1;
                json.page = $scope.moduleCurrentPage;
                json.pageCount = $scope.modulePageCount;
                CommentService.cspCommentSelectOpionByModule(json,function(result) {
                    if(result.result === 'succeed') {
                        if(result.data.length === 0) {
                            document.getElementById('csp_module_waiting_label').innerText = "未查询到相关数据";
                        }
                        else {
                            $scope.opions = result.data;
                            for(var i = 0; i< result.data.length; i ++) {
                                //分割图片
                                var picarr = result.data[i].imglink.split(',');
                                if(picarr.length === 1 && picarr[0] === "") {
                                    $scope.opions[i].pictures = [];
                                }
                                else {
                                    $scope.opions[i].pictures = picarr;
                                }
                                if(result.data[i].likeid === -1) {
                                    $scope.opions[i].uplike = false;
                                }
                                else {
                                    $scope.opions[i].uplike = true;
                                }
                                $scope.opions[i].replys = [];
                                $scope.opions[i].show = false;
                                $scope.opions[i].currentReply = {};
                            }
                            document.getElementById('csp_module_waiting').style.display = "none";
                            document.getElementById('csp_module_show').style.display = "block";
                            //设计分页
                            $scope.moduleTotalPage = Math.ceil(result.count/$scope.modulePageCount) ;
                            $scope.modulePages = [];
                            var start = 1;
                            if( $scope.moduleCurrentPage <= Math.ceil($scope.moduleItemCount/2) || $scope.moduleTotalPage <= $scope.moduleItemCount) {
                                start = 1;
                            }
                            else {
                                start = $scope.moduleCurrentPage - Math.ceil($scope.moduleItemCount/2) +1;
                                if($scope.moduleTotalPage -  start + 1 < $scope.moduleItemCount ) {
                                    start = $scope.moduleTotalPage - $scope.moduleItemCount +1;
                                }
                            }
                            for( var r = start ; r < start + 10; r ++ ) {
                                if(r > $scope.moduleTotalPage || $scope.moduleTotalPage <= 1) {
                                    break;
                                }
                                else {
                                    var json = {};
                                    json.num = r;
                                    if(r === $scope.moduleCurrentPage) {
                                        json.select = true;
                                    }
                                    else {
                                        json.select = false;
                                    }
                                    $scope.modulePages.push(json);
                                }
                            }
                            if($scope.moduleTotalPage <= 1) {
                                $scope.moduleShowPrev = false;
                                $scope.moduleShowNext = false;
                            }
                            else {
                                $scope.moduleShowPrev = true;
                                $scope.moduleShowNext = true;
                            }
                        }
                    }
                    else {
                        document.getElementById('csp_module_waiting_label').innerText = "查询失败，请检查网络连接";
                    }
                })
            }
            else {
                window.scrollTo(0,0);
                document.getElementById('csp_module_waiting').style.display = "block";
                document.getElementById('csp_module_show').style.display = "none";
                document.getElementById('csp_module_waiting_label').innerText = "数据加载中，请稍候";
                var jsontemp = {};
                jsontemp.modulename = $scope.currentTheme.name;
                jsontemp.moduleversion = $scope.currentTheme.currentVersion;
                $scope.moduleCurrentPage = $scope.moduleCurrentPage + 1;
                jsontemp.page = $scope.moduleCurrentPage;
                jsontemp.pageCount = $scope.modulePageCount;
                CommentService.cspCommentSelectOpionsByVersion(jsontemp,function(res) {
                    if(res.result === 'succeed') {
                        if(res.data.length === 0) {
                            document.getElementById('csp_module_waiting_label').innerText = "未查询到相关数据";
                        }
                        else {
                            $scope.opions = res.data;
                            for(var i = 0; i< res.data.length; i ++) {
                                //分割图片
                                var picarr = res.data[i].imglink.split(',');
                                if(picarr.length === 1 && picarr[0] === "") {
                                    $scope.opions[i].pictures = [];
                                }
                                else {
                                    $scope.opions[i].pictures = picarr;
                                }
                                if(res.data[i].likeid === -1) {
                                    $scope.opions[i].uplike = false;
                                }
                                else {
                                    $scope.opions[i].uplike = true;
                                }
                                $scope.opions[i].replys = [];
                                $scope.opions[i].show = false;
                                $scope.opions[i].currentReply = {};
                            }
                            document.getElementById('csp_module_waiting').style.display = "none";
                            document.getElementById('csp_module_show').style.display = "block";
                            //设计分页
                            $scope.moduleTotalPage = Math.ceil(res.count/$scope.modulePageCount) ;
                            $scope.modulePages = [];
                            var start = 1;
                            if( $scope.moduleCurrentPage <= Math.ceil($scope.moduleItemCount/2) || $scope.moduleTotalPage <= $scope.moduleItemCount) {
                                start = 1;
                            }
                            else {
                                start = $scope.moduleCurrentPage - Math.ceil($scope.moduleItemCount/2) +1;
                                if($scope.moduleTotalPage -  start + 1 < $scope.moduleItemCount ) {
                                    start = $scope.moduleTotalPage - $scope.moduleItemCount +1;
                                }
                            }
                            for( var r = start ; r < start + 10; r ++ ) {
                                if(r > $scope.moduleTotalPage || $scope.moduleTotalPage <= 1) {
                                    break;
                                }
                                else {
                                    var json = {};
                                    json.num = r;
                                    if(r === $scope.moduleCurrentPage) {
                                        json.select = true;
                                    }
                                    else {
                                        json.select = false;
                                    }
                                    $scope.modulePages.push(json);
                                }
                            }
                            if($scope.moduleTotalPage <= 1) {
                                $scope.moduleShowPrev = false;
                                $scope.moduleShowNext = false;
                            }
                            else {
                                $scope.moduleShowPrev = true;
                                $scope.moduleShowNext = true;
                            }
                        }
                    }
                    else {
                        document.getElementById('csp_module_waiting_label').innerText = "查询失败，请检查网络连接";
                    }
                })
            }
        }
    }

    $scope.cspModuleLoopLast = function() {
        if($scope.moduleCurrentPage === $scope.moduleTotalPage) {}
        else {
            if($scope.currentTheme.currentVersion === "") {
                window.scrollTo(0,0);
                document.getElementById('csp_module_waiting').style.display = "block";
                document.getElementById('csp_module_show').style.display = "none";
                document.getElementById('csp_module_waiting_label').innerText = "数据加载中，请稍候";
                var json = {};
                json.modulename = $scope.currentTheme.name;
                $scope.moduleCurrentPage = $scope.moduleTotalPage;
                json.page = $scope.moduleCurrentPage;
                json.pageCount = $scope.modulePageCount;
                CommentService.cspCommentSelectOpionByModule(json,function(result) {
                    if(result.result === 'succeed') {
                        if(result.data.length === 0) {
                            document.getElementById('csp_module_waiting_label').innerText = "未查询到相关数据";
                        }
                        else {
                            $scope.opions = result.data;
                            for(var i = 0; i< result.data.length; i ++) {
                                //分割图片
                                var picarr = result.data[i].imglink.split(',');
                                if(picarr.length === 1 && picarr[0] === "") {
                                    $scope.opions[i].pictures = [];
                                }
                                else {
                                    $scope.opions[i].pictures = picarr;
                                }
                                if(result.data[i].likeid === -1) {
                                    $scope.opions[i].uplike = false;
                                }
                                else {
                                    $scope.opions[i].uplike = true;
                                }
                                $scope.opions[i].replys = [];
                                $scope.opions[i].show = false;
                                $scope.opions[i].currentReply = {};
                            }
                            document.getElementById('csp_module_waiting').style.display = "none";
                            document.getElementById('csp_module_show').style.display = "block";
                            //设计分页
                            $scope.moduleTotalPage = Math.ceil(result.count/$scope.modulePageCount) ;
                            $scope.modulePages = [];
                            var start = 1;
                            if( $scope.moduleCurrentPage <= Math.ceil($scope.moduleItemCount/2) || $scope.moduleTotalPage <= $scope.moduleItemCount) {
                                start = 1;
                            }
                            else {
                                start = $scope.moduleCurrentPage - Math.ceil($scope.moduleItemCount/2) +1;
                                if($scope.moduleTotalPage -  start + 1 < $scope.moduleItemCount ) {
                                    start = $scope.moduleTotalPage - $scope.moduleItemCount +1;
                                }
                            }
                            for( var r = start ; r < start + 10; r ++ ) {
                                if(r > $scope.moduleTotalPage || $scope.moduleTotalPage <= 1) {
                                    break;
                                }
                                else {
                                    var json = {};
                                    json.num = r;
                                    if(r === $scope.moduleCurrentPage) {
                                        json.select = true;
                                    }
                                    else {
                                        json.select = false;
                                    }
                                    $scope.modulePages.push(json);
                                }
                            }
                            if($scope.moduleTotalPage <= 1) {
                                $scope.moduleShowPrev = false;
                                $scope.moduleShowNext = false;
                            }
                            else {
                                $scope.moduleShowPrev = true;
                                $scope.moduleShowNext = true;
                            }
                        }
                    }
                    else {
                        document.getElementById('csp_module_waiting_label').innerText = "查询失败，请检查网络连接";
                    }
                })
            }
            else {
                window.scrollTo(0,0);
                document.getElementById('csp_module_waiting').style.display = "block";
                document.getElementById('csp_module_show').style.display = "none";
                document.getElementById('csp_module_waiting_label').innerText = "数据加载中，请稍候";
                var jsontemp = {};
                jsontemp.modulename = $scope.currentTheme.name;
                jsontemp.moduleversion = $scope.currentTheme.currentVersion;
                $scope.moduleCurrentPage = $scope.moduleTotalPage;
                jsontemp.page = $scope.moduleCurrentPage;
                jsontemp.pageCount = $scope.modulePageCount;
                CommentService.cspCommentSelectOpionsByVersion(jsontemp,function(res) {
                    if(res.result === 'succeed') {
                        if(res.data.length === 0) {
                            document.getElementById('csp_module_waiting_label').innerText = "未查询到相关数据";
                        }
                        else {
                            $scope.opions = res.data;
                            for(var i = 0; i< res.data.length; i ++) {
                                //分割图片
                                var picarr = res.data[i].imglink.split(',');
                                if(picarr.length === 1 && picarr[0] === "") {
                                    $scope.opions[i].pictures = [];
                                }
                                else {
                                    $scope.opions[i].pictures = picarr;
                                }
                                if(res.data[i].likeid === -1) {
                                    $scope.opions[i].uplike = false;
                                }
                                else {
                                    $scope.opions[i].uplike = true;
                                }
                                $scope.opions[i].replys = [];
                                $scope.opions[i].show = false;
                                $scope.opions[i].currentReply = {};
                            }
                            document.getElementById('csp_module_waiting').style.display = "none";
                            document.getElementById('csp_module_show').style.display = "block";
                            //设计分页
                            $scope.moduleTotalPage = Math.ceil(res.count/$scope.modulePageCount) ;
                            $scope.modulePages = [];
                            var start = 1;
                            if( $scope.moduleCurrentPage <= Math.ceil($scope.moduleItemCount/2) || $scope.moduleTotalPage <= $scope.moduleItemCount) {
                                start = 1;
                            }
                            else {
                                start = $scope.moduleCurrentPage - Math.ceil($scope.moduleItemCount/2) +1;
                                if($scope.moduleTotalPage -  start + 1 < $scope.moduleItemCount ) {
                                    start = $scope.moduleTotalPage - $scope.moduleItemCount +1;
                                }
                            }
                            for( var r = start ; r < start + 10; r ++ ) {
                                if(r > $scope.moduleTotalPage || $scope.moduleTotalPage <= 1) {
                                    break;
                                }
                                else {
                                    var json = {};
                                    json.num = r;
                                    if(r === $scope.moduleCurrentPage) {
                                        json.select = true;
                                    }
                                    else {
                                        json.select = false;
                                    }
                                    $scope.modulePages.push(json);
                                }
                            }
                            if($scope.moduleTotalPage <= 1) {
                                $scope.moduleShowPrev = false;
                                $scope.moduleShowNext = false;
                            }
                            else {
                                $scope.moduleShowPrev = true;
                                $scope.moduleShowNext = true;
                            }
                        }
                    }
                    else {
                        document.getElementById('csp_module_waiting_label').innerText = "查询失败，请检查网络连接";
                    }
                })
            }
        }
    }
})

cspCtrls.filter('htmlContent',function($sce) {
    return function(input) {
		return $sce.trustAsHtml(input);
	}
})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
cspCtrls.controller('customerGroupCtrl',
function($scope,$state,$timeout,UserInfoService,customerGroupService,messageService) {
  // 初始变量设置


//所有客户数目
$scope.customerAmount = 0;
  //添加客户信息
  $scope.customerStatus = {
    customerAddInfo:1,
    customerGroupInfo:0,
    addSuccess:0
  }
  //客户分组信息
  $scope.groups = [];
  //新添加客户，为其分类的分组
  $scope.selectedGroups = [];
  //操作用户时选中的客户id
  $scope.operCustomerid = [];
  //操作用户时选中的客户所在的分组id
  $scope.operCustomerGroupid = [];
  //选中的客户编辑之前所在分组信息备份
  $scope.selectedGroupsBack = [];
  //新添加客户个人信息
  $scope.newCustomerInfo = {

    tel:'',
    email:'',
    tname:''
  };
//编辑的客户个人信息
$scope.editCustomerInfo = {

  tel:'',
  email:'',
  tname:''
};
//编辑的客户个人信息 备份
$scope.editCustomerInfoBack = {

  tel:'',
  email:'',
  tname:''
};
  $scope.ctrlScope = $scope;


  $scope.cspCustomerLoadPath='';
  $scope.cspAddCustomerLoadPath = '';


 //客户信息数组
 $scope.customerInfo = [];


  $scope.newGroupName='';
  $scope.newGroupDesc='';
  $scope.selectedCustomers=[];

  $scope.currGroupID='';//当前操作的群组id
  $scope.currGroupCustomers=[];  //当前群组的所有客户
  $scope.editingGroup=false;


//导入客户信息时所选择的导入组
  $scope.selectImportGroup={};
//上传提示信息
$scope.fileError = false;
$scope.errorTip = '';

  //返回后台用户管理中心
  $scope.cspBackManage = function() {
    $state.go('managecenter');
  }
  $scope.overGroup=function(group){
    // $($event.target).find('.groupIcon').addClass('activeGroup');
    // $($event.target).addClass('activeGroup');
    // console.log($($event.target));
    group.showArrowRight=true;
  }
  $scope.outGroup=function(group){
    // $($event.target).find('.groupIcon').removeClass('activeGroup');
    // $($event.target).removeClass('activeGroup');
    group.showArrowRight=false;
  }

  $scope.overCustomer=function(customer){

    customer.showArrowRight=true;
  }
  $scope.outCustomer=function(customer){
    customer.showArrowRight=false;
  }


  //**********************关于群组管理界面的所有函数-----开始
//点击左侧所有客户
$scope.goCustomer = function($event){


  $(".groupDiv2").removeClass('activeItem');
  $($event.target).parent().addClass('activeItem');

  customerGroupService.getCustomerInfo({},function(result){
     $scope.customerInfo = result;
     $scope.customerAmount = $scope.customerInfo.length;
     $scope.operCustomerid = [];
     $scope.operCustomerGroupid = [];
     $scope.cspCustomerLoadPath = "tpls/customerGroup/cspusers.html"
     $('.groupOper').css('display','none');
  })
}

  $scope.showError=function(reason){
    $('html,body').scrollTop(0); //不带动画
    document.getElementById('errorReason').innerHTML=reason;
    document.getElementById('errorMessage').style.display='';


    if ($scope.timeout) {
      $timeout.cancel($scope.timeout);
    }
    $scope.timeout=$timeout(function () {
      document.getElementById('errorMessage').style.display='none';
    }, 5000);

  }

//点击左侧具体群组名
  $scope.clickGroup=function(groupid,$event){
    $(".groupDiv2").removeClass('activeItem');
    $($event.target).parent().addClass('activeItem');

    $(".groupDiv2").removeClass('activeItem');
    $($event.target).parent().addClass('activeItem');
    if(groupid==-1){
      var params={'gid':groupid};
      customerGroupService.getCustomers(params, function(result){
        $scope.customerInfo = result;
        $scope.operCustomerid = [];
        $scope.operCustomerGroupid = [];
        $scope.cspCustomerLoadPath = "tpls/customerGroup/cspusers.html";
        $('.groupOper').css('display','block');
      })
    }else{
      $scope.currGroupID=groupid;
      var a = {gid:''};
      a.gid = groupid;

      customerGroupService.getSpecialGroupCus(a, function(result){
         $scope.customerInfo = result;
         $scope.operCustomerid = [];
         $scope.operCustomerGroupid = [];
         $scope.cspCustomerLoadPath = "tpls/customerGroup/cspusers.html";
         $('.groupOper').css('display','block');
      })
    }

   $scope.getAllGroup();
  }


//导入客户信息
$scope.importCustomer = function(){

  customerGroupService.getAllGroup('',function(res){
    if (res==false) {
      return;
    }

    $scope.groups=res;
    var ungroupedObj={};
    ungroupedObj.gid=-1;
    ungroupedObj.gname='默认未分组';
    $scope.groups.push(ungroupedObj);

    $scope.selectImportGroup=$scope.groups[$scope.groups.length-1];
    $scope.cspCustomerLoadPath = "tpls/customerGroup/customerImport.html";

  });

}
//选择导入的组时selectImportGroup时时显示的值

$scope.outPut = function(selectImportGroup){
  console.log("output", selectImportGroup)
    $scope.selectImportGroup=selectImportGroup;
}
//
$scope.cspCustomerImportFileError = function() {
  $scope.fileError = true;
  $scope.errorTip = "选择文件格式错误";
}
//导入客户信息确定
$scope.cspCustomerImportSubmit = function(){

  var fd = new FormData();
  var file = document.getElementById('csp_customer_import_file_load_input').files[0];
      fd.append('file', file);

      customerGroupService.customerImport(fd,function(res) {

        if(res.result === "succeed") {
          if(res.file === true) {
            var flag = 0;//标志文件内容是否都含有姓名
            for(var i=1;i<res.data.length;i++){
              if(!res.data[i].tname){
                flag = 1;
              }
            }
            if(flag){
              $scope.fileError = true;
              $scope.errorTip = "文件中有姓名为空，无法录入";
            }
            else{
              //在这里插入数据
              console.log("res.data.length",res.data.length);
              for(var i=0;i<res.data.length;i++){
                (function(i){
                  var a={ tname:'',tel:'',email:''};
                  a.tname = res.data[i].tname;
                  a.tel = res.data[i].tel;
                  a.email = res.data[i].email;
                  customerGroupService.addNewCustomerSure(a,function(res){


                  })
                })(i)
              }

              if($scope.selectImportGroup.gid>0){
                customerGroupService.getNewestCustomerid('',function(resGid){

                  for(var j=0;j<res.data.length;j++){

                    (function(j){
                      var b={customerid:'',
                             gid:''
                        }
                        b.customerid=resGid.id-j;
                        b.gid=$scope.selectImportGroup.gid;

                        customerGroupService.addNewCustomerGroup(b,function(res){

                        })

                    })(j)
                  }


                })
              }
            }


             $scope.fileError = true;
             $scope.errorTip = "数据上传成功";
             setTimeout( function(){$scope.fileError = false;
             $scope.cspCustomerLoadPath = "tpls/customerGroup/cspusers.html";
           },1000);
          }
          else {
            $scope.fileError = true;
            $scope.errorTip = "文件内容格式错误";
          }
        }
        else {
          $scope.fileError = true;
          $scope.errorTip = "文件上传失败";
        }
      })
}

//导入取消
$scope.cspCustomerImportUnload = function(){
  $scope.cspCustomerLoadPath = "tpls/customerGroup/cspusers.html";
}
//添加客户按钮
  $scope.addNewCustomer =  function(){
  $scope.cspCustomerLoadPath = "tpls/customerGroup/addNewCustomer.html"
  //每次进行分组时之前的分组信息清零
  $scope.selectedGroups = [];
  $scope.customerStatus.customerAddInfo = 1;
  $scope.customerStatus.customerGroupInfo = 0;
  $scope.customerStatus.addSuccess = 0;
  }


//选择分组页面跳转按钮:跳转至所有分组信息
$scope.newCustomerGroup = function() {
  $scope.customerStatus.customerAddInfo = 0;
  $scope.customerStatus.customerGroupInfo = 1;
  customerGroupService.getAllGroup('',function(res){
    if (res==false) {
      return;
    }

    $scope.groups=res;

  });
}
//新添加客户的分组页面的功能函数
$scope.isChecked = function(gid){
    return $scope.selectedGroups.indexOf(gid) >= 0 ;
} ;

$scope.updateSelection = function($event,gid){
    var checkbox = $event.target ;
    var checked = checkbox.checked ;
    if(checked){
        $scope.selectedGroups.push(gid) ;
    }else{
        var idx = $scope.selectedGroups.indexOf(gid) ;
        $scope.selectedGroups.splice(idx,1) ;
    }
} ;
//选中客户
$scope.isCheckedCustomer = function(customerid){
  return $scope.operCustomerid.indexOf(customerid) >= 0 ;
}

$scope.updateSelectionCustomer = function($event,customerid){
    var checkbox = $event.target ;
    var checked = checkbox.checked ;
    if(checked){
        $scope.operCustomerid.push(customerid) ;
    }else{
        var idx = $scope.operCustomerid.indexOf(customerid) ;
        $scope.operCustomerid.splice(idx,1) ;
    }
} ;

$scope.isCheckedAll = function($event, customerInfo){
  var checkbox = $event.target ;
  var checked = checkbox.checked ;
  if(checked){
    for(var i=0;i<customerInfo.length;i++){
      $scope.operCustomerid.push(customerInfo[i].customerid)
    }
  }
  else{
    $scope.operCustomerid = [];
    $scope.operCustomerGroupid = [];
  }
}

//复制到组
$scope.copToGroup = function(){
  if(!$scope.operCustomerid.length){
    $('.unChooseTips').css("display","block");
    setTimeout( function(){$('.unChooseTips').css("display","none")}
      ,2000);
  }else{

      customerGroupService.getAllGroup('',function(res){
        if (res==false) {
          return;
        }

        $scope.groups=res;
        $scope.cspCustomerLoadPath = "tpls/customerGroup/groupInfo.html";
        $scope.selectedGroups = [];

      });
  }
}
//确定复制到组
$scope.copyToGroup = function(){
  if($scope.selectedGroups.length){
     for(var j=0;j<$scope.operCustomerid.length;j++){
       for(var i=0;i<$scope.selectedGroups.length;i++){
         var b={customerid:'',
                gid:''
           }
           b.customerid=$scope.operCustomerid[j];
           b.gid=$scope.selectedGroups[i];
           console.log("999999",b)
           customerGroupService.addNewCustomerGroup(b,function(res){

           })
       }
     }
     $scope.cspCustomerLoadPath = "tpls/customerGroup/cspusers.html";
  }
}
//取消复制到组并返回
$scope.notCopyandBack = function(){
  $scope.operCustomerid = [];
  $scope.operCustomerGroupid = [];
  $scope.selectedGroups = [];
  $scope.cspCustomerLoadPath = "tpls/customerGroup/cspusers.html";
}
//编辑按钮
$scope.ediCustomer = function(){
  if(!$scope.operCustomerid.length){
    $('.unChooseTips').css("display","block");
    setTimeout( function(){$('.unChooseTips').css("display","none")}
      ,2000);
  }else{
    if($scope.operCustomerid.length!=1){
      $('.errorChooseTips').css("display","block");
      setTimeout( function(){$('.errorChooseTips').css("display","none")}
        ,2000);
    }else {
       var a = {customerid:''}
       a.customerid = $scope.operCustomerid[0];
       customerGroupService.getEditCustomerInfo(a, function(res){
         $scope.editCustomerInfo.tname = res.tname;
         $scope.editCustomerInfo.tel = res.tel;
         $scope.editCustomerInfo.email = res.email;


         $scope.editCustomerInfoBack.tname = res.tname;
         $scope.editCustomerInfoBack.tel = res.tel;
         $scope.editCustomerInfoBack.email = res.email;
        $scope.cspCustomerLoadPath = "tpls/customerGroup/editCustomerInfo.html";


       })


      //获取该id的客户信息

    }
  }
}

//删除客户按钮
$scope.delCustomer = function(){
  if(!$scope.operCustomerid.length){
    $('.unChooseTips').css("display","block");
    setTimeout( function(){$('.unChooseTips').css("display","none")}
      ,2000);
  }else{
      jQuery('.csp_delete').modal('show');
  }
}

//删除提示返回
$scope.noDelete = function(){
    jQuery('.csp_delete').modal('hide');
}
//删除确定
$scope.deleteConfirm = function(){
  for(var i=0;i<$scope.operCustomerid.length;i++){
    (function(i){
      var a={customerid:''};
      a.customerid = $scope.operCustomerid[i];
      customerGroupService.delCustomer(a,function(res){

      })
    })(i)
  }
  jQuery('.csp_delete').modal('hide');
  $scope.refreshCustomer();
}
//编辑客户的分组信息
$scope.editCustomerGroup = function(){
  var a = {customerid:''}
  a.customerid = $scope.operCustomerid[0];
  customerGroupService.getEditCustomerGroupInfo(a, function(res){

    customerGroupService.getAllGroup('',function(res1){
      if (res==false) {
        return;
      }

      $scope.groups=res1;
      $scope.cspCustomerLoadPath = "tpls/customerGroup/editCustomerGroupInfo.html";
      $scope.selectedGroups=[];
      $scope.selectedGroupsBack=[];

      for(var i=0;i<res.length;i++){
        $scope.selectedGroups.push(res[i].gid)
        $scope.selectedGroupsBack.push(res[i].gid)
      }

    });
  })
}
//编辑客户信息中确定修改客户所在组信息
$scope.editGroupSure = function(){

    $scope.cspCustomerLoadPath = "tpls/customerGroup/editCustomerInfo.html";
}
//编辑客户信息中客户所在组信息不加以更改
$scope.unEditGroupandBack = function(){
  $scope.selectedGroups = [];
  if($scope.selectedGroupsBack.length){
    for(var i=0;i<$scope.selectedGroupsBack.length;i++){
      $scope.selectedGroups.push($scope.selectedGroupsBack[i])
    }
  }
  $scope.cspCustomerLoadPath = "tpls/customerGroup/editCustomerInfo.html";
}

//编辑客户最终确定
$scope.editCustomerSure = function(){
  var a ={
    customerid:'',
    tel:'',
    tname:'',
    email:''
  }
  a.customerid = $scope.operCustomerid[0];
  a.tel = $scope.editCustomerInfo.tel;
  a.tname = $scope.editCustomerInfo.tname;
  a.email = $scope.editCustomerInfo.email;
  var c = $scope.selectedGroups.sort().toString();
  var d = $scope.selectedGroupsBack.sort().toString();
  if(a.tel!=$scope.editCustomerInfoBack.tel||a.tname!=$scope.editCustomerInfoBack.tname||a.email!=$scope.editCustomerInfoBack.email){

     if(c==d){
       customerGroupService.editCustomerSure(a,function(res){

       })
     }else{
       customerGroupService.editCustomerSure(a,function(res){
         for(var i=0;i<$scope.selectedGroupsBack.length;i++){
           (function(i){
             var flag = $scope.selectedGroups.indexOf($scope.selectedGroupsBack[i]);
             if(flag<0){
               var cc ={customerid:'',gid:''};
               cc.customerid = $scope.operCustomerid[0];
               cc.gid = $scope.selectedGroupsBack[i];
               console.log("gid0000000",cc.gid)
               customerGroupService.deleteCustomerGroupInfo(cc, function(res){
               })
             }
           })(i)
         }

         for(var j=0;j<$scope.selectedGroups.length;j++){

           (function(j){
             var flag = $scope.selectedGroupsBack.indexOf($scope.selectedGroups[j]);
             if(flag<0){
               var dd ={customerid:'',gid:''};
               dd.customerid = $scope.operCustomerid[0];
               dd.gid = $scope.selectedGroups[j];
                 console.log("gid0000000dd",dd.gid)
               customerGroupService.addNewCustomerGroup(dd, function(res){
               })
             }
           })(j)
         }
        })

     }
  }
  else{
    if(c!=d){
      for(var i=0;i<$scope.selectedGroupsBack.length;i++){
        (function(i){
          var flag = $scope.selectedGroups.indexOf($scope.selectedGroupsBack[i]);
          if(flag<0){
            var cc ={customerid:'',gid:''};
            cc.customerid = $scope.operCustomerid[0];
            cc.gid = $scope.selectedGroupsBack[i];
            console.log("gid0000000",cc.gid)
            customerGroupService.deleteCustomerGroupInfo(cc, function(res){
            })
          }
        })(i)
      }

      for(var j=0;j<$scope.selectedGroups.length;j++){

        (function(j){
          var flag = $scope.selectedGroupsBack.indexOf($scope.selectedGroups[j]);
          if(flag<0){
            var dd ={customerid:'',gid:''};
            dd.customerid = $scope.operCustomerid[0];
            dd.gid = $scope.selectedGroups[j];
              console.log("gid0000000dd",dd.gid)
            customerGroupService.addNewCustomerGroup(dd, function(res){
            })
          }
        })(j)
      }
    }
  }


    $scope.cspCustomerLoadPath = "tpls/customerGroup/cspusers.html";
}


//编辑客户信息取消
$scope.unEditGroupandBack = function(){
 $scope.selectedGroups = [];
 $scope.selectedGroupsBack = [];
 $scope.cspCustomerLoadPath = "tpls/customerGroup/cspusers.html";
}
//新添加客户分组信息保存按钮
$scope.groupSave = function(){
  $scope.customerStatus.customerAddInfo = 1;
  $scope.customerStatus.customerGroupInfo = 0;
}
//新添加客户分组信息取消并返回按钮
$scope.groupNotSave = function(){
  $scope.selectedGroups = [];
  $scope.customerStatus.customerAddInfo = 1;
  $scope.customerStatus.customerGroupInfo = 0;
}
//检测新添加页面填写新增客户信息是否写入
$scope.checkField = function(){
  $(".addNewCustomerTip").css("display","none");
}

//确定新增客户
$scope.addNewCustomerSure = function(newCustomerInfo){
  if($scope.newCustomerInfo.tname==''){
    $(".addNewCustomerTip").css("display","inline-block");
  }
  else{


    customerGroupService.addNewCustomerSure($scope.newCustomerInfo,function(res){


      console.log($scope.selectedGroups.length)
      if($scope.selectedGroups.length){
        customerGroupService.getNewestCustomerid('',function(resGid){
          for(var i=0;i<$scope.selectedGroups.length;i++){
            var b={customerid:'',
                   gid:''
              }
              b.customerid=resGid.id;
              b.gid=$scope.selectedGroups[i];
              console.log("999999",b)
              customerGroupService.addNewCustomerGroup(b,function(res){

              })
          }
          $scope.customerStatus.customerAddInfo = 0;
          $scope.customerStatus.customerGroupInfo = 0;
          $scope.customerStatus.addSuccess = 1;

        })


      }
      else {
        $scope.customerStatus.customerAddInfo = 0;
        $scope.customerStatus.customerGroupInfo = 0;
        $scope.customerStatus.addSuccess = 1;
      }

    })

  }
}
//取消新增客户
$scope.cancelAddNewCustomer = function(){
  $scope.newCustomerInfo = {

    tel:'',
    email:'',
    tname:'',

  };
  $scope.selectedGroups = [];
  $scope.cspCustomerLoadPath = "tpls/customerGroup/cspusers.html";
}

//刷新客户显示页面
$scope.refreshCustomer = function(){
  customerGroupService.getCustomerInfo({},function(result){
     $scope.customerInfo = result;
     $scope.customerAmount = $scope.customerInfo.length;
     $scope.operCustomerid = [];
  })

}



  //跳转到发送短信界面
  $scope.sendMessage =  function(){
    var params={};
    params.messageType='sendMessage';
    customerGroupService.selectedCustomers=$scope.operCustomerid;
    console.log("messageService 选中的人员",customerGroupService.selectedCustomers);
    messageService.setMessageType(params,function(res){
      if (res.result==false) {
        return;
      }
      $state.go('sendMessage');
    });
  }

  //新建群组
  $scope.newGroup=function(){
    // document.getElementById('groupDetails').style.display = "";
    $scope.editingGroup=false;
    $scope.cspCustomerLoadPath = "tpls/customerGroup/groupDetails.html";
    $scope.newGroupName='';
    $scope.newGroupDesc='';
    $scope.selectedCustomers=[];
    $scope.currGroupCustomers=[];  //当前群组的所有客户



    // $scope.getAllGroup();
  }
  $scope.clearSelectedCustomer=function(){
    $scope.selectedCustomers=[];
  }

  $scope.goEditGroup=function(groupid){
    if (groupid==-1) {
      return;
    }

    $scope.editingGroup=true;
    $scope.cspCustomerLoadPath = "tpls/customerGroup/groupDetails.html";

    $scope.selectedCustomers=[];
    $scope.getGroupinfo(groupid);



    var params={'gid':groupid};
    customerGroupService.getCustomers(params,function(res){
      if (res==false) {
        return;
      }


      $scope.selectedCustomers=res;
      $scope.currGroupCustomers=res.slice(0,res.length);
      console.log('$scope.currGroupCustomers',$scope.currGroupCustomers);

    });
  }


  $scope.saveCreateGroup=function(){
    var params={};
    params.gname=$scope.newGroupName;
    params.gdesc=$scope.newGroupDesc;
    params.customers=$scope.selectedCustomers;
    console.log(params);

    customerGroupService.createGroup(params,function(res){
      if (res.result==false) {
        $scope.showError(res.reason);
        return;
      }
      $scope.cspCustomerLoadPath = "tpls/customerGroup/cspusers.html";

      console.log('saveCreateGroup',res);
    });

  }


  $scope.saveEditGroup=function(){
    if ($scope.currGroupID==0) {
      return;
    }

    var params={};
    params.gname=$scope.newGroupName;
    params.gdesc=$scope.newGroupDesc;
    params.gid=$scope.currGroupID;

    params.addCustomers=[];
    params.delCustomers=[];


    var selectedCustomers=$scope.selectedCustomers;

    console.log('$scope.currGroupCustomers',$scope.currGroupCustomers);

    for (var i = 0; i < $scope.selectedCustomers.length; i++) {
      var deal=false;

      for (var j = 0; j < $scope.currGroupCustomers.length; j++) {
        if ($scope.currGroupCustomers[j].customerid==$scope.selectedCustomers[i].customerid) {
          deal=true;
          break;
        }
      }
      if (!deal) {
        params.addCustomers.push($scope.selectedCustomers[i].customerid);
      }
    }

    for (var j = 0; j < $scope.currGroupCustomers.length; j++) {
      var contain=false;
      for (var i = 0; i < $scope.selectedCustomers.length; i++) {
        if ($scope.currGroupCustomers[j].customerid==$scope.selectedCustomers[i].customerid) {
          contain=true;
          break;
        }
      }
      if (!contain) {
        params.delCustomers.push($scope.currGroupCustomers[j].customerid);
      }
    }

    params.addLength=params.addCustomers.length;
    params.delLength=params.delCustomers.length;

    customerGroupService.saveEditGroup(params,function(res){
      if (res.result==false) {
        $scope.showError(res.reason);
        return;
      }
      $scope.cspCustomerLoadPath = "tpls/customerGroup/cspusers.html";

      console.log(res);
    });

  }


  $scope.cancelCreateGroup=function(){
    $scope.newGroupName='';
    $scope.newGroupDesc='';

    $scope.cspCustomerLoadPath = "tpls/customerGroup/cspusers.html";

  }

  $scope.removeGroup=function(groupid){
    var params={'gid':groupid};
    console.log(groupid);
    customerGroupService.removeGroup(params,function(res){
      if (res==false) {
        $scope.showError(res.reason);
        return;
      }
      $scope.getAllGroup();
      console.log('removeGroup',res);
    });
  }

  $scope.editGroup=function(groupid){
    var params={'gid':groupid};
    console.log(groupid);
    customerGroupService.editGroup(params,function(res){
      if (res==false) {
        return;
      }
      console.log('editGroup',res);
    });
  }



  $scope.getAllGroup=function(){

    customerGroupService.getAllGroup('',function(res){
      if (res==false) {
        return;
      }
      console.log('getAllGroup',res);
      $scope.allGroup=res;
      var ungroupedObj={};
      ungroupedObj.gid=-1;
      ungroupedObj.gname='未分组';
      customerGroupService.getUngroupedAmount('',function(res){
        console.log('getAllGroup',res,res.result==false);
        if (res.result==false) {
          return;
        }
        ungroupedObj.customerAmount=res.customerAmount;
        $scope.allGroup.push(ungroupedObj);
        console.log($scope.allGroup);
      });


    });
  }

  $scope.getGroupinfo=function(groupid){
    var params={'gid':groupid};
    console.log('getGroupinfo',params);
    customerGroupService.getGroupinfo(params,function(res){
      if (res==false) {
        return;
      }

      $scope.newGroupName=res.gname;
      $scope.newGroupDesc=res.gdesc;
    });



  }


  //在分组权限界面获取Customers,将会直接写入allGroup数组对应的分组中
  $scope.getCustomersToDetail=function(groupid){


    for (var i = 0; i < $scope.allGroup.length; i++) {
      if ($scope.allGroup[i].gid==groupid) {

        if ($scope.allGroup[i].show==true) {
          $scope.allGroup[i].show=false;
          // delete $scope.allGroup[i].customers;
          return;
        }
        $scope.allGroup[i].show=true;//只要点击了就设置为显示了该分组

        break;
      }

    }
    //如果已经获取过数据,则不用再次获得
    if($scope.allGroup[i].haveData)
      return;

    var params={'gid':groupid};
    customerGroupService.getCustomers(params,function(res){
      if (res==false) {
        return;
      }

      for (var i = 0; i < $scope.allGroup.length; i++) {
        if ($scope.allGroup[i].gid==groupid) {
          $scope.allGroup[i].customers=[];
          for (var j = 0; j < res.length; j++) {
            $scope.allGroup[i].customers.push(res[j]);
          }
          $scope.allGroup[i].haveData=true;
          break;

        }
      }

    });
  }




  $scope.createCustomerList=function(groupid,$event){
    var params={'gid':groupid};
    customerGroupService.getCustomers(params,function(res){
      if (res==false) {
        return;
      }
      console.log($event.target);
      var tagetDiv=$($event.target).parent()[0];
      console.log(tagetDiv);
      //创建元素Li
      var ul=document.createElement("ul");
      for (var i = 0; i < res.length; i++) {
        var li=document.createElement("li");
        var leftDiv=document.createElement("div");
        // var rightDiv=document.createElement("div");
        leftDiv.innerHTML=res[i].tname;
        leftDiv.title='"'+res[i].tname+'"' +'<'+res[i].tel+'>';
        leftDiv.onclick=addSelectedCustomer;
        //向li中添加内容
        li.appendChild(leftDiv);
        //向ul追加元素li
        ul.appendChild(li);
      }
      tagetDiv.appendChild(ul);
    });
  }
  function addSelectedCustomer(){
    console.log(this.title,$scope.newGroupName);
  }

  $scope.addSelectedCustomer=function (customer){
    for (var i = 0; i < $scope.selectedCustomers.length; i++) {
      if ($scope.selectedCustomers[i].customerid==customer.customerid) {
        return;
      }
    }
    $scope.selectedCustomers.push(customer);
  }

  $scope.addSelectedGroup=function (groupid,e){

    e.stopPropagation();

    var params={};
    params.gid=groupid;
    console.log(params,groupid);
    customerGroupService.getCustomers(params,function(res){
      if (res.result==false) {
        return;
      }


      for (var i = 0; i < res.length; i++) {
        var repeat=false;
        for (var j = 0; j < $scope.selectedCustomers.length; j++) {
          if ($scope.selectedCustomers[j].customerid==res[i].customerid) {
            repeat=true;
            break;
          }
        }

        if (!repeat) {
          $scope.selectedCustomers.push(res[i]);
        }
      }

    });

  }
  $scope.removeSelectedCustomer=function(customerid){
    for (var i = 0; i < $scope.selectedCustomers.length; i++) {
      if ($scope.selectedCustomers[i].customerid==customerid) {
        $scope.selectedCustomers.splice(i,1);
        break;
      }
    }
    console.log($scope.selectedCustomers,$scope.currGroupCustomers);
  }

    //**********************关于群组管理界面的所有函数-----结束

  $scope.customerGroupCtrlInit=function(){
    document.getElementById('homeSpaceDiv_37px').style.display = "none";

    UserInfoService.cspCheckLoginState({},function(result) {
      if(result.result === "succeed") {
        if(result.loginState) {
          UserInfoService.cspCheckAuth({},function(res) {
            if(res.result === 'succeed') {
              $scope.cspCustomerLoadPath = "tpls/customerGroup/cspusers.html";

            }
            else {
              $state.go('usercenter');
            }
          })
        }
        else {
          $('#loginModal').remove();
          $state.go('home');
        }
      }
      else {
        $('#loginModal').remove();
        $state.go('home');
      }
    });
  }

// 初始化页面
  $(document).ready(function(){
    document.getElementById('csp_header_containter').style.display = "none";
    document.getElementById('csp_footer').style.display = "none";

      $scope.getAllGroup();
      console.log(customerGroupService.selectedCustomers);


    customerGroupService.getCustomerInfo({},function(result){
       $scope.customerInfo = result;
       $scope.customerAmount = $scope.customerInfo.length;
       $scope.operCustomerid = [];
       $scope.operCustomerGroupid = [];
    })

  });
});

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
 cspCtrls.controller('cspGroupExchangeCtrl',function($scope,$state,$interval,operLoginService,groupExchangeService) {
     //cookie中的账号信息，自动登录使用
	 $scope.cookieinfo = {};
     $scope.groupchangestate = -1;
     $scope.groupchangepath = "";
     $scope.groupchangepage = {};
     $scope.gidgroups = [];
     $scope.gidtreegroups = [];
     $scope.groupchangemodalpath = "";
     $scope.groupchangemodalstate = 0;
     $scope.groupmodalmenu = {};
     $scope.showmodal = false;
     $scope.loadinginfo = {};
     $scope.groupchangeinfo = {};
     $scope.exchangeNews = [];
     //定义数据
     $scope.allocateSecurities = [];
     $scope.changeSecurities = [];
     $scope.allocate_total_amt = 0;
     $scope.available_total_amt = 0;
     $scope.total_heaver_bp = 0;
     $scope.exchangeSecuritiesIndex = -1;
     $scope.gid = -1;
     $scope.cspGroupExchangeInit = function() {
        document.getElementById('csp_header_containter').style.display = "none";
  		document.getElementById('csp_footer').style.display = "none";
  		document.getElementById('homeSpaceDiv_37px').style.display = "none";
        //定义状态变量
        $scope.groupchangepage.groupExchange = 1;
        //读取cookie
 		if(!(document.cookie || navigator.cookieEnabled)) {
 			alert("浏览器未开启cookie,网站可能无法正常使用");
 			$state.go('operlogin');
 		}
        else {
            $scope.cookieinfo.exist = false;
			var cookieName = "cspOperLoginInfo=";
			var clist = document.cookie.split(";");
			for(var i = 0; i< clist.length; i++) {
				var ca = clist[i].trim();
				if(ca.indexOf(cookieName) == 0) {
					$scope.cookieinfo.cookieExist = true;
				    var accountInfo = JSON.parse(unescape(ca.substring(cookieName.length,ca.length)));
                    $scope.cookieinfo.login_maid = accountInfo.maid;
    				$scope.cookieinfo.login_oid = accountInfo.oid;
    				$scope.cookieinfo.login_pass = accountInfo.password;
                    break;
				}
            }
            //检查登录状态及cookie自动登录
			// operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(res) {
			// 	if(res.result == "succeed") {
			// 		//自动登录成功 to do...
			// 	}
			// 	else {
			// 		$state.go('operlogin');
			// 	}
			// })
            //检查登录状态及cookie自动登录
			operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(res) {
				if(res.result == "succeed") {
					//自动登录成功 to do...自定义初始化
                    $scope.loadinginfo.loading = false;
                    $scope.loadinginfo.error = false;
                    $scope.loadinginfo.errorString = "";
                    //定义弹框状态
                    $scope.groupmodalmenu.tipsmodal = 1;
                    $scope.groupmodalmenu.tipsmodalpath = "tpls/groupexchange/groupexchangetip.html";
                    $scope.groupmodalmenu.askchangemodal = 2;
                    $scope.groupmodalmenu.askchangemodalpath = "tpls/groupexchange/askchange.html";
                    $scope.groupmodalmenu.readchangenews = 3;
                    $scope.groupmodalmenu.readchangemodalpath = "tpls/groupexchange/readchangenews.html";
                    //验证组长身份
                    operLoginService.cspOperCheckGroupAndGetList({"useparams":0},function(cgaglres) {
                        if(cgaglres.result == "succeed") {
                            $scope.gidgroups.splice(0,$scope.gidgroups.length);
                            $scope.gidgroups = cgaglres.data;
                            $scope.groupchangestate = $scope.groupchangepage.groupExchange;
                            $scope.groupchangepath = "tpls/groupexchange/groupexchange.html";
                        }
                        else {
                            alert(cgaglres.reason);
                        }
                    })
				}
				else {
					$state.go('operlogin');
				}
			})
        }
     }

     $scope.cspGroupExchangeLoadReady = function() {
         switch ($scope.groupchangestate) {
             case $scope.groupchangepage.groupExchange:
                 jQuery("#csp_group_change_table").droppable({
                    drop:function(event, ui) {
                        $scope.$apply(function() {
                            $scope.cspGroupExchangeShowModal($scope.groupmodalmenu.tipsmodal);
                            $scope.loadinginfo.error = false;
                            $scope.loadinginfo.errorString = "操作中...";
                            var temp = {};
                            temp.gid = $scope.allocateSecurities[$scope.exchangeSecuritiesIndex].gid;
                            temp.gname = $scope.allocateSecurities[$scope.exchangeSecuritiesIndex].gname;
                            temp.cid = $scope.allocateSecurities[$scope.exchangeSecuritiesIndex].cid;
                            temp.code = $scope.allocateSecurities[$scope.exchangeSecuritiesIndex].code;
                            temp.cname = $scope.allocateSecurities[$scope.exchangeSecuritiesIndex].cname;
                            temp.last = $scope.allocateSecurities[$scope.exchangeSecuritiesIndex].last;
                            temp.post_exchange_vol = $scope.allocateSecurities[$scope.exchangeSecuritiesIndex].available_vol;
                            temp.post_exchange_amt = $scope.allocateSecurities[$scope.exchangeSecuritiesIndex].available_amt;
                            temp.stat = $scope.allocateSecurities[$scope.exchangeSecuritiesIndex].stat;
                            temp.trid = $scope.allocateSecurities[$scope.exchangeSecuritiesIndex].trid;
                            $scope.cspTableDrop(temp);
                        })
                    }
                 });
                 //获取交易单元列表
                 $scope.exchangeSecuritiesIndex = -1;
                 for(var i = 0; i < $scope.gidgroups.length; i++) {
                     var j = 0;
                     for(j = 0; j < $scope.gidtreegroups.length; j++) {
                         if($scope.gidtreegroups[j].caid == $scope.gidgroups[i].caid) {
                             break;
                         }
                     }
                     if( j >= $scope.gidtreegroups.length) {
                         var temp = {};
                         temp.caid = $scope.gidgroups[i].caid;
                         temp.caname = $scope.gidgroups[i].caname;
                         $scope.gidtreegroups.push(temp);
                     }
                 }
                 for( var m = 0; m < $scope.gidtreegroups.length; m ++) {
                     $scope.gidtreegroups[m].children = [];
                     for(var n = 0; n < $scope.gidgroups.length; n ++) {
                         if($scope.gidtreegroups[m].caid == $scope.gidgroups[n].caid) {
                             $scope.gidtreegroups[m].children.push($scope.gidgroups[n])
                         }
                     }
                 }
                 jQuery('#csp_group_exchange_float_dropdown').dropdown({
                     onChange: function(value,text,choice) {
                         if(value != "") {
                             //检查登录状态及cookie自动登录
                 			operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(res) {
                 				if(res.result == "succeed") {
                 					//自动登录成功 to do...
                                    $scope.gid = value;
                                    var ggiasjson = {};
                                    ggiasjson.gid = value;
                                    ggiasjson.trid = $scope.cspGetTrid(value);
                                    groupExchangeService.cspGroupExchangeGetGroupInfoAndStock(ggiasjson,function(ggiasres) {
                                        if(ggiasres.result == "succeed") {
                                            $scope.allocateSecurities.splice(0,$scope.allocateSecurities.length);
                                            $scope.changeSecurities.splice(0,$scope.changeSecurities.length);
                                            $scope.allocateSecurities = ggiasres.allocate_data;
                                            $scope.changeSecurities = ggiasres.exchange_data;
                                            $scope.allocate_total_amt = ggiasres.allocate_total_amt;
                                            $scope.available_total_amt = ggiasres.available_total_amt;
                                            $scope.total_heaver_bp = ggiasres.total_heaver_bp;
                                        }
                                        else {
                                            alert("获取数据失败");
                                        }
                                    })
                 				}
                 				else {
                 					$state.go('operlogin');
                 				}
                 			})
                         }
                     },
                     on: 'hover'
                 })
                 break;
             default:
                break;
         }
     }

     $scope.cspGetTrid = function(gid) {
         for(var i = 0; i < $scope.gidgroups.length; i ++) {
             if(gid == $scope.gidgroups[i].gid) {
                    return $scope.gidgroups[i].trid;
             }
         }
         return "";
     }

     //显示弹窗
     $scope.cspGroupExchangeShowModal = function(state) {
         switch (state) {
             case $scope.groupmodalmenu.tipsmodal:
                 $scope.groupchangemodalpath = $scope.groupmodalmenu.tipsmodalpath;
                 break;
             case $scope.groupmodalmenu.askchangemodal:
                 $scope.groupchangemodalpath = $scope.groupmodalmenu.askchangemodalpath;
                 break;
             case $scope.groupmodalmenu.readchangenews:
                 $scope.groupchangemodalpath = $scope.groupmodalmenu.readchangemodalpath;
                 break;
             default:
                break;
         }
         $scope.groupchangemodalstate = state;
         $scope.showmodal = true;
     }
     //隐藏弹框
     $scope.cspGroupExchangeHideModal = function() {
         $scope.showmodal = true;
         $scope.groupchangemodalpath = "";
         $scope.groupchangemodalstate = 0;
     }
     //弹框加载完毕
     $scope.cspGroupexchangeModalLoad = function() {
         switch ($scope.groupchangemodalstate) {
             case $scope.groupmodalmenu.tipsmodal:
                 break;
             case $scope.groupmodalmenu.askchangemodal:
                 break;
             default:
                break;
         }
     }

     $scope.drapaa = function() {
         //生成数据库
         if($scope.gid != -1) {
             //获取交易单元id;
             var json = {};
             json.data = [];
             for(var i = 0; i < 10; i ++) {
                 var tempjson = {
                     "gid" : $scope.gid,
                     "cid": String(Math.ceil(Math.random()*1000000)),
                     "cname": "股票" + i,
                     "available_vol": Math.ceil(Math.random()*10000),
                     "post_allocated_vol" : Math.ceil(Math.random()*10000),
                     "value": Math.ceil(Math.random()*10),
                     "stat": 0,
                     "trid":$scope.cspGetTrid($scope.gid)
                 };
                 json.data.push(tempjson);
             }
             groupExchangeService.writedb(json,function(res) {
                 console.log(res);
             })
         }
     }
     //触发拖动
     $scope.cspHoldtr = function(index) {
         var tid = '#as_' + index;
         $(tid).draggable({
             cursor: "move",
             cursorAt: { top: -2, left: -2 },
             helper: "clone",
             start: function() {
                 $scope.exchangeSecuritiesIndex = index;
             }
         });
     }

     //获取券表及券池
     $scope.cspGetStockAndPool = function(gid) {
         var ggsjson = {};
         ggsjson.gid = gid;
         ggsjson.trid = $scope.cspGetTrid(gid);
         groupExchangeService.cspGroupExchangeGetGroupStock(ggsjson,function(ggsres) {
             if(ggsres.result == "succeed") {
                 $scope.allocateSecurities.splice(0,$scope.allocateSecurities.length);
                 $scope.changeSecurities.splice(0,$scope.changeSecurities.length);
                 $scope.allocateSecurities = ggsres.data;
                 $scope.changeSecurities = ggsres.data1;
             }
             else {
                 alert("获取数据失败");
             }
         })
     }
     //判断是否存在券池
     $scope.cspCheckDrop = function(obj) {
         for( var i = 0; i < $scope.changeSecurities.length; i++) {
             if($scope.changeSecurities[i].gid == obj.gid && $scope.changeSecurities[i].cid == obj.cid) {
                 return true;
             }
         }
         return false;
     }
     //接收选择
     $scope.cspTableDrop = function(obj) {
         //判断是否已经存在券池
         if($scope.cspCheckDrop(obj) == true) {
             $scope.loadinginfo.error = true;
             $scope.loadinginfo.errorString = "已经在券池中了";
             var second = 1;
             var timePromise = $interval(function(){
                 if(second<=0){
                   $interval.cancel(timePromise);
                   $scope.cspGroupExchangeHideModal();
                 }else{
                   second--;
                 }
             },500,100);
         }
         else {
             //检查登录状态及cookie自动登录
             operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(res) {
             	if(res.result == "succeed") {
             		//自动登录成功 to do...添加到数据库
                    groupExchangeService.cspGroupExchangeAddExchange(obj,function(aeres) {
                        if(aeres.result == "succeed") {
                            $scope.changeSecurities.push(obj);
                            $scope.cspGroupExchangeHideModal();
                            $scope.cspGetStockAndPool($scope.gid);
                        }
                        else {
                            $scope.loadinginfo.error = true;
                            $scope.loadinginfo.errorString = aeres.reason;
                            var second = 1;
                            var timePromise = $interval(function(){
                                if(second<=0){
                                  $interval.cancel(timePromise);
                                  $scope.cspGroupExchangeHideModal();
                                }else{
                                  second--;
                                }
                            },500,100);
                        }
                    })
             	}
             	else {
             		$state.go('operlogin');
             	}
             })
         }
     }

     //从公共券池中删除
     $scope.cspGroupExchangeDeleteExchange = function(index) {
         //检查登录状态及cookie自动登录
         $scope.cspGroupExchangeShowModal($scope.groupmodalmenu.tipsmodal);
         $scope.loadinginfo.error = false;
         $scope.loadinginfo.errorString = "操作中...";
         operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(res) {
         	if(res.result == "succeed") {
         		//自动登录成功 to do...撤销
                var dejson = {};
                dejson.gid = $scope.changeSecurities[index].gid;
                dejson.cid = $scope.changeSecurities[index].cid;
                groupExchangeService.cspGroupExchangeDeleteExchange(dejson,function(deres) {
                    if(deres.result == "succeed") {
                        $scope.changeSecurities.splice(index,1);
                        $scope.cspGroupExchangeHideModal();
                        $scope.cspGetStockAndPool($scope.gid);
                    }
                    else {
                        $scope.loadinginfo.error = true;
                        $scope.loadinginfo.errorString = deres.reason;
                        var second = 1;
                        var timePromise = $interval(function(){
                            if(second<=0){
                              $interval.cancel(timePromise);
                              $scope.cspGroupExchangeHideModal();
                            }else{
                              second--;
                            }
                        },500,100);
                    }
                 })
         	}
         	else {
         		$state.go('operlogin');
         	}
         })
     }

     //申请换券
     $scope.cspGroupExchangeAskChange = function(index) {
         //初始化申请方的数据
         if($scope.allocateSecurities.length > 0) {
             $scope.groupchangeinfo.ask_gid = $scope.allocateSecurities[0].gid;
             $scope.groupchangeinfo.ask_cid = $scope.allocateSecurities[0].cid;
             $scope.groupchangeinfo.ask_code = $scope.allocateSecurities[0].code;
             $scope.groupchangeinfo.ask_cname = $scope.allocateSecurities[0].cname;
             $scope.groupchangeinfo.ask_last = $scope.allocateSecurities[0].last;
             $scope.groupchangeinfo.ask_volume = $scope.allocateSecurities[0].available_vol;
             $scope.groupchangeinfo.ask_value = $scope.allocateSecurities[0].available_amt;
         }
         else {
             $scope.groupchangeinfo.ask_gid = -1;;
             $scope.groupchangeinfo.ask_cid = "";
             $scope.groupchangeinfo.ask_code = "";
             $scope.groupchangeinfo.ask_cname = "";
             $scope.groupchangeinfo.ask_last = 0;
             $scope.groupchangeinfo.ask_volume = 0;
             $scope.groupchangeinfo.ask_value = 0;
         }
         //初始化被申请方的数据
         $scope.groupchangeinfo.asked_gid = $scope.changeSecurities[index].gid;
         $scope.groupchangeinfo.asked_gname = $scope.changeSecurities[index].gname;
         $scope.groupchangeinfo.asked_cid = $scope.changeSecurities[index].cid;
         $scope.groupchangeinfo.asked_code = $scope.changeSecurities[index].code;
         $scope.groupchangeinfo.asked_last = $scope.changeSecurities[index].last;
         $scope.groupchangeinfo.asked_cname = $scope.changeSecurities[index].cname;
         $scope.groupchangeinfo.asked_volume = $scope.changeSecurities[index].post_exchange_vol;
         $scope.groupchangeinfo.asked_value = $scope.changeSecurities[index].post_exchange_amt;
         $scope.groupchangeinfo.loading = false;
         $scope.groupchangeinfo.error = false;
         $scope.groupchangeinfo.errorString = "";
         $scope.cspGroupExchangeShowModal($scope.groupmodalmenu.askchangemodal);
     }

     //通过code获取证券信息
     $scope.cspGroupExchangeGetIndexByCode = function(code) {
         for(var i = 0; i < $scope.allocateSecurities.length; i++) {
             return i;
         }
         return -1;
     }

     //改变申请用的券
     $scope.cspGroupExchangeAskCodeChange = function() {
         var reg = /^[0-9]{6}$/;
         var reg1 = /^[0-9]+$/;
         if(!reg.test($scope.groupchangeinfo.ask_code)) {
             $scope.groupchangeinfo.ask_gid = -1;;
             $scope.groupchangeinfo.ask_cid = "";
             $scope.groupchangeinfo.ask_cname = "";
             $scope.groupchangeinfo.ask_last = 0;
             $scope.groupchangeinfo.ask_value = 0;
         }
         else {
             var index = $scope.cspGroupExchangeGetIndexByCode($scope.groupchangeinfo.ask_code);
             if(index != -1) {
                 $scope.groupchangeinfo.ask_gid = $scope.allocateSecurities[0].gid;
                 $scope.groupchangeinfo.ask_cid = $scope.allocateSecurities[0].cid;
                 $scope.groupchangeinfo.ask_cname = $scope.allocateSecurities[0].cname;
                 $scope.groupchangeinfo.ask_last = $scope.allocateSecurities[0].last;
                 if(!reg1.test($scope.groupchangeinfo.ask_volume)) {
                     $scope.groupchangeinfo.ask_value = 0;
                 }
                 else {
                     $scope.groupchangeinfo.ask_value = $scope.groupchangeinfo.ask_volume * $scope.groupchangeinfo.ask_last;
                 }
             }
             else {
                 $scope.groupchangeinfo.ask_gid = -1;;
                 $scope.groupchangeinfo.ask_cid = "";
                 $scope.groupchangeinfo.ask_cname = "";
                 $scope.groupchangeinfo.ask_last = 0;
                 $scope.groupchangeinfo.ask_value = 0;
             }
         }
     }

     //改变申请券数量
     $scope.cspGroupExchangeAskNumberChange = function() {
         var reg = /^[0-9]+$/;
         if(!reg.test($scope.groupchangeinfo.ask_volume)) {
             $scope.groupchangeinfo.ask_value = 0;
         }
         else {
             $scope.groupchangeinfo.ask_value = $scope.groupchangeinfo.ask_volume * $scope.groupchangeinfo.ask_last;
         }
     }

     //改变交换券数量
     $scope.cspGroupExchangeAskedNumberChange = function() {
         var reg = /^[0-9]+$/;
         if(!reg.test($scope.groupchangeinfo.asked_volume)) {
             $scope.groupchangeinfo.asked_value = 0;
         }
         else {
             $scope.groupchangeinfo.asked_value = $scope.groupchangeinfo.asked_volume * $scope.groupchangeinfo.asked_last;
         }
     }

     //提交换券申请
     $scope.cspGroupExchangeAskChangeSure = function() {
         //启用动画
         var second = 1;
         var timePromise = undefined;
         var reg = /^[0-9]+$/;
         $scope.groupchangeinfo.loading = true;
         $scope.groupchangeinfo.error = false;
         $scope.groupchangeinfo.errorString = "正在提交";
         if($scope.groupchangeinfo.ask_gid == -1) {
             $scope.groupchangeinfo.error = true;
             $scope.groupchangeinfo.errorString = "请输入申请交换的证券代码";
             timePromise = $interval(function(){
                 if(second<=0){
                   $interval.cancel(timePromise);
                   $scope.groupchangeinfo.loading = false;
                 }else{
                   second--;
                 }
             },500,100);
         }
         else if(!reg.test($scope.groupchangeinfo.ask_volume)) {
             $scope.groupchangeinfo.error = true;
             $scope.groupchangeinfo.errorString = "请输入申请交换的数量";
             timePromise = $interval(function(){
                 if(second<=0){
                   $interval.cancel(timePromise);
                   $scope.groupchangeinfo.loading = false;
                 }else{
                   second--;
                 }
             },500,100);
         }
         else if(!reg.test($scope.groupchangeinfo.asked_volume)) {
             $scope.groupchangeinfo.error = true;
             $scope.groupchangeinfo.errorString = "请输入申请得到的数量";
             timePromise = $interval(function(){
                 if(second<=0){
                   $interval.cancel(timePromise);
                   $scope.groupchangeinfo.loading = false;
                 }else{
                   second--;
                 }
             },500,100);
         }
         else {
             //检查登录状态及cookie自动登录
 			operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(res) {
 				if(res.result == "succeed") {
 					//自动登录成功 to do...写入数据库
                    var aaejson = {};
                    aaejson.ask_gid = $scope.groupchangeinfo.ask_gid;
                    aaejson.ask_cid = $scope.groupchangeinfo.ask_cid;
                    aaejson.ask_cname = $scope.groupchangeinfo.ask_cname;
                    aaejson.ask_volume = $scope.groupchangeinfo.ask_volume;
                    aaejson.ask_value = $scope.groupchangeinfo.ask_value;
                    aaejson.asked_gid = $scope.groupchangeinfo.asked_gid;
                    aaejson.asked_cid = $scope.groupchangeinfo.asked_cid;
                    aaejson.asked_cname = $scope.groupchangeinfo.asked_cname;
                    aaejson.asked_volume = $scope.groupchangeinfo.asked_volume;
                    aaejson.asked_value = $scope.groupchangeinfo.asked_value;
                    console.log(aaejson);
                    groupExchangeService.cspGroupExchangeAddAskExchange(aaejson,function(aaeres) {
                        if(aaeres.result == "succeed") {
                            $scope.groupchangeinfo.error = true;
                            $scope.groupchangeinfo.errorString = "提交申请成功，等待对方处理";
                            timePromise = $interval(function(){
                                if(second<=0){
                                  $interval.cancel(timePromise);
                                  $scope.cspGroupExchangeHideModal();
                                }else{
                                  second--;
                                }
                            },500,100);
                        }
                        else {
                            $scope.groupchangeinfo.error = true;
                            $scope.groupchangeinfo.errorString = aaeres.reason;
                            timePromise = $interval(function(){
                                if(second<=0){
                                  $interval.cancel(timePromise);
                                  $scope.groupchangeinfo.loading = false;
                                }else{
                                  second--;
                                }
                            },500,100);
                        }
                    })
 				}
 				else {
 					$state.go('operlogin');
 				}
 			})
         }
     }

     //查看消息
     $scope.cspGroupExchangeReadNews = function(index) {
         var genjson = {};
         genjson.gid = $scope.allocateSecurities[index].gid;
         genjson.cid = $scope.allocateSecurities[index].cid;
         $scope.exchangeNews.splice(0,$scope.exchangeNews.length);
         //启用动画
         var second = 1;
         var timePromise = undefined;
         $scope.loadinginfo.loading = true;
         $scope.loadinginfo.error = false;
         $scope.loadinginfo.errorString = "正在加载数据";
         //弹出modal
         $scope.cspGroupExchangeShowModal($scope.groupmodalmenu.readchangenews);

         //检查登录状态及cookie自动登录
         operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(res) {
         	if(res.result == "succeed") {
         		//自动登录成功 to do...获取消息
                groupExchangeService.cspGroupExchangeGetExchangeNews(genjson,function(genres) {
                    if(genres.result == "succeed") {
                        $scope.exchangeNews = genres.data;
                        $scope.loadinginfo.loading = false;
                    }
                    else {
                        $scope.loadinginfo.error = true;
                        $scope.loadinginfo.errorString = genres.reason;
                        timePromise = $interval(function(){
                            if(second<=0){
                              $interval.cancel(timePromise);
                              $scope.cspGroupExchangeHideModal();
                            }else{
                              second--;
                            }
                        },500,100);
                    }
                })
         	}
         	else {
         		$state.go('operlogin');
         	}
         })
     }

 })

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
cspCtrls.controller('cspHeaderCtrl',
function($scope,$state,$location,UserInfoService,usercenterService) {

//去除hover的背景阴影

$(document).ready(function(){
  $("a.item1").hover(function(){
    $(".item1").css("background-color","#fff");
  });

});

//下移动时变化导航栏

$(window).scroll(function(){
  // console.log("xxxxx",$(this).scrollTop())
if($(this).scrollTop()>=80){

$('.csp_header_menu_container2').show();
}else {
$('.csp_header_menu_container2').hide();

}
});




	//到个人中心
  $scope.goUserCenter =  function(page) {
    $('.csp_header_dropdown_menu').css("display","none");
    UserInfoService.cspCheckLoginState('', function(res){

      if(res.loginState!==true){
        if($location.path()!='/home'){
          $('#loginModal').remove();
        }
          $state.go('home');
          jQuery('#loginModal').modal('show');

          return;
      }else {
        UserInfoService.cspCheckRiskState({},function(result) {
				if(!(result.result === 'succeed' && result.riskstate === true)) {
						event.preventDefault();// 取消默认跳转行为
						$state.go("risklevel");//跳转风险评测
					}else {

            var params1={};
            params1.centerData={}
            params1.centerData.page=page;
            usercenterService.setCenterData(params1,function(res){
                $state.go('usercenter');
                if(page===0){
                  document.getElementById('user_dataform').style.display='';
            			document.getElementById('user_passform').style.display='none';

            			$("#user_databutton").addClass("active");
            			$("#user_passbutton").removeClass("active");
                }else {
                  $("#user_passbutton").addClass("active");
                  $("#user_databutton").removeClass("active");

                  document.getElementById('user_dataform').style.display='none';
                  document.getElementById('user_passform').style.display='';
                  document.getElementById('user_oldpass').value='';
                  document.getElementById('user_firstnewpass').value='';
                  document.getElementById('user_secondnewpass').value='';

                }

            });

					}
        });

      }
    });

  }
	 //到留言板
	 $scope.goToComment =  function() {
         UserInfoService.cspCheckLoginState({},function(result) {
             if(result.result === "succeed" && result.loginState === true) {
                 UserInfoService.cspCheckRiskState({},function(res) {
                     if(res.result === "succeed" && res.riskstate === true) {
                         $state.go('comment');
                     }
                     else {
                         $state.go('risklevel');
                     }
                 })
             }
             else {
               if($location.path()!='/home'){
                 $('#loginModal').remove();
               }
                 $state.go('home');
                 jQuery('#loginModal').modal('show');
             }
         })
	 }

     //到网站首页
     $scope.cspGoHome = function() {
         UserInfoService.cspCheckLoginState({},function(result) {
             if(result.result === "succeed" && result.loginState === true) {
                 UserInfoService.cspCheckRiskState({},function(res) {
                     if(res.result === "succeed" && res.riskstate === true) {
                       if($location.path()!='/home'){
                         $('#loginModal').remove();
                       }
                         $state.go('home');
                     }
                     else {
                         $state.go('risklevel');
                     }
                 })
             }
             else {
               if($location.path()!='/home'){
                 $('#loginModal').remove();
               }
                 $state.go('home');
                 jQuery('#loginModal').modal('show');
             }
         })
     }

  $scope.cspGoProducts=function(){
    UserInfoService.cspCheckLoginState('', function(res){

      if(res.loginState!==true){
          if($location.path()!='/home'){
            $('#loginModal').remove();
          }
          $state.go('home');
          jQuery('#loginModal').modal('show');
          return;
      }else {
        UserInfoService.cspCheckRiskState({},function(result) {
				if(!(result.result === 'succeed' && result.riskstate === true)) {
						event.preventDefault();// 取消默认跳转行为
						$state.go("risklevel");//跳转风险评测
					}else{
            $state.go("allProducts");
          }
        });

      }
    });
  }

  $scope.cspGoOtherProducts=function(){
    UserInfoService.cspCheckLoginState('', function(res){

      if(res.loginState!==true){
          if($location.path()!='/home'){
            $('#loginModal').remove();
          }
          $state.go('home');
          jQuery('#loginModal').modal('show');
          return;
      }else {
        UserInfoService.cspCheckRiskState({},function(result) {
				if(!(result.result === 'succeed' && result.riskstate === true)) {
						event.preventDefault();// 取消默认跳转行为
						$state.go("risklevel");//跳转风险评测
					}else{
            $state.go("allProducts0");
          }
        });

      }
    });
  }

  //



	$scope.cspHeaderDropMenuMove = function() {
		$('.csp_header_dropdown_menu').css("display","block");
	}
	$scope.cspHeaderDropMenuOut = function() {
		$('.csp_header_dropdown_menu').css("display","none");
	}

	$scope.cspLoginOut = function() {
    $('.csp_header_dropdown_menu').css("display","none");

		UserInfoService.cspCheckLoginState({},function(res) {
			if(res.result === 'succeed' && res.loginState) {
        // var storage=window.localStorage;
        // storage.clear();
        // console.log("storage:",storage);

        document.getElementById('header_username').innerHTML='用户中心'
				$state.go('loginout');
			}
		})
	}

    $scope.cspHomeOver = function() {
        //document.getElementById('csp_header_home_label').style.color = "rgb(205,127,50)";
        jQuery("#csp_header_home_label").addClass("csp_header_over_label");

    }
    $scope.cspHomeOut = function() {
        //document.getElementById('csp_header_home_label').style.color = "black";
        jQuery("#csp_header_home_label").removeClass("csp_header_over_label");

    }

    $scope.cspProductOver = function() {
        //document.getElementById('csp_header_product_label').style.color = "rgb(205,127,50)";
        jQuery("#csp_header_product_label").addClass("csp_header_over_label");

    }
    $scope.cspProductOver0 = function() {
        jQuery("#csp_header_product0_label").addClass("csp_header_over_label");
    }
    $scope.cspProductOut = function() {
        //document.getElementById('csp_header_product_label').style.color = "black";
        jQuery("#csp_header_product_label").removeClass("csp_header_over_label");

    }
    $scope.cspProductOut0 = function() {
        jQuery("#csp_header_product0_label").removeClass("csp_header_over_label");
    }


    $scope.cspCommentOver = function() {
        //document.getElementById('csp_header_comment_label').style.color = "rgb(205,127,50)";
        jQuery("#csp_header_comment_label").addClass("csp_header_over_label");

    }
    $scope.cspCommentOut = function() {
        //document.getElementById('csp_header_comment_label').style.color = "black";
        jQuery("#csp_header_comment_label").removeClass("csp_header_over_label");

    }

    $scope.cspHomeOver2 = function() {
        //document.getElementById('csp_header_home_label').style.color = "rgb(205,127,50)";
        jQuery("#csp_header_home_label2").addClass("csp_header_over_label2");

    }
    $scope.cspHomeOut2 = function() {
        //document.getElementById('csp_header_home_label').style.color = "black";
        jQuery("#csp_header_home_label2").removeClass("csp_header_over_label2");

    }

    $scope.cspProductOver2 = function() {
        //document.getElementById('csp_header_product_label').style.color = "rgb(205,127,50)";
        jQuery("#csp_header_product_label2").addClass("csp_header_over_label2");

    }
    $scope.cspProductOut2 = function() {
        //document.getElementById('csp_header_product_label').style.color = "black";
        jQuery("#csp_header_product_label2").removeClass("csp_header_over_label2");

    }


    $scope.cspCommentOver2 = function() {
        //document.getElementById('csp_header_comment_label').style.color = "rgb(205,127,50)";
        jQuery("#csp_header_comment_label2").addClass("csp_header_over_label2");

    }
    $scope.cspCommentOut2 = function() {
        //document.getElementById('csp_header_comment_label').style.color = "black";
        jQuery("#csp_header_comment_label2").removeClass("csp_header_over_label2");

    }

    $scope.cspProductOver02 = function() {
        jQuery("#csp_header_product0_label2").addClass("csp_header_over_label2");
    }
    $scope.cspProductOut02 = function() {
        jQuery("#csp_header_product0_label2").removeClass("csp_header_over_label2");
    }
})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */


cspCtrls.controller('HomeCtrl',function($scope,$state,$http,$interval,$location,HomeService,RegisterService,$filter,UserInfoService,productService,productService0,usercenterService){
  // var storage=window.localStorage;
  $scope.cookieInfo = {};
  $scope.status={
    login: 0,
    register: 1,
    loginsucess: 0,
    loginerror: 0,
    registersuccess: 0,
    registersuccess1: 0,
    registererror1:0,
    registererror2:0,
    wechatLogin:0
  }
  $scope.currentUser={};//保存当前的用户信息

  $scope.inputAccountChange=false;

  $scope.products=[];//保存产品卡片的信息
  $scope.products0=[];



  //定义一个计时器
  $scope.timePromise = undefined;
  //发送验证码状态
  $scope.codeState = true;

  $scope.userInfo = {
    info: '',
    password: ''
  }

  // $ocLazyLoad.load('lib/echarts.js').then(function(){
  //   $scope.categoryChartsInit();
  //   $scope.getNetProduct();
  // });



  if (window.WebSocket){
    var ws = new WebSocket("ws://localhost:8181");
     function sendWebSocket(){
      if (ws.readyState===1) {
        var obj={type:'stock'};
        ws.send(JSON.stringify(obj));
      }


    }

     ws.onopen = function (e) {
         console.log('Connection to server opened',e);
     }
     ws.onmessage = function (message) {
         console.log('onmessage',message);
     }
     //异常处理
    ws.onerror = function(e) {
      console.log("WebSocket Error: " , e);
      //Custom function for handling errors

    };

    ws.onclose = function(e) {
    console.log("Connection closed", e);
    };
  } else {
    alert("您的浏览器不支持webSocket,将无法接收到系统推送,请使用更新的浏览器.");
  }






  $scope.getWechatAccess_token =  function(destUrl) {

    $http.get(destUrl).success(function(res) {
      console.log(res);

    }).error(function(res) {
      console.log(res);
    });
  };

  $scope.OverBtn=function($event){
    $($event.target).addClass('btnActive');
  }
  $scope.OutBtn=function($event){
    $($event.target).removeClass('btnActive');
  }

  $scope.saveUserAndPass = function(tname,tvalue) {
    // var name=escape(tname);
    // var value=escape(tvalue);
     var expires = new Date();
     expires.setTime(expires.getTime() + 7*24*60*60*1000);
    //
    // var str="userAccount="+name+";expires=" + expires.toGMTString();
    // console.log('expires',str);
    // document.cookie =str;
    //
    // var str="value="+ value + ";expires=" + expires.toGMTString();
    // console.log('expires',str);
    // document.cookie =str;

    console.log(document.cookie);
    var savejson = {};
    savejson.username = tname;
    savejson.password = tvalue;
    var savestr = JSON.stringify(savejson);
    var str = "userinfo=" + escape(savestr) + ";expires=" + expires.toGMTString();
    document.cookie =str;
  }

  $scope.getCookie=function (){
    // var name = "userAccount=";
    // var value='value=';
    // var ca = document.cookie.split(';');
    // var varible=document.cookie;
    // console.log("document.cookie",varible);
    //
    // var obj={};
    //
    // for(var i=0; i<ca.length; i++){
    //   var c = ca[i].trim();
    //   if (c.indexOf(name)==0){
    //    obj.userAccount= c.substring(name.length,c.length);
    //   }
    //   else if(c.indexOf(value)==0){
    //     obj.value=c.substring(value.length,c.length);
    //   }
    // }
    // console.log(obj);
    var obj = {};
    var name = "userinfo=";
    var ca = document.cookie.split(';');
    for(var i=0; i<ca.length; i++){
        var c = ca[i].trim();
        if (c.indexOf(name)==0){
            var tmp = JSON.parse(unescape(c.substring(name.length,c.length)));
            obj.userAccount = tmp.username;
            obj.value = tmp.password;
            break;
        }
    }
    return obj;
  }

  $scope.deleteCookie=function (){
    // document.cookie = "userAccount=; expires=Thu, 01 Jan 1970 00:00:00 GMT";
    // document.cookie = "value=; expires=Thu, 01 Jan 1970 00:00:00 GMT";
    document.cookie = "userinfo=; expires=Thu, 01 Jan 1970 00:00:00 GMT";
    console.log('document.cookie',document.cookie);
  }


  function getSimpleText(html){
	var re1 = new RegExp("<.+?>","g");//匹配html标签的正则表达式，"g"是搜索匹配多个符合的内容
	var msg = html.replace(re1,'');//执行替换成空字符
	return msg;
	}

  $scope.setHeaderName=function(userInfo){
    usercenterService.getUserInfo(userInfo,function(res){
      if(res==false){
        return;
      }
      $scope.currentUser=res;
      if(res.conlevel==7||res.conlevel==2||res.conlevel==1)//只有是砖石会员才会显示策略产品
      {
        document.getElementById('product0Btn').style.display='';
        document.getElementById('product0BigBtn').style.display='';

        $scope.getCardsProduct0();
      }
      document.getElementById('header_username').innerText=res.tel;
    });
  }

  jQuery(document).ready(function(){
        document.getElementById('csp_header_home_label').className = "csp_header_label csp_header_active_label";
        document.getElementById('csp_header_home_label2').className = "csp_header_label2 csp_header_active_label2";

        document.getElementById('csp_header_comment_label').className = "csp_header_label";
        document.getElementById('csp_header_product_label').className = "csp_header_label";
        document.getElementById('csp_header_product0_label').className = "csp_header_label ";

        document.getElementById('csp_header_comment_label2').className = "csp_header_label2";
        document.getElementById('csp_header_product_label2').className = "csp_header_label2";
        document.getElementById('csp_header_product0_label2').className = "csp_header_label2 ";

        document.getElementById('csp_header_containter').style.display = "block";
        document.getElementById('csp_footer').style.display = "block";

        //读取cookie
        if(!(document.cookie || navigator.cookieEnabled)) {
            alert("浏览器未开启cookie,网站可能无法正常使用");
        }
        else {
            //读取cookie
            $scope.cookieInfo.exist = false;
            console.log(document.cookie);
            var cookieName = "userinfo=";
            var clist = document.cookie.split(";");
            for(var i = 0; i< clist.length; i++) {
                var ca = clist[i].trim();
                if(ca.indexOf(cookieName) == 0) {
                    $scope.cookieInfo.exist = true;
                    var temp = JSON.parse(unescape(ca.substring(cookieName.length,ca.length)));
                    $scope.cookieInfo.username = temp.username;
                    $scope.cookieInfo.password = temp.password;
                    break;
                }
            }
            //验证登录状态
            UserInfoService.cspUserCheckAndLoginByCookie($scope.cookieInfo,function(loginres) {
                if(loginres.result == "succeed") {
                    if(loginres.gorisk == true) {
                        $state.go('risklevel');
                    }
                    else {
                        //登录成功，to do..
                        $scope.setHeaderName({});
                    }
                }
                else {
                    if(typeof($location.search().code)=='undefined'){
                      jQuery('#loginModal').modal('show');
                    }
                    else {
                        var codeToAccess_token={};
                  		codeToAccess_token.code=$location.search().code;
                        UserInfoService.cspCheckWechatCode(codeToAccess_token,function(res){
                            if(res.result===false){
                                 jQuery('#loginModal').modal('show');
                            }
                            else {
                              var wechatAccount={};
                              wechatAccount.openid=res.openid;
                              wechatAccount.unionid=res.unionid;
                              wechatAccount.nickname=res.nickname;

                              UserInfoService.WechatLogin(wechatAccount,function(res){
                                    if(res.result===false){
                                      console.log('登录微信失败');
                                      if(res.length==0)
                                        $state.go('wchatreg');
                                        else {
                                          jQuery('#loginModal').modal('show');
                                        }
                                      return;
                                    }
                                    else {
                                      $scope.setHeaderName(res);
                                      console.log('登录微信成功',res);
                                    }
                              });
                            }
                        });
                    }
                }
            })
        }


        $('.flexslider').flexslider({

            animation: "slide",
            directionNav: true,
            slideshowSpeed:3000,
            prevText:"",
            nextText:"",
            pauseOnHover:false,
            pauseOnAction: false, //当前有动作是否暂停
            // controlsContainer: $(".custom-controls-container")
            customDirectionNav: $(".custom-navigation a")
        });

        var getPxtoNum=function(pxValue){
          var reg = /\d+/;
          var num = pxValue.match(reg)[0];
          return num;
        }

        $('#lunbobanner').mouseenter(function(){
          var bannerh = $('#lunbobanner').css("height");
          var bh= getPxtoNum(bannerh);
          bh=bh/2+35;
          var posh = "-" +bh + "px";

          $(".custom-navigation").css("top",posh);
          document.getElementById('customNavigation').style.visibility = "visible";
          //$(".custom-navigation").css("visibility",'visible');
          //$(".custom-navigation").show();
        });


        $('#lunbobanner').mouseleave(function(){
          document.getElementById('customNavigation').style.visibility = "hidden";

        });

        var option={};
        option.page=1;
        option.pageRows=3;
        $scope.getCardsProduct();
  })

  //初始化
  $scope.cspHomeInit = function() {
      //..
  }

  //获取普通卡片的所有产品
  $scope.getCardsProduct=function(){
    var params={};
    params.protype=1;
    productService.getCardsProduct(params,function(res){
      if (res.result==false) {
        return;
      }
      $scope.products=res;

      for (var i = 0; i < res.length; i++) {
        if (typeof(res[i].date)=='undefined'||res[i].date===null) {
          res[i].net='--';
          res[i].accrate='--';
        }
        else {
          res[i].net=res[i].net.toFixed(3);
          res[i].accrate=((res[i].totalnet-1)*100).toFixed(2)+'%';
        }
      }
    });

  }
  //获取策略卡片的所有产品
  $scope.getCardsProduct0=function(){
    var params={};
    params.protype=2;
    productService0.getCardsProduct(params,function(res){
      if (res.result==false) {
        return;
      }
      $scope.products0=res;
      for (var i = 0; i < res.length; i++) {
        if (typeof(res[i].date)=='undefined'||res[i].date===null) {
          res[i].net='--';
          res[i].accrate='--';
        }
        else {
          res[i].net=res[i].net.toFixed(3);
          res[i].accrate=((res[i].totalnet-1)*100).toFixed(2)+'%';
        }
      }
    });
  }

$scope.getWechatLogin =  function() {

  console.log("getWechatLogin");
};

$scope.checkField=function() {
  $scope.inputAccountChange=true;
  console.log('inputAccountChange',$scope.inputAccountChange);
}


  //产品展示中心
$scope.goProductView =  function(productID){
  console.log('productID',productID);

  UserInfoService.cspCheckLoginState('', function(res){

    if(res.loginState!==true){
        if($location.path()!='/home'){
          $('#loginModal').remove();
        }
        $state.go('home');
        jQuery('#loginModal').modal('show');
        return;
    }else {
      UserInfoService.cspCheckRiskState({},function(result) {
      if(!(result.result === 'succeed' && result.riskstate === true)) {
          $state.go("risklevel");//跳转风险评测
        }else{

          var product={};
          product.productID=productID;
          productService.setProductID(product,function(res){
            if(res.result===false){
              console.log('产品界面设置当前productid失败');
            }
            else{
              $state.go('productView');
            }
          });

        }
      });

    }
  });



  }

  $scope.goProductView0 =  function(productID){
    UserInfoService.cspCheckLoginState('', function(res){

      if(res.loginState!==true){
          if($location.path()!='/home'){
            $('#loginModal').remove();
          }
          $state.go('home');
          jQuery('#loginModal').modal('show');
          return;
      }else {
        UserInfoService.cspCheckRiskState({},function(result) {
				if(!(result.result === 'succeed' && result.riskstate === true)) {
						$state.go("risklevel");//跳转风险评测
					}else{
            var product={};
            product.productID=productID;
            productService0.setProductID(product,function(res){
              if(res.result===false){
                console.log('产品界面设置当前productid失败');
              }
              else{
                $state.go('productView0');
              }
            });
          }
        });

      }
    });



    }

  $scope.subscribeProduct=function(productID){

    UserInfoService.cspCheckLoginState('', function(res){

      if(res.loginState!==true){
          if($location.path()!='/home'){
            $('#loginModal').remove();
          }
          $state.go('home');
          jQuery('#loginModal').modal('show');
          return;
      }else {
        UserInfoService.cspCheckRiskState({},function(result) {
				if(!(result.result === 'succeed' && result.riskstate === true)) {
						$state.go("risklevel");//跳转风险评测
					}else{

            var product={};
            product.productID=productID;
            productService.setProductID(product,function(res){
              if(res.result===false){
                console.log('产品界面设置当前productid失败');
              }
              else{
                $scope.$broadcast("userBuyProduct", 'name');
                jQuery('#allPro_orderModal').remove();
                jQuery('#orderModal').modal('show');
              }
            });
          }
        });

      }
    });



  }

  $scope.cspGoProducts=function(){
    UserInfoService.cspCheckLoginState('', function(res){

      if(res.loginState!==true){
          if($location.path()!='/home'){
            $('#loginModal').remove();
          }
          $state.go('home');
          jQuery('#loginModal').modal('show');
          return;
      }else {
        UserInfoService.cspCheckRiskState({},function(result) {
				if(!(result.result === 'succeed' && result.riskstate === true)) {
						$state.go("risklevel");//跳转风险评测
					}else{
            $state.go("allProducts");
          }
        });

      }
    });
  }

  $scope.cspGoProducts0=function(){
    UserInfoService.cspCheckLoginState('', function(res){

      if(res.loginState!==true){
          if($location.path()!='/home'){
            $('#loginModal').remove();
          }
          $state.go('home');
          jQuery('#loginModal').modal('show');
          return;
      }else {
        UserInfoService.cspCheckRiskState({},function(result) {
				if(!(result.result === 'succeed' && result.riskstate === true)) {
						$state.go("risklevel");//跳转风险评测
					}else{
            $state.go("allProducts0");
          }
        });

      }
    });
  }

  //自动登录
 $scope.autoLogin = function(userInfo){
   if(userInfo.info==''||typeof(userInfo.info)=='undefined'||
      userInfo.password==''||typeof(userInfo.password)=='undefined'){
  } else {

    HomeService.athen(userInfo, function(res){
        if(res[0]==='undefined'||JSON.stringify(res)==='[]'){
          console.log("登录失败")
          HomeService.reset($scope.status,"loginerror");
        }
        else{
          var params = {
            time: '',
            uid: ''
          };
          params.time = $filter('date')(new Date(),'yyyy-MM-dd HH:mm:ss');

          console.log("time",params.time);
          params.uid = res.uid;
          HomeService.lastLoginTime(params, function(data){
          console.log("登录成功");
            var a = {
              uid: ''
            }
            a.uid = params.uid;
          $scope.setHeaderName(params);
          $scope.setCurrentUser(a);
          jQuery('#loginModal').modal('hide');
          UserInfoService.cspCheckRiskState({},function(result) {
              if(!(result.result === 'succeed' && result.riskstate === true)) {
                  $state.go("risklevel");//跳转风险评测
              }
          })
        });
        }
      });
  }
 }
  //登录
 $scope.autoLogin = function(userInfo){
   if(userInfo.info==''||typeof(userInfo.info)=='undefined'||
      userInfo.password==''||typeof(userInfo.password)=='undefined'){
        return;
  }
  UserInfoService.checkAutoLogin('', function(res){
    console.log('checkAutoLogin',res);
    if(res.result==false){
      console.log('不允许自动登录');
      return;
    }else {
      HomeService.athen(userInfo, function(res){
        console.log('允许自动登录');
          if(res[0]==='undefined'||JSON.stringify(res)==='[]'){
            console.log("登录失败")
            HomeService.reset($scope.status,"loginerror");
          }
          else{
            var params = {
              time: '',
              uid: ''
            };
            params.time = $filter('date')(new Date(),'yyyy-MM-dd HH:mm:ss');

            console.log("time",params.time)
            params.uid = res.uid;
            HomeService.lastLoginTime(params, function(data){
            console.log("登录成功");
              var a = {
                uid: ''
              }
              a.uid = params.uid;
            $scope.setHeaderName(params);
            $scope.setCurrentUser(a);
            jQuery('#loginModal').modal('hide');
            UserInfoService.cspCheckRiskState({},function(result) {
                if(!(result.result === 'succeed' && result.riskstate === true)) {
                    $state.go("risklevel");//跳转风险评测
                }
            });
          });

          }
        });
    }

  });



 }

  //登录
 $scope.login = function(userInfo){
   document.getElementById('loginCheckBoxTips').style.display='none';

   console.log('login checked',document.getElementById('treatyCheckBox').checked);
   if(document.getElementById('treatyCheckBox').checked===false){
     document.getElementById('loginCheckBoxTips').style.display='';
     return;
   }

   if(userInfo.info==''||typeof(userInfo.info)=='undefined'){


    document.getElementById('csp_password_tips').style.display = "none";
    document.getElementById('csp_login_tips').style.display = "block";
  }else if(userInfo.info!=''&&(userInfo.password==''||typeof(userInfo.password)=='undefined')){
    document.getElementById('csp_login_tips').style.display = "none";
    document.getElementById('csp_password_tips').style.display = "block";
  } else {
    document.getElementById('csp_login_tips').style.display = "none";
    document.getElementById('csp_password_tips').style.display = "none";

   //是否保存登录信息
   var remember = false;
   remember =jQuery(".ui.log.checkbox").checkbox("is checked");
   console.log('remember',remember);



    HomeService.athen(userInfo, function(res){

        if(res[0]==='undefined'||JSON.stringify(res)==='[]'){
          console.log("登录失败")
          HomeService.reset($scope.status,"loginerror");
        }
        else{
          //设置不可以自动登录
  				var obj={};
  				obj.autoLogin=2;
  				UserInfoService.setAutoLoginState(obj,function(res){});

        if(remember&&$scope.inputAccountChange){
          $scope.saveUserAndPass(userInfo.info,userInfo.password);
        }
        else if(!remember){
          $scope.deleteCookie();
        }

          var params = {
            time: '',
            uid: ''
          };
          params.time = $filter('date')(new Date(),'yyyy-MM-dd HH:mm:ss');

          console.log("time",params.time)
          params.uid = res.uid;
          HomeService.lastLoginTime(params, function(data){
          console.log("登录成功");

            var a = {
              uid: ''
            }
            a.uid = params.uid;
          // HomeService.sessionUid(params);
          $scope.setHeaderName(params);
          $scope.setCurrentUser(a);
          // HomeService.reset($scope.status,"loginsuccess");
          jQuery('#loginModal').modal('hide');
          UserInfoService.cspCheckRiskState({},function(result) {
              if(!(result.result === 'succeed' && result.riskstate === true)) {
                  $state.go("risklevel");//跳转风险评测
              }
          })
        });





        }
      })
  }
}

//跳转到注册
$scope.cspCheckStateToRegister = function() {
    console.log('cspCheckStateToRegister');
    HomeService.reset($scope.status,"register");
}


$scope.cspCheckStateToWeChatLogin = function() {
    document.getElementById('loginCheckBoxTips').style.display='none';

    // if(document.getElementById('treatyCheckBox').checked===false){
    //   document.getElementById('loginCheckBoxTips').style.display='';
    //   return;
    // }
    HomeService.reset($scope.status,"wechatLogin");

}

//返回登录
$scope.goBackLogin = function(){
  HomeService.reset($scope.status,"login");
}

$scope.readTreatyChange = function(){

  console.log($scope.status.wechatLogin, typeof $scope.status.wechatLogin);

    if(document.getElementById('treatyCheckBox').checked){
      document.getElementById('loginCheckBoxTips').style.display='none';
      if($scope.status.wechatLogin===1){
        document.getElementById('login_container2').style.display='';
        document.getElementById('wechatLoginCheckBoxTips').style.display='none';
      }
    }
    else if($scope.status.wechatLogin===1){
      document.getElementById('login_container2').style.display='none';
      document.getElementById('wechatLoginCheckBoxTips').style.display='';
    }

}

//测试，获取当前登录者信息
$scope.getUser =  function(){

}





    //注册相关
    //手机输入框获得聚焦
    $scope.cspRegisterPhoneFocus = function() {
        document.getElementById('csp_register_tips').style.visibility = "hidden";
    }
    //验证码框获得聚焦
    $scope.cspRegisterCodeFocus = function() {
        document.getElementById('csp_register_tips').style.visibility = "hidden";
    }
    //获取验证码
    $scope.cspRegisterGetCode = function(phone) {
        if($scope.codeState === true) {
            //验证手机号
            if(phone === undefined || phone === "" || (!(/^1[34578]\d{9}$/.test(phone)))) {
                document.getElementById('csp_register_tips').innerHTML = "请输入正确的手机号码";
                document.getElementById('csp_register_tips').style.visibility = "visible";
            }
            else {
                //验证是否被注册
                var jsoncheck = {};
                jsoncheck.phone = phone;
                RegisterService.cspRegisterCheckPhone(jsoncheck,function(result) {
                    if(result.result === "succeed") {
                        //未被注册，发送短信验证码
                        RegisterService.cspRegisterSendCode(jsoncheck,function(res) {
                            if(res.result === "succeed") {
                                //短信发送成功
                                $scope.codeState = false;
                                //设置按钮外观
                                document.getElementById('csp_register_code_button').style.border = "1px solid rgb(205,127,50)";
                                document.getElementById('csp_register_code_button').style.backgroundColor = "#ffffff";
                                document.getElementById('csp_register_code_button_label').style.color = "rgb(205,127,50)";
                                document.getElementById('csp_register_code_button_label').innerHTML = "60秒后重新获取";
                                var second = 59;
    						    $scope.timePromise = undefined;
    							$scope.timePromise = $interval(function(){
        							if(second<=0){
        							    $interval.cancel($scope.timePromise);
        							    $scope.timePromise = undefined;
        							    second = 59;
                                        document.getElementById('csp_register_code_button').style.border = "0";
                                        document.getElementById('csp_register_code_button').style.backgroundColor = "rgb(205,127,50)";
                                        document.getElementById('csp_register_code_button_label').style.color = "#ffffff";
        							    document.getElementById('csp_register_code_button_label').innerHTML = "获取验证码";
                                        $scope.codeState = true;
        							}else{
                                        second--;
                                        var show = second +1;
        							    document.getElementById('csp_register_code_button_label').innerHTML = show + "秒后重新获取";

        							}
    					        },1000,100);
    							alert("我们已向您的手机发送了验证码，五分钟有效");
                            }
                            else {
                                document.getElementById('csp_register_tips').innerHTML = res.reason;
                                document.getElementById('csp_register_tips').style.visibility = "visible";
                            }
                        })
                    }
                    else {
                        //被注册，或其他错误
                        document.getElementById('csp_register_tips').innerHTML = result.reason;
                        document.getElementById('csp_register_tips').style.visibility = "visible";
                    }
                })
            }
        }
    }
    //提交注册
    $scope.cspRegisterCommit = function(phone,code) {
        console.log(document.getElementById('treatyCheckBox').checked );
        document.getElementById('loginCheckBoxTips').style.display='none';

        if(document.getElementById('treatyCheckBox').checked != true) {
            //document.getElementById('csp_register_tips').innerHTML = "请确认阅读并确认投资者认定书";
            //document.getElementById('csp_register_tips').style.visibility = "visible";
            document.getElementById('loginCheckBoxTips').style.display='';

        }
        else if(phone === undefined || phone === "") {
            document.getElementById('csp_register_tips').innerHTML = "请输入正确的手机号码";
            document.getElementById('csp_register_tips').style.visibility = "visible";
        }
        else if(code === undefined || code === "") {
            document.getElementById('csp_register_tips').innerHTML = "请输入短信验证码";
            document.getElementById('csp_register_tips').style.visibility = "visible";
        }
        else {
            //提交
            var json = {};
            json.phone = phone;
            json.code = code;
            RegisterService.cspRegisterCommit(json,function(res) {
                if(res.result === "succeed") {
                    //注册成功
                    RegisterService.cspRegisterDeleteSession({},function(res) {
                        if(res.result === 'succeed') {
                            $interval.cancel($scope.timePromise);
                            $scope.timePromise = undefined;
                            HomeService.reset($scope.status,"registersuccess1");
                            var second = 4;
                            $scope.timePromise = $interval(function(){
                                if(second<0){
                                    $interval.cancel($scope.timePromise);
                                    $scope.timePromise = undefined;
                                    second = 4;
                                    document.getElementById('csp_register_success_time1').innerHTML = second;
                                    jQuery('#loginModal').modal('hide');
                                    $state.go('risklevel');
                                }else{
                                    second--;
                                    document.getElementById('csp_register_success_time1').innerHTML = second +1;

                                }
                            },1000,100);
                        }
                        else {
                            $interval.cancel($scope.timePromise);
                            $scope.timePromise = undefined;
                            HomeService.reset($scope.status,"registersuccess");
                            var second = 4;
                            $scope.timePromise = $interval(function(){
                                if(second<0){
                                    $interval.cancel($scope.timePromise);
                                    $scope.timePromise = undefined;
                                    second = 4;
                                    document.getElementById('csp_register_success_time').innerHTML = second;
                                    HomeService.reset($scope.status,"login");
                                }else{
                                    second--;
                                    document.getElementById('csp_register_success_time').innerHTML = second +1;

                                }
                            },1000,100);
                        }
                    });
                }
                else {
                    document.getElementById('csp_register_tips').innerHTML = res.reason;
                    document.getElementById('csp_register_tips').style.visibility = "visible";
                }
            })
        }
    }
    //跳转到登录
    $scope.cspCheckStateToLogin = function() {
        $interval.cancel($scope.timePromise);
        $scope.timePromise = undefined;
        HomeService.reset($scope.status,"login");
    }
    //自动登录
    $scope.cspRegAndLogin = function() {
        $interval.cancel($scope.timePromise);
        $scope.timePromise = undefined;
        $state.go('risklevel');
    }
})

cspCtrls.controller('importStockDataCtrl',
function($scope,$state,$timeout,allocateStockService,tradeUnitStockService,operLoginService ) {
  $scope.status=0;
  $scope.tradeUnitStocks=[];//保存当前交易单元的券表
  $scope.importingData=false;

  $scope.currentSelectTrid='';//保存当前的trid
  $scope.importingStocks=[];//保存当前正在导入的数据

  //程序不会修改的配置
  $scope.maxPageSize=3;//一次显示的记录数量
  $scope.pageRows=4;//一页显示的记录数量

  $scope.stockAmount=0;//总的记录数量
  $scope.allPage=0;//总页数
  $scope.currentpage=1;//当前页数
  $scope.pageArr=[];

  $scope.filterCondition={ 'pageRows'    :$scope.pageRows,
                           'page'        :1,
                           trid          :''//交易单元id
                           };

  $scope.createSingleStock=false;
  $scope.newSingleStock={ cid:'',
                          cname:'',
                          totalsa:0,
                          allocatedsa:0,
                          importdate:'',
                          stat:'0'};


 $scope.cookieinfo={};
  // 初始化页面
  $(document).ready(function(){
    document.getElementById('homeSpaceDiv_37px').style.display="none";
    document.getElementById('csp_footer').style.display="none";


    $scope.status  = 0;
    $scope.cspTradeTeamManageLoadReady();

  })

  $scope.importStockInit = function() {
  document.getElementById('csp_header_containter').style.display = "none";
    document.getElementById('csp_footer').style.display = "none";
    document.getElementById('homeSpaceDiv_37px').style.display = "none";
  //读取cookie
  if(!(document.cookie || navigator.cookieEnabled)) {
    alert("浏览器未开启cookie,网站可能无法正常使用");
    $state.go('operlogin');
  }
  else {
    $scope.cookieinfo.exist = false;
    var cookieName = "cspOperLoginInfo=";
    var clist = document.cookie.split(";");
    for(var i = 0; i< clist.length; i++) {
      var ca = clist[i].trim();
      if(ca.indexOf(cookieName) == 0) {
        $scope.cookieinfo.cookieExist = true;
          var accountInfo = JSON.parse(unescape(ca.substring(cookieName.length,ca.length)));
                   $scope.cookieinfo.login_maid = accountInfo.maid;
          $scope.cookieinfo.login_oid = accountInfo.oid;
          $scope.cookieinfo.login_pass = accountInfo.password;
                   break;
      }
    }

           console.log("开始自动登录");
    //检查登录状态及cookie自动登录
    operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(res) {
      if(res.result == "succeed") {
        //自动登录成功 to do...

      }
      else {
        $state.go('operlogin');
      }
    })
  }
 }

  $scope.cspTradeTeamManageLoadReady = function(){
    if(!($scope.status)){
      // 获取该登录maid下的交易单元
           var a= {maid:''};
           a.maid = 1;
           $scope.editGid = '';
           if($scope.currentSelectTrid){
             $('.js_trid').text($scope.currentSelectTridName)
           }

           allocateStockService.getModel(a, function(res){
             $scope.model = res;

             //  该页面时下拉框的初始化
                  $('.js-trid').dropdown({
                      onChange: function(value, text, $choice){

                        $scope.currentSelectTrid = value.split('(')[1].replace(')', '');
                        $scope.currentSelectTridName = value;
                        $scope.importing=true;
                        $scope.filterCondition.page=1;
                        $scope.currentpage=1;//当前页数
                        $scope.getStockAmountByTrade($scope.currentSelectTrid);
                         console.log("trid-changed:", value);
                         console.log("$scope.currentSelectTrid:", $scope.currentSelectTrid);

                      },
                      on: 'hover'
                  })
             console.log("99999",res)
           })
    }
    else if ($scope.status == 1) {
      // 获取该登录maid下的交易单元
           var a= {maid:''};
           a.maid = 1;

           allocateStockService.getModel(a, function(res){
             $scope.model = res;
             //  该页面时下拉框的初始化
                  $('.js-trid-add-new-team').dropdown({
                      onChange: function(value, text, $choice){

                         //
                          $scope.$apply(function(){
                            $scope.currentTridTeam = value.split('(')[1].replace(')', '');
                          })

                          console.log("trid-changed:", value);
                          console.log("$scope.currentTridTeam:", $scope.currentTridTeam);
                      },
                      on: 'hover'
                  })

           })

    }
  }

  $scope.getStocksByTrade=function(){

    tradeUnitStockService.getStocksByTrade($scope.filterCondition,function(res){
      if (res.result==false) {
        return;
      }
      $scope.tradeUnitStocks=res;
      for (var i = 0; i < res.length; i++) {
        res[i].editcname=res[i].cname;
        res[i].edittotalsa=res[i].totalsa;
        res[i].editallocatedsa=res[i].allocatedsa;
        res[i].editimportdate=res[i].importdate;
        res[i].editstat=res[i].stat;
      }
    });
  }

  $scope.getStockAmountByTrade=function(trid){
    if (trid=='') {
      return;
    }

    $scope.filterCondition.trid=trid;
    $scope.tradeUnitStocks=[];//保存当前交易单元的券表


    tradeUnitStockService.getStockAmountByTrade($scope.filterCondition,function(res){
      if (res.result===false) {
        return;
      }
        $scope.stockAmount=res.stockAmount;
        if ($scope.stockAmount>0) {
          // $scope.filterCondition.page=1;//不应该在获取事直接设置为第一页
          // $scope.currentpage=1;//当前页数
          $scope.allPage=Math.ceil($scope.stockAmount/$scope.pageRows);
          $scope.currentpage=$scope.currentpage>$scope.allPage?$scope.allPage:$scope.currentpage;
          $scope.filterCondition.page=$scope.currentpage;

          $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);
          $scope.getStocksByTrade();
          document.getElementById('pageList').style.display='';


        }else {
          document.getElementById('pageList').style.display='none';
        }

    });
  }

  $scope.selectStockFile=function(){
    document.getElementById('file_load_form').reset();
		document.getElementById('file_load_input').click();
    document.getElementById('fileLabel').innerHTML='未选择任何文件';

  }



  $scope.loadStockFile=function(){
    var fd1 = new FormData();
    var file1 = document.getElementById('file_load_input').files[0];
    console.log(file1.name);
    document.getElementById('fileLabel').innerHTML=file1.name;
    fd1.append('file', file1);
    tradeUnitStockService.loadStockFile(fd1,function(res) {
      console.log(res);
      if (res.result==false) {
        return;
      }
      $scope.importingStocks=[];

      var nowDate=new Date();
      nowDate=nowDate.getFullYear()+'-'+(nowDate.getMonth()+1)+'-'+nowDate.getDate();
      for (var i = 0; i < res.length; i++) {
        var obj={};
        obj.cid= res[i][0];
        obj.cname= res[i][1];
        obj.totalsa= res[i][2];
        obj.allocatedsa=0;
        obj.stat=0;
        obj.importdate=nowDate;
        obj.trid=$scope.currentSelectTrid;

        $scope.importingStocks.push(obj);
      }
      console.log($scope.tradeUnitStocks);
    });

  }

  $scope.loadStockFileAndImport=function(){
    var fd1 = new FormData();
    var file1 = document.getElementById('file_load_input').files[0];
    fd1.append('file', file1);
    tradeUnitStockService.loadStockFileAndImport(fd1,function(res) {
      console.log(res);
      if (res.result==false) {
        return;
      }
      // $scope.importingStocks=[];
      //
      // var nowDate=new Date();
      // nowDate=nowDate.getFullYear()+'-'+nowDate.getMonth()+'-'+nowDate.getDate();
      // for (var i = 0; i < res.length; i++) {
      //   var obj={};
      //   obj.cid= res[i][0];
      //   obj.cname= res[i][1];
      //   obj.totalsa= res[i][2];
      //   obj.allocatedsa=res[i][3];
      //   obj.stat=res[i][4];
      //   obj.importdate=nowDate;
      //   obj.trid=$scope.currentSelectTrid;
      //
      //   $scope.importingStocks.push(obj);
      // }
      // console.log($scope.tradeUnitStocks);
    });

  }

  $scope.loadStockFileError=function(){
    console.log('您选择的文件不符合条件,导入格式只支持CSV、xls、xlsx三种格式');
    $scope.showErrorLabel('您选择的文件不符合条件,导入格式只支持CSV、xls、xlsx三种格式');

  }

  $scope.importStock=function(){
    if ($scope.importingStocks.length==0) {
      console.log('当前没有数据,请选择文件导入');
      $scope.showErrorLabel('当前没有数据,请选择文件导入');
      return;
    }

    var patt1=/^\d{6,}\.[A-z]*$/;
    for (var i = 0; i < $scope.importingStocks.length; i++) {
      //此处应该使用正则表达式检测股票代码

      if (patt1.test($scope.importingStocks[i].cid)==false) {
        console.log($scope.importingStocks[i].cid,patt1.test($scope.importingStocks[i].cid));

          i++;
          var error='您在第'+i+'行股票代码数据有错误,请修改符合条件';
          $scope.showErrorLabel(error);
          return;
      }
    }


    var params={};
    params.stocks=$scope.importingStocks;
    params.stocksCount=$scope.importingStocks.length;
    params.trid=$scope.currentSelectTrid;

    console.log(params);
    tradeUnitStockService.importStock(params,function(res){
      if (res.result===false) {
        return;
      }
      $scope.importingStocks=[];
      $scope.importingData=false;
      $scope.importingStocks=[];//保存当前正在导入的数据

      $scope.getStockAmountByTrade($scope.currentSelectTrid);
      document.getElementById('fileLabel').innerHTML='未选择任何文件';

      console.log('importStock成功');
    });
  }

  $scope.openImportDiv=function(){
    document.getElementById('fileLabel').innerHTML='未选择任何文件';
    document.getElementById('file_load_form').reset();
    if ($scope.currentSelectTrid=='') {
      $scope.importingData=false;
      $scope.createSingleStock=false;
      $scope.importingStocks=[];//保存当前正在导入的数据

      $scope.showError('请先选择交易单元');
      return;
    }
      $scope.importingData=true;
      $scope.importingStocks=[];//保存当前正在导入的数据
      $scope.createSingleStock=false;
  }

  $scope.cancelImport=function(){
    $scope.importingData=false;
    $scope.importingStocks=[];//保存当前正在导入的数据
    document.getElementById('fileLabel').innerHTML='未选择任何文件';
  }

  $scope.clearStockData=function(){
    $scope.importingStocks=[];
  }

  $scope.showError=function(reason){
    $('html,body').scrollTop(0); //不带动画

    document.getElementById('errorReason').innerHTML=reason;
    document.getElementById('errorMessage').style.display='';
    if ($scope.timeout) {
      $timeout.cancel($scope.timeout);
    }
    $scope.timeout=$timeout(function () {
      document.getElementById('errorMessage').style.display='none';
    }, 5000);

  }

  $scope.showErrorLabel=function(reason){

    document.getElementById('errorLabel').innerHTML=reason;
    document.getElementById('errorLabel').style.display='';
    if ($scope.timeoutlabel) {
      $timeout.cancel($scope.timeoutlabel);
    }
    $scope.timeoutlabel=$timeout(function () {
      document.getElementById('errorLabel').style.display='none';
    }, 2000);

  }

  $scope.editStock=function(stock){
    stock.edit=true;
  }

  $scope.delStock=function(stock,index){
    var params={trid:stock.trid,cid:stock.cid};
    tradeUnitStockService.delStock(params,function(res){
      if (res.result===false) {
        $scope.showError(res.reason);
        return;
      }
      $scope.filterCondition.page=$scope.currentpage;

      $scope.getStockAmountByTrade($scope.currentSelectTrid);
    });
  }

  $scope.saveEditStock=function(stock){
    var params={};
    params.cid=stock.cid;
    params.trid=stock.trid;
    params.cname=stock.editcname;
    params.totalsa=stock.edittotalsa;
    params.allocatedsa=stock.editallocatedsa;
    params.importdate=stock.editimportdate;
    params.stat=stock.editstat;
    console.log(stock.editstat);

    tradeUnitStockService.saveEditStock(params,function(res){
      if (res.result===false) {
        $scope.showError(res.reason);
        return;
      }
      stock.edit=false;
      stock.cname=stock.editcname;
      stock.totalsa=stock.edittotalsa;
      stock.allocatedsa=stock.editallocatedsa;
      stock.importdate=stock.editimportdate;
      stock.stat=stock.editstat;

    });
  }
  $scope.checkStock=function(source){
    var patt1=/\d{6,}\.[A-z]*/g;
    if (!patt1.test(source.cid)) {
      $scope.showError('您输入的证券代码不符合规范,请重新输入');
      return false;
    }
    return true;
  }

  $scope.createStock=function(){
    if(!$scope.checkStock($scope.newSingleStock))
      return;

    var params={};
    for (var variable in $scope.newSingleStock) {
      params[variable]=$scope.newSingleStock[variable];
    }
    params.trid=$scope.currentSelectTrid;

    console.log(params);

    tradeUnitStockService.createStock(params,function(res){
      if (res.result===false) {
        $scope.showError(res.reason);
        return;
      }
      $scope.createSingleStock=false;

      $scope.filterCondition.page=$scope.currentpage;

      $scope.getStockAmountByTrade($scope.currentSelectTrid);


    });
  }

  $scope.cancelEdit=function(stock){
    stock.edit=false;

    stock.editcname=stock.cname;
    stock.edittotalsa=stock.totalsa;
    stock.editallocatedsa=stock.allocatedsa;
    stock.editimportdate=stock.importdate;
  }

  $scope.clickCreate=function(){
    $scope.importingData=false;
    $scope.importingStocks=[];//保存当前正在导入的数据
    if ($scope.currentSelectTrid=='') {
      $scope.createSingleStock=false;

      $scope.showError('请先选择交易单元');
      return;
    }

    $scope.newSingleStock={ cid:'',
                            cname:'',
                            totalsa:0,
                            allocatedsa:0,
                            importdate:'',
                            stat:'0'};


    $scope.createSingleStock=!$scope.createSingleStock;

  }

  $scope.cancelCreate=function(){
    $scope.createSingleStock=false;

  }



      $scope.gotoPage=function(pageObj){
        $scope.currentpage=pageObj;
        console.log('$scope.currentpage',$scope.currentpage);
        $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);


        $scope.filterCondition.page=pageObj;
        $scope.getStocksByTrade($scope.filterCondition);
      }

      $scope.goFirstPage=function(){

          $scope.currentpage=1;
          $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);

          $scope.filterCondition.page=1;
          $scope.getStocksByTrade($scope.filterCondition);

      }
      $scope.goLastPage=function(){
        $scope.currentpage=$scope.allPage;
        $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);

        $scope.filterCondition.page=$scope.allPage;
        $scope.getStocksByTrade($scope.filterCondition);

      }

      $scope.goPreviousPage=function(){
        if($scope.currentpage>1)
          $scope.currentpage-=1;
          else {
            $scope.currentpage=1;
          }
          $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);

          $scope.filterCondition.page=$scope.currentpage;
          $scope.getStocksByTrade($scope.filterCondition);
      }

      $scope.goNextPage=function(){
        if($scope.currentpage<$scope.allPage)
          $scope.currentpage+=1;
          else {
            $scope.currentpage=$scope.allPage;
          }
          $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);

          $scope.filterCondition.page=$scope.currentpage;
          $scope.getStocksByTrade($scope.filterCondition);
      }




       $scope.getProductsByPage=function(page){
         $scope.filterCondition.page=page;
         $scope.getStocksByTrade($scope.filterCondition);
       }


});

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
cspCtrls.controller('layoutCtrl',function($scope,$state,UserInfoService,LayoutManageService) {
	$scope.cookieInfo = {};
	$scope.layoutstate = 0;
	$scope.layoutpath = "";
	$scope.showProducts = [];
	$scope.showProducts_2 = [];
	$scope.showProdutEditing = false;
	$scope.showPeodut_2Editing = false;
	$scope.editShowProduct = {};
	$scope.editShowProduct_2 = {};
	$scope.selectProducts = [];
	$scope.selectProducts_2 = [];
	$scope.cspLayoutManageInit = function() {
		//读取cookie
		if(!(document.cookie || navigator.cookieEnabled)) {
			alert("浏览器未开启cookie,网站可能无法正常使用");
			$state.go('home');
		}
		else {
			//读取cookie
			$scope.cookieInfo.exist = false;
			console.log(document.cookie);
			var cookieName = "userinfo=";
			var clist = document.cookie.split(";");
			for(var i = 0; i< clist.length; i++) {
				var ca = clist[i].trim();
				if(ca.indexOf(cookieName) == 0) {
					$scope.cookieInfo.exist = true;
					var temp = JSON.parse(unescape(ca.substring(cookieName.length,ca.length)));
					$scope.cookieInfo.username = temp.username;
					$scope.cookieInfo.password = temp.password;
					break;
				}
			}
			$scope.layoutstate = 0;
			$scope.layoutpath = "tpls/layoutmanage/layoutmanage.html";
			//验证登录状态
			UserInfoService.cspUserCheckAndLoginByCookie($scope.cookieInfo,function(loginres) {
				if(loginres.result == "succeed") {
					if(loginres.gorisk == true) {
						$state.go('risklevel');
					}
					else {
						//登录成功，to do..
					}
				}
				else {
					$state.go('home');
				}
			})
		}
	}

	$scope.cspLayoutManageLoadReady = function() {
		document.getElementById('csp_header_containter').style.display = "none";
		document.getElementById('csp_footer').style.display = "none";
        document.getElementById('homeSpaceDiv_37px').style.display = "none";
		switch ($scope.layoutstate) {
			case 0:
				var height = document.documentElement.clientHeight - 70;
				var minHeight = height + "px";
				document.getElementById('csp_layout_manage_body').style.minHeight = minHeight;
				window.scrollTo(0,0);
				$scope.showProducts.splice(0,$scope.showProducts.length);
				$scope.showProducts_2.splice(0,$scope.showProducts_2.length);
				LayoutManageService.cspLayoutManageGetShowProduct({},function(spres) {
					if(spres.result == "succeed") {
						var temp1 = spres.data;
						var temp2 = spres.data_2;
						var i = 0;
						var j = 0;
						console.log($scope.showProducts,$scope.showProducts.length);
						for(i = 0; i < 3; i++) {
							for(j = 0; j < temp1.length; j++) {
								if(temp1[j].priority == i + 1) {
									$scope.showProducts.push(temp1[j]);
									break;
								}
							}
							if(j >= temp1.length) {
								var tmp = {};
								tmp.protype = 1;
								tmp.proid = 0;
								tmp.priority = i+1;
								tmp.caption = "点击添加产品";
								tmp.piclink = "images/place.jpg";
								tmp.prostatus = "未发行";
								$scope.showProducts_2.push(tmp);
							}
						}
						console.log("fdsfsdfd",temp2.length);
						for(i = 0; i < 3; i++) {
							for(j = 0; j < temp2.length; j++) {
								if(temp2[j].priority == i + 1) {
									$scope.showProducts_2.push(temp2[j]);
									break;
								}
							}
							if(j >= temp2.length) {
								var tmp = {};
								tmp.protype = 1;
								tmp.proid = 0;
								tmp.priority = i+1;
								tmp.caption = "点击添加产品";
								tmp.piclink = "images/place.jpg";
								tmp.prostatus = "未发行";
								$scope.showProducts_2.push(tmp);
							}
							console.log($scope.showProducts_2);
						}
					}
					else {
						alert("获取数据失败，请刷新页面重试")
					}
				})
				break;
			default:
				break;
		}
	}

	$scope.cspManageBack = function() {
		$state.go('managecenter');
	}

	$scope.cspLayoutManageChangeShowProduct = function(index) {
		$scope.showProdutEditing = true;
		$scope.editShowProduct.protype = $scope.showProducts[index].protype;
		$scope.editShowProduct.proid = $scope.showProducts[index].proid;
		$scope.editShowProduct.priority = $scope.showProducts[index].priority;
		$scope.editShowProduct.caption = $scope.showProducts[index].caption;
		$scope.editShowProduct.piclink = $scope.showProducts[index].piclink;
		$scope.editShowProduct.prostatus = $scope.showProducts[index].prostatus;
		$scope.selectProducts.splice(0,$scope.selectProducts.length);
		console.log($scope.editShowProduct);
		//获取所有的产品
		var pjson = {};
		pjson.protype = 1;
		LayoutManageService.cspLayoutManageGetAllProducts(pjson,function(pres) {
			if(pres.result == "succeed") {
				$scope.selectProducts = pres.data;
			}
			else {
				alert("获取数据失败，请刷新重试")
			}
		})
		$("#csp_layout_manage_product_edit_dropdown").dropdown({
			onChange:function(value, text, $selectedItem){
				for(var i = 0; i < $scope.selectProducts.length; i ++) {
					if($scope.selectProducts[i].proid == value) {
						$scope.$apply(function (){
							$scope.editShowProduct.proid = $scope.selectProducts[i].proid;
							$scope.editShowProduct.caption = $scope.selectProducts[i].caption;
							$scope.editShowProduct.piclink = $scope.selectProducts[i].piclink;
							$scope.editShowProduct.prostatus = $scope.selectProducts[i].prostatus;
						})
						break;
					}
				}
			},
			on:'click'
		})
	}

	$scope.cspLayoutManageChangeShowProductCancel = function() {
		$scope.showProdutEditing = false;
	}

	$scope.cspLayoutManageChangeShowProductSure = function() {
		if($scope.editShowProduct.proid == $scope.showProducts[$scope.editShowProduct.priority -1].proid) {
			//to do....
			$scope.showProdutEditing = false;
		}
		else {
			//验证登录状态
			UserInfoService.cspUserCheckAndLoginByCookie($scope.cookieInfo,function(loginres) {
				if(loginres.result == "succeed") {
					if(loginres.gorisk == true) {
						$state.go('risklevel');
					}
					else {
						//登录成功，to do..提交数据
						var upjson = {};
						upjson.proid = $scope.editShowProduct.proid;
						upjson.protype = 1;
						upjson.priority = $scope.editShowProduct.priority;
						LayoutManageService.cspLayoutManageUpdateLayout(upjson,function(upres) {
							if(upres.result == "succeed") {
								$scope.showProducts[$scope.editShowProduct.priority -1].protype = $scope.editShowProduct.protype;
								$scope.showProducts[$scope.editShowProduct.priority -1].proid = $scope.editShowProduct.proid;
								$scope.showProducts[$scope.editShowProduct.priority -1].priority = $scope.editShowProduct.priority;
								$scope.showProducts[$scope.editShowProduct.priority -1].caption = $scope.editShowProduct.caption;
								$scope.showProducts[$scope.editShowProduct.priority -1].piclink = $scope.editShowProduct.piclink;
								$scope.showProducts[$scope.editShowProduct.priority -1].prostatus = $scope.editShowProduct.prostatus;
								$scope.showProdutEditing = false;
							}
							else {
								alert("操作失败，请刷新重试");
							}
						})
					}
				}
				else {
					$state.go('home');
				}
			})
		}
	}

	$scope.cspLayoutManageChangeShowProduct_2 = function(index) {
		$scope.showProdut_2Editing = true;
		$scope.editShowProduct_2.protype = $scope.showProducts_2[index].protype;
		$scope.editShowProduct_2.proid = $scope.showProducts_2[index].proid;
		$scope.editShowProduct_2.priority = $scope.showProducts_2[index].priority;
		$scope.editShowProduct_2.caption = $scope.showProducts_2[index].caption;
		$scope.editShowProduct_2.piclink = $scope.showProducts_2[index].piclink;
		$scope.editShowProduct_2.prostatus = $scope.showProducts_2[index].prostatus;
		$scope.selectProducts_2.splice(0,$scope.selectProducts_2.length);
		console.log($scope.editShowProduct_2);
		//获取所有的产品
		var pjson = {};
		pjson.protype = 2;
		LayoutManageService.cspLayoutManageGetAllProducts(pjson,function(pres) {
			if(pres.result == "succeed") {
				console.log(pres.data);
				$scope.selectProducts_2 = pres.data;
			}
			else {
				alert("获取数据失败，请刷新重试")
			}
		})
		$("#csp_layout_manage_product_2_edit_dropdown").dropdown({
			onChange:function(value, text, $selectedItem){
				console.log("fdsfkldj");
				for(var i = 0; i < $scope.selectProducts_2.length; i ++) {
					if($scope.selectProducts_2[i].proid == value) {
						$scope.$apply(function (){
							$scope.editShowProduct_2.proid = $scope.selectProducts_2[i].proid;
							$scope.editShowProduct_2.caption = $scope.selectProducts_2[i].caption;
							$scope.editShowProduct_2.piclink = $scope.selectProducts_2[i].piclink;
							$scope.editShowProduct_2.prostatus = $scope.selectProducts_2[i].prostatus;
						})
						break;
					}
				}
			},
			on:'click'
		})
	}

	$scope.cspLayoutManageChangeShowProduct_2Cancel = function() {
		$scope.showProdut_2Editing = false;
	}

	$scope.cspLayoutManageChangeShowProduct_2Sure = function() {
		if($scope.editShowProduct_2.proid == $scope.showProducts_2[$scope.editShowProduct_2.priority -1].proid) {
			//to do....
			$scope.showProdut_2Editing = false;
		}
		else {
			//验证登录状态
			UserInfoService.cspUserCheckAndLoginByCookie($scope.cookieInfo,function(loginres) {
				if(loginres.result == "succeed") {
					if(loginres.gorisk == true) {
						$state.go('risklevel');
					}
					else {
						//登录成功，to do..提交数据
						var upjson = {};
						upjson.proid = $scope.editShowProduct_2.proid;
						upjson.protype = 1;
						upjson.priority = $scope.editShowProduct_2.priority;
						LayoutManageService.cspLayoutManageUpdateLayout(upjson,function(upres) {
							if(upres.result == "succeed") {
								$scope.showProducts_2[$scope.editShowProduct_2.priority -1].protype = $scope.editShowProduct_2.protype;
								$scope.showProducts_2[$scope.editShowProduct_2.priority -1].proid = $scope.editShowProduct_2.proid;
								$scope.showProducts_2[$scope.editShowProduct_2.priority -1].priority = $scope.editShowProduct_2.priority;
								$scope.showProducts_2[$scope.editShowProduct_2.priority -1].caption = $scope.editShowProduct_2.caption;
								$scope.showProducts_2[$scope.editShowProduct_2.priority -1].piclink = $scope.editShowProduct_2.piclink;
								$scope.showProducts_2[$scope.editShowProduct_2.priority -1].prostatus = $scope.editShowProduct_2.prostatus;
								$scope.showProdut_2Editing = false;
							}
							else {
								alert("操作失败，请刷新重试");
							}
						})
					}
				}
				else {
					$state.go('home');
				}
			})
		}
	}
})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
cspCtrls.controller('logCtrl',function($scope,$state) {
	$scope.toRegister = function() {
		$state.go('home.register')
	}
})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
cspCtrls.controller('cspLogOutCtrl',function($scope,$interval,$state,UserInfoService) {
	$scope.labelCount = 4;
	$scope.cspLoginOutInit = function() {
		$scope.timePromise = undefined;
		console.log("退出登录");
		document.getElementById('csp_header_comment_label').className = "csp_header_label";
		document.getElementById('csp_header_home_label').className = "csp_header_label";
		document.getElementById('csp_header_product_label').className = "csp_header_label";
		document.getElementById('csp_header_product0_label').className = "csp_header_label ";

	}
	$scope.cspLoginOutLoad = function() {
		UserInfoService.cspLoginOut({},function(res) {
			if(res.result === 'succeed' && res.loginout) {

				//设置不可以自动登录
				// var obj={};
				// obj.autoLogin=1;
				// UserInfoService.setAutoLoginState(obj,function(res){});
				document.cookie = "userinfo=; expires=Thu, 01 Jan 1970 00:00:00 GMT";
			    console.log('document.cookie',document.cookie);
				$scope.labelCount = 4;
				$scope.timePromise = undefined;
				$scope.timePromise = $interval(function(){
					if($scope.labelCount<=0){
					  $interval.cancel($scope.timePromise);
					  $scope.timePromise = undefined;
					  $scope.labelCount = 4;
						$('#loginModal').remove();
						$state.go('home');
					}else{
					  $scope.labelCount--;
					}
				},1000,100);
			}
			else {

			}
		})
	}
	$scope.cspLoginOutLink = function () {
		$interval.cancel($scope.timePromise);
		$scope.timePromise = undefined;
		$('#loginModal').remove();
		$state.go('home');
	}
})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
cspCtrls.controller('manageCtrl',function($scope,$state,$interval,UserInfoService,ManageService,messageService) {
	$scope.cspManageLoadPath = "";
	$scope.cspManageState = -1;
	$scope.cspManageMenuState = {};
	$scope.currentTactics = {};
	$scope.tacticsList = [];
	$scope.products = [];
	$scope.users = [];
	$scope.timePromise = undefined;
	//product的字段 id,piclink,caption,contentshtml,tacticsList,fundmanager,prostatus,tacticsName
	$scope.currentProduct = {};
	$scope.currentUserKind = "1";

	//订单相关变量
	//订单状态列表
	$scope.orderKinds = [];
	$scope.orderSelectKinds = [];
	$scope.orders = [];
	$scope.orderEditIndex = -1;
	//显示页码数
    $scope.pageCount = 10;
	$scope.itemCount = 10;
	//要显示的页码 --产品
    $scope.productPages = [];
    //总页码
    $scope.productTotalPage = 1;
    $scope.productCurrentPage = 1;
    //显示首页，上一页，下一页，尾页
    $scope.productShowPrev = false;
    $scope.productShowNext = false;
	//要显示的页码 --策略
    $scope.tacticsPages = [];
    //总页码
    $scope.tacticsTotalPage = 1;
    $scope.tacticsCurrentPage = 1;
    //显示首页，上一页，下一页，尾页
    $scope.tacticsShowPrev = false;
    $scope.tacticsShowNext = false;

	//要显示的页码 --用户
    $scope.userPages = [];
    //总页码
    $scope.userTotalPage = 1;
    $scope.userCurrentPage = 1;
    //显示首页，上一页，下一页，尾页
    $scope.userShowPrev = false;
    $scope.userShowNext = false;

	//要显示的页码 --净值
    $scope.netPages = [];
    //总页码
    $scope.netTotalPage = 1;
    $scope.netCurrentPage = 1;
    //显示首页，上一页，下一页，尾页
    $scope.netShowPrev = false;
    $scope.netShowNext = false;

	//编辑器
	$scope.tacticsEdit = undefined;
	$scope.productEdit = undefined;

	$scope.currentanalogTactics = {};
	$scope.analogTacticsList = [];
	$scope.analogProducts = [];
	$scope.currentanalogProduct = {};
	//要显示的页码 --产品
    $scope.analogProductPages = [];
    //总页码
    $scope.analogProductTotalPage = 1;
    $scope.analogProductCurrentPage = 1;
    //显示首页，上一页，下一页，尾页
    $scope.analogProductShowPrev = false;
    $scope.analogProductShowNext = false;
	//要显示的页码 --策略
    $scope.analogTacticsPages = [];
    //总页码
    $scope.analogTacticsTotalPage = 1;
    $scope.analogTacticsCurrentPage = 1;
    //显示首页，上一页，下一页，尾页
    $scope.analogTacticsShowPrev = false;
    $scope.analogTacticsShowNext = false;

	//要显示的页码 --净值
    $scope.analogNetPages = [];
    //总页码
    $scope.analogNetTotalPage = 1;
    $scope.analogNetCurrentPage = 1;
    //显示首页，上一页，下一页，尾页
    $scope.analogNetShowPrev = false;
    $scope.analogNetShowNext = false;

	//要显示的页面--订单
	$scope.orderPages = [];
	$scope.orderTotalPage = 1;
	$scope.orderCurrentPage = 1;
	$scope.orderShowPrev = false;
	$scope.orderShowNext = false;

	//产品类别
	$scope.productType = 1;
	//要显示的页面--现货
	$scope.spotPages = [];
	$scope.spotTotalPage = 1;
	$scope.spotCurrentPage = 1;
	$scope.spotShowPrev = false;
	$scope.spotShowNext = false;

	//要显示的页面--期货
	$scope.futuresPages = [];
	$scope.futuresTotalPage = 1;
	$scope.futuresCurrentPage = 1;
	$scope.futuresShowPrev = false;
	$scope.futuresShowNext = false;

	//期货买卖方向
	$scope.futuresDealTypes = [
		{
			"type" : 0 ,
			"desc" : "买"
		},
		{
			"type" : 1 ,
			"desc" : "卖"
		}
	];

	//产品风险配置表
	$scope.productRisklevels = [];

	//热门产品显示
	$scope.homeProducts = [];
	$scope.homeProductsThree = false;
	//策略产品显示
	$scope.homeAnalogProducts = [];
	$scope.homeAnalogProductsThree = false;
	//cookie信息
	$scope.cookieInfo = {};

	//产品选择系列
	$scope.productSeries = [];

	//提示框定时器
	$scope.loadingtime = undefined;

	//系列管理
	$scope.series = [];
	$scope.newSeries = false;
	$scope.nowSeries = {};
	$scope.seriesLoading = {};
	//要显示的页码
    $scope.seriesPages = [];
    //总页码
    $scope.seriesTotalPage = 1;
    $scope.seriesCurrentPage = 1;
    //显示首页，上一页，下一页，尾页
    $scope.seriesShowPrev = false;
    $scope.seriesShowNext = false;

	//公告管理
	$scope.notices = [];
	$scope.currentNotice = {};
	$scope.noticeLoading = {};
	$scope.noticeDeleteLoading = {};
	$scope.noticeModal = false;
	$scope.noticeModalPath = "";
	$scope.noticestate = 0;
	$scope.noticeSelect = {};
	$scope.noticeproduct = [];
	$scope.noticeseries = [];
	$scope.noticeselectproduct = [];
	//要显示的页码
    $scope.noticePages = [];
    //总页码
    $scope.noticeTotalPage = 1;
    $scope.noticeCurrentPage = 1;
    //显示首页，上一页，下一页，尾页
    $scope.noticeShowPrev = false;
    $scope.noticeShowNext = false;

	//导入用户
	$scope.showloadUserTips = false;
	$scope.loadUserOperInfo = {};
	$scope.loadUserResInfo = {};
	$scope.loadUsers = [];
	$scope.loadUserCheckAll = false;
	$scope.loadUserCheckOnce = false;   //是否进行了一键去重
	$scope.conlevelInfo = [];

	//已购产品管理
	$scope.boughts = [];
	$scope.boughtSearch = {};          //搜索条件
	$scope.boughtShowModal = false;  //导入
	$scope.boughtNextInfo = {};
	$scope.loadBoughts = [];
	$scope.simpleProducts = [];
	$scope.loadBoughtOperInfo = {};
	$scope.loadBoughtResInfo = {};
	$scope.showloadBoughtTips = false;
	$scope.loadBoughtCheckAll = false;
	$scope.loadBoughtCheckOnce = false;   //是否进行了一键去重
	$scope.loadBoughtRoleInfo = {};
	$scope.boughtSeries = [];
	$scope.boughtProducts = [];
	$scope.boughtDeleteLoading = {};

	//要显示的页码
    $scope.boughtPages = [];
    //总页码
    $scope.boughtTotalPage = 1;
    $scope.boughtCurrentPage = 1;
    //显示首页，上一页，下一页，尾页
    $scope.boughtShowPrev = false;
    $scope.boughtShowNext = false;

	//编辑器
	$scope.analogTacticsEdit = undefined;
	$scope.analogProductEdit = undefined;

	$scope.cspManageInit = function() {
		//加载编辑器js
	    var js = document.createElement("script");
	    js.src = "lib/ueditor.config.js";
	    document.getElementsByTagName("head")[0].appendChild(js);
	    var js1 = document.createElement("script");
	    js1.src = "lib/editor_api.js";
	    document.getElementsByTagName("head")[0].appendChild(js1);
		$scope.products = [];
		//初始化菜单状态集
		$scope.cspManageMenuState.productManage = 0; //产品管理
		$scope.cspManageMenuState.productInfo = 2;   //单个产品信息页面
		$scope.cspManageMenuState.analogProductManage = 5; //策略产品管理
		$scope.cspManageMenuState.analogProductInfo = 6; //单个策略产品信息页面
		$scope.cspManageMenuState.tacticsManage = 1;   //策略管理
		$scope.cspManageMenuState.tacticsInfo = 3;    //单个策略信息页面
		$scope.cspManageMenuState.analogTacticsManage = 7; //废弃
		$scope.cspManageMenuState.analogTacticsInfo = 8;  //废弃
		$scope.cspManageMenuState.userManage = 4;     //用户管理
		$scope.cspManageMenuState.userLoad = 12;	  //导入用户
		$scope.cspManageMenuState.orderManage = 9 ;   //订单管理
		$scope.cspManageMenuState.seriesManage = 10;  //系列管理
		$scope.cspManageMenuState.noticeManage = 11;   //公告管理
		$scope.cspManageMenuState.boughtManage = 13;   //已购产品管理
		$scope.cspManageMenuState.boughtLoad = 14;     //导入已购产品数据
		//读取cookie
		if(!(document.cookie || navigator.cookieEnabled)) {
			alert("浏览器未开启cookie,网站可能无法正常使用");
			$state.go('home');
		}
		else {
			//读取cookie
			$scope.cookieInfo.exist = false;
			console.log(document.cookie);
			var cookieName = "userinfo=";
			var clist = document.cookie.split(";");
			for(var i = 0; i< clist.length; i++) {
				var ca = clist[i].trim();
				if(ca.indexOf(cookieName) == 0) {
					$scope.cookieInfo.exist = true;
					var temp = JSON.parse(unescape(ca.substring(cookieName.length,ca.length)));
					$scope.cookieInfo.username = temp.username;
					$scope.cookieInfo.password = temp.password;
					break;
				}
			}
			//验证登录状态
			UserInfoService.cspUserCheckAndLoginByCookie($scope.cookieInfo,function(loginres) {
				if(loginres.result == "succeed") {
					if(loginres.gorisk == true) {
						$state.go('risklevel');
					}
					else {
						//登录成功，to do..
						//读取产品风险配置
						ManageService.cspManageGetProductRisklevels({},function(grres) {
							if(grres.result == "succeed") {
								console.log(grres.data);
								$scope.productRisklevels = grres.data;
								$scope.cspManageLoadPath = "tpls/managecenter/productManage.html";
								$scope.cspManageState = 0;
							}
							else {
								alert("获取数据失败");
							}
						})
					}
				}
				else {
					$state.go('home');
				}
			})
		}
	}

	$scope.cspManageLoadReady = function() {
		document.getElementById('csp_header_containter').style.display = "none";
		document.getElementById('csp_footer').style.display = "none";
        document.getElementById('homeSpaceDiv_37px').style.display = "none";
		//计算一下屏幕高度*0.8
		var height = document.documentElement.clientHeight - 50;
		var minHeight = height + "px";
		document.getElementById('csp_manage_content_div').style.minHeight = minHeight;
		window.scrollTo(0,0);
		if($scope.cspManageState === $scope.cspManageMenuState.productManage) {
			//获取所有产品，放入到products中
			$scope.cspManageGetPageProducts(1,1,function(gppres) {
				if(gppres.result != "succeed") {
					alert("获取数据失败");
				}
			})
		}
		if($scope.cspManageState === $scope.cspManageMenuState.tacticsManage) {
			var jsontactics = {};
			$scope.tacticsCurrentPage = 1;
			jsontactics.page = $scope.tacticsCurrentPage;
			jsontactics.pageCount = $scope.pageCount;
			ManageService.cspGetAllTactics(jsontactics,function(result) {
				if(result.result = "succeed") {
					$scope.tacticsList = result.data;
					var re1 = new RegExp("<.+?>","g");
					for( var j = 0; j < result.data.length; j++ ) {
						$scope.tacticsList[j].descriptText = result.data[j].tsdeschtml.replace(re1,'');
					}
					//设计分页
					$scope.tacticsTotalPage = Math.ceil(result.count/$scope.pageCount) ;
					$scope.tacticsPages = [];
					var start = 1;
					if( $scope.tacticsCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.tacticsTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.tacticsCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.tacticsTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.tacticsTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.tacticsTotalPage || $scope.tacticsTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.tacticsCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.tacticsPages.push(json);
						}
					}
					if($scope.tacticsTotalPage <= 1) {
						$scope.tacticsShowPrev = false;
						$scope.tacticsShowNext = false;
					}
					else {
						$scope.tacticsShowPrev = true;
						$scope.tacticsShowNext = true;
					}
				}
				else {
					alert("数据更新失败");
				}
			})
		}
		if($scope.cspManageState === $scope.cspManageMenuState.productInfo) {
			//验证登录状态
			UserInfoService.cspUserCheckAndLoginByCookie($scope.cookieInfo,function(loginres) {
				if(loginres.result == "succeed") {
					if(loginres.gorisk == true) {
						$state.go('risklevel');
					}
					else {
						//登录成功，to do..
						jQuery("#csp_manage_product_series_select").dropdown(
							{
								onChange:function(value,text,choice) {
									if(value != "") {
										$scope.currentProduct.seriesid = value;
										console.log("选择",$scope.currentProduct.seriesid);
									}
								}
							}
						);
						jQuery("#csp_manage_product_risklevel_select").dropdown(
							{
								onChange:function(value,text,choice) {
									if(value != "") {
										$scope.currentProduct.risklevelid = value;
									}
								}
							}
						);
						if(UE.delEditor != undefined) {
							UE.delEditor("productEditor");
							$scope.productEdit = undefined;
							$scope.productEdit = UE.getEditor('productEditor',{
								//这里可以选择自己需要的工具按钮名称,此处仅选择如下五个
								toolbars:[['Undo','Redo','indent','paragraph','fontfamily','fontsize','forecolor','backcolor','Bold','italic','underline','strikethrough','subscript','superscript','fontborder','formatmatch','blockquote','link','selectall','removeformat'],
								['simpleupload','inserttable','deletetable','edittable','edittd','insertrow','insertcol','mergeright','mergedown','deleterow','deletecol','splittorows','splittocols','splittocells']],
								//focus时自动清空初始化时的内容
								autoClearinitialContent:true,
								enableAutoSave: false,
								//关闭字数统计
								wordCount:false,
								//关闭elementPath
								elementPathEnabled:false,
								//宽度设计
								initialFrameWidth: '100%',
								//默认的编辑区域高度
								initialFrameHeight:500,
								//更多其他参数，请参考ueditor.config.js中的配置项
								zIndex: 0,
								autoHeightEnabled: false
							})
							$scope.productEdit.ready(function() {
								if($scope.currentProduct.contentshtml === "") {
									$scope.productEdit.setContent("请输入产品详情");
								}
								else {
									$scope.productEdit.setContent($scope.currentProduct.contentshtml);
								}
							})
							$scope.productEdit.addListener('contentChange',function() {
								$scope.currentProduct.conError = false;
								$scope.currentProduct.contentshtml = $scope.productEdit.getContent();
							})
						}
						else {
							$scope.timePromise = undefined;
			                $scope.timePromise = $interval(function(){
								$interval.cancel($scope.timePromise);
								$scope.timePromise = undefined;
								UE.delEditor("productEditor");
								$scope.productEdit = undefined;
								$scope.productEdit = UE.getEditor('productEditor',{
									//这里可以选择自己需要的工具按钮名称,此处仅选择如下五个
									toolbars:[['Undo','Redo','indent','paragraph','fontfamily','fontsize','forecolor','backcolor','Bold','italic','underline','strikethrough','subscript','superscript','fontborder','formatmatch','blockquote','link','selectall','removeformat'],
									['simpleupload','inserttable','deletetable','edittable','edittd','insertrow','insertcol','mergeright','mergedown','deleterow','deletecol','splittorows','splittocols','splittocells']],
									//focus时自动清空初始化时的内容
									autoClearinitialContent:true,
									enableAutoSave: false,
									//关闭字数统计
									wordCount:false,
									//关闭elementPath
									elementPathEnabled:false,
									//宽度设计
									initialFrameWidth: '100%',
									//默认的编辑区域高度
									initialFrameHeight:500,
									//更多其他参数，请参考ueditor.config.js中的配置项
									zIndex: 0,
									autoHeightEnabled: false
								})
								$scope.productEdit.ready(function() {
									if($scope.currentProduct.contentshtml === "") {
										$scope.productEdit.setContent("请输入产品详情");
									}
									else {
										$scope.productEdit.setContent($scope.currentProduct.contentshtml);
									}
								})
								$scope.productEdit.addListener('contentChange',function() {
									$scope.currentProduct.conError = false;
									$scope.currentProduct.contentshtml = $scope.productEdit.getContent();
								})
							},1,1000000)
						}
					}
				}
				else {
					$state.go('home');
				}
			})

		}
		if($scope.cspManageState === $scope.cspManageMenuState.tacticsInfo) {
			if(UE.delEditor != undefined) {
				UE.delEditor("tacticsEditor");
				$scope.tacticsEdit = undefined;
				$scope.tacticsEdit = UE.getEditor('tacticsEditor',{
					//这里可以选择自己需要的工具按钮名称,此处仅选择如下五个
					toolbars:[],
					//focus时自动清空初始化时的内容
					autoClearinitialContent:true,
					enableAutoSave: false,
					//关闭字数统计
					wordCount:true,
					maximumWords:200,
					//关闭elementPath
					elementPathEnabled:false,
					//宽度设计
					initialFrameWidth: '100%',
					//默认的编辑区域高度
					initialFrameHeight:300,
					//更多其他参数，请参考ueditor.config.js中的配置项
					zIndex: 0,
					autoHeightEnabled: false
				})
				$scope.tacticsEdit.ready(function() {
					if($scope.currentTactics.des === "") {
						$scope.tacticsEdit.setContent("请输入策略描述");
					}
					else {
						$scope.tacticsEdit.setContent($scope.currentTactics.des);
					}
				})
				$scope.tacticsEdit.addListener('contentChange',function() {
					$scope.currentTactics.desError = false;
					$scope.currentTactics.des = $scope.tacticsEdit.getContentTxt();
				})
			}
			else {
				$scope.timePromise = undefined;
                $scope.timePromise = $interval(function(){
					$interval.cancel($scope.timePromise);
					$scope.timePromise = undefined;
					UE.delEditor("tacticsEditor");
					$scope.tacticsEdit = undefined;
					$scope.tacticsEdit = UE.getEditor('tacticsEditor',{
						//这里可以选择自己需要的工具按钮名称,此处仅选择如下五个
						toolbars:[],
						//focus时自动清空初始化时的内容
						autoClearinitialContent:true,
						enableAutoSave: false,
						//关闭字数统计
						wordCount:true,
						maximumWords:200,
						//关闭elementPath
						elementPathEnabled:false,
						//宽度设计
						initialFrameWidth: '100%',
						//默认的编辑区域高度
						initialFrameHeight:300,
						//更多其他参数，请参考ueditor.config.js中的配置项
						zIndex: 0,
						autoHeightEnabled: false
					})
					$scope.tacticsEdit.ready(function() {
						if($scope.currentTactics.des === "") {
							$scope.tacticsEdit.setContent("请输入策略描述");
						}
						else {
							$scope.tacticsEdit.setContent($scope.currentTactics.des);
						}
					})
					$scope.tacticsEdit.addListener('contentChange',function() {
						$scope.currentTactics.desError = false;
						$scope.currentTactics.des = $scope.tacticsEdit.getContentTxt();
					})
				},1,1000000)
			}
		}
		if($scope.cspManageState === $scope.cspManageMenuState.userManage) {
			//获取未验证的用户
			var jsonuser = {};
			jsonuser.kind = "1";
			$scope.userCurrentPage = 1;
			jsonuser.page = $scope.userCurrentPage;
			jsonuser.pageCount = $scope.pageCount;
			ManageService.cspManageGetAllUser(jsonuser,function(res) {
				if(res.result === "succeed") {
					$scope.users = res.data;
					for(var i = 0; i < res.data.length; i++) {
						if(res.data[i].au_stat == 0) {
							$scope.users[i].checkState = "未验证";
						}
						else {
							$scope.users[i].checkState = "已验证";
						}
						$scope.users[i].edit = false;
					}

					//设计分页
					$scope.userTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.userPages = [];
					var start = 1;
					if( $scope.userCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.userTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.userCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.userTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.userTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.userTotalPage || $scope.userTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.userCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.userPages.push(json);
						}
					}
					if($scope.userTotalPage <= 1) {
						$scope.userShowPrev = false;
						$scope.userShowNext = false;
					}
					else {
						$scope.userShowPrev = true;
						$scope.userShowNext = true;
					}
				}
				else {
					alert("数据库异常");
				}
			})
		}
		if($scope.cspManageState === $scope.cspManageMenuState.analogProductManage) {
			$scope.cspManageGetPageProducts(2,1,function(gppres) {
				if(gppres.result != "succeed") {
					alert("获取数据失败");
				}
			})
		}
		if($scope.cspManageState === $scope.cspManageMenuState.analogProductInfo) {
			jQuery("#csp_manage_analogProduct_series_select").dropdown(
				{
					onChange:function(value,text,choice) {
						if(value != "") {
							$scope.currentanalogProduct.seriesid = value;
						}
					}
				}
			);
			jQuery("#csp_manage_analogProduct_risklevel_select").dropdown(
				{
					onChange:function(value,text,choice) {
						if(value != "") {
							$scope.currentanalogProduct.risklevelid = value;
						}
					}
				}
			);
			if(UE.delEditor != undefined) {
				UE.delEditor("analogProductEditor");
				$scope.analogProductEdit = undefined;
				$scope.analogProductEdit = UE.getEditor('analogProductEditor',{
					//这里可以选择自己需要的工具按钮名称,此处仅选择如下五个
					toolbars:[['Undo','Redo','indent','paragraph','fontfamily','fontsize','forecolor','backcolor','Bold','italic','underline','strikethrough','subscript','superscript','fontborder','formatmatch','blockquote','link','selectall','removeformat'],
					['simpleupload','inserttable','deletetable','edittable','edittd','insertrow','insertcol','mergeright','mergedown','deleterow','deletecol','splittorows','splittocols','splittocells']],
					//focus时自动清空初始化时的内容
					autoClearinitialContent:true,
					enableAutoSave: false,
					//关闭字数统计
					wordCount:false,
					//关闭elementPath
					elementPathEnabled:false,
					//宽度设计
					initialFrameWidth: '100%',
					//默认的编辑区域高度
					initialFrameHeight:500,
					//更多其他参数，请参考ueditor.config.js中的配置项
					zIndex: 0,
					autoHeightEnabled: false
				})
				$scope.analogProductEdit.ready(function() {
					if($scope.currentanalogProduct.contentshtml === "") {
						$scope.analogProductEdit.setContent("请输入产品详情");
					}
					else {
						$scope.analogProductEdit.setContent($scope.currentanalogProduct.contentshtml);
					}
				})
				$scope.analogProductEdit.addListener('contentChange',function() {
					$scope.currentanalogProduct.conError = false;
					$scope.currentanalogProduct.contentshtml = $scope.analogProductEdit.getContent();
				})
			}
			else {
				$scope.timePromise = undefined;
                $scope.timePromise = $interval(function(){
					$interval.cancel($scope.timePromise);
					$scope.timePromise = undefined;
					UE.delEditor("analogProductEditor");
					$scope.analogProductEdit = undefined;
					$scope.analogProductEdit = UE.getEditor('analogProductEditor',{
						//这里可以选择自己需要的工具按钮名称,此处仅选择如下五个
						toolbars:[['Undo','Redo','indent','paragraph','fontfamily','fontsize','forecolor','backcolor','Bold','italic','underline','strikethrough','subscript','superscript','fontborder','formatmatch','blockquote','link','selectall','removeformat'],
						['simpleupload','inserttable','deletetable','edittable','edittd','insertrow','insertcol','mergeright','mergedown','deleterow','deletecol','splittorows','splittocols','splittocells']],
						//focus时自动清空初始化时的内容
						autoClearinitialContent:true,
						enableAutoSave: false,
						//关闭字数统计
						wordCount:false,
						//关闭elementPath
						elementPathEnabled:false,
						//宽度设计
						initialFrameWidth: '100%',
						//默认的编辑区域高度
						initialFrameHeight:500,
						//更多其他参数，请参考ueditor.config.js中的配置项
						zIndex: 0,
						autoHeightEnabled: false
					})
					$scope.analogProductEdit.ready(function() {
						if($scope.currentanalogProduct.contentshtml === "") {
							$scope.analogProductEdit.setContent("请输入产品详情");
						}
						else {
							$scope.analogProductEdit.setContent($scope.currentanalogProduct.contentshtml);
						}
					})
					$scope.analogProductEdit.addListener('contentChange',function() {
						$scope.currentanalogProduct.conError = false;
						$scope.currentanalogProduct.contentshtml = $scope.analogProductEdit.getContent();
					})
				},1,1000000)
			}
		}
		if($scope.cspManageState === $scope.cspManageMenuState.analogTacticsManage) {
			var jsonanalogTactics = {};
			$scope.analogTacticsCurrentPage = 1;
			jsonanalogTactics.page = $scope.analogTacticsCurrentPage;
			jsonanalogTactics.pageCount = $scope.pageCount;
			ManageService.cspGetAllanalogTactics(jsonanalogTactics,function(result) {
				if(result.result = "succeed") {
					$scope.analogTacticsList = result.data;
					//设计分页
					$scope.analogTacticsTotalPage = Math.ceil(result.count/$scope.pageCount) ;
					$scope.analogTacticsPages = [];
					var start = 1;
					if( $scope.analogTacticsCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.analogTacticsTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.analogTacticsCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.analogTacticsTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.analogTacticsTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.analogTacticsTotalPage || $scope.analogTacticsTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.analogTacticsCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.analogTacticsPages.push(json);
						}
					}
					if($scope.analogTacticsTotalPage <= 1) {
						$scope.analogTacticsShowPrev = false;
						$scope.analogTacticsShowNext = false;
					}
					else {
						$scope.analogTacticsShowPrev = true;
						$scope.analogTacticsShowNext = true;
					}
				}
				else {
					alert("数据更新失败");
				}
			})
		}
		if($scope.cspManageState === $scope.cspManageMenuState.analogTacticsInfo) {
			UE.delEditor("analogTacticsEditor");
			$scope.analogTacticsEdit = undefined;
			$scope.analogTacticsEdit = UE.getEditor('analogTacticsEditor',{
				//这里可以选择自己需要的工具按钮名称,此处仅选择如下五个
				toolbars:[],
				//focus时自动清空初始化时的内容
				autoClearinitialContent:true,
				enableAutoSave: false,
				//关闭字数统计
				wordCount:false,
				//关闭elementPath
				elementPathEnabled:false,
				//宽度设计
				initialFrameWidth: '100%',
				//默认的编辑区域高度
				initialFrameHeight:300,
				//更多其他参数，请参考ueditor.config.js中的配置项
				zIndex: 0,
				autoHeightEnabled: false
			})
			$scope.analogTacticsEdit.ready(function() {
				if($scope.currentanalogTactics.des === "") {
					$scope.analogTacticsEdit.setContent("请输入策略描述");
				}
				else {
					$scope.analogTacticsEdit.setContent($scope.currentanalogTactics.des);
				}
			})
			$scope.analogTacticsEdit.addListener('contentChange',function() {
				$scope.currentanalogTactics.desError = false;
				$scope.currentanalogTactics.des = $scope.analogTacticsEdit.getContentTxt();
			})
		}
		if($scope.cspManageState === $scope.cspManageMenuState.orderManage) {
			//获取所有的订单和订单状态
			var jsonorder = {};
			$scope.orderCurrentPage = 1;
			jsonorder.page = $scope.orderCurrentPage;
			jsonorder.pageCount = $scope.pageCount;
			jsonorder.stats = -1;
			ManageService.cspManageGetAllOrder(jsonorder,function(res) {
				if(res.result === "succeed") {
					$scope.orderSelectKinds = [];
					var osjson = {};
					osjson.osid = -1;
					osjson.osdesc = "查询全部";
					$scope.orderKinds = res.ostate;
					$scope.orderSelectKinds.push(osjson);
					for(var j = 0; j < $scope.orderKinds.length; j ++) {
						$scope.orderSelectKinds.push($scope.orderKinds[j]);
					}
					$scope.orderCurrentKind = $scope.orderSelectKinds[0];
					$scope.orders = res.data;
					for(var i = 0; i < $scope.orders.length; i++) {
						$scope.orders[i].edit = false;
						$scope.orders[i].editKind = {};
						$scope.orders[i].editmarks = $scope.orders[i].Remarks;
					}
					$scope.orderEditIndex = -1;
					//分页处理
					$scope.orderTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.orderPages = [];
					var start = 1;
					if( $scope.orderCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.orderTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.orderCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.orderTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.orderTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.orderTotalPage || $scope.orderTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.orderCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.orderPages.push(json);
						}
					}
					if($scope.orderTotalPage <= 1) {
						$scope.orderShowPrev = false;
						$scope.orderShowNext = false;
					}
					else {
						$scope.orderShowPrev = true;
						$scope.orderShowNext = true;
					}
				}
				else {
					alert("获取数据失败");
				}
			})
		}
		if($scope.cspManageState === $scope.cspManageMenuState.seriesManage) {
			$scope.cspManageRefreshSeries(1);
		}
		if($scope.cspManageState === $scope.cspManageMenuState.noticeManage) {
			$scope.noticeSelect.protype = 0;
			$scope.noticeSelect.proid = 0;
			$scope.noticeSelect.seriesid = -1;
			$scope.noticeSelect.caption = "";
			jQuery("#csp_manage_notice_protype_dropdown").dropdown(
				{
					onChange:function(value,text,choice) {
						$scope.$apply(function() {
							$scope.noticeSelect.protype = value;
							if(value != 0) {
								$scope.noticeSelect.seriesid = -1;
								$scope.noticeSelect.caption = "";
								$scope.noticeproduct.splice(0,$scope.noticeproduct.length);
								var gnpjson = {};
								gnpjson.protype = value;
								ManageService.cspManageGetNoticeProduct(gnpjson,function(gnpres) {
									if(gnpres.result == "succeed") {
										$scope.noticeproduct = gnpres.data;
										jQuery("#csp_manage_notice_proid_dropdown").dropdown('clear');
										jQuery("#csp_manage_notice_proid_dropdown").dropdown(
											{
												onChange:function(value,text,choice) {
													if(value == "") {}
													else {
														$scope.noticeSelect.caption = jQuery("#csp_manage_notice_proid_dropdown").dropdown('get text');
														$scope.noticeSelect.proid = value;
														$scope.cspManageGetPageNotices($scope.noticeSelect.protype,$scope.noticeSelect.proid,$scope.noticeSelect.seriesid,1);
													}
												},
												on: 'click'
											}
										);
									}
								})
							}
							else if (value == 0) {
								$scope.noticeSelect.proid = 0;
								$scope.noticeSelect.seriesid = -1;
								$scope.noticeSelect.caption = "";
								$scope.noticeseries.splice(0,$scope.noticeseries.length);
								ManageService.cspManageGetAllSeries({},function(gasres) {
									if(gasres.result == "succeed") {
										$scope.noticeseries = gasres.data;
										jQuery("#csp_manage_notice_series_dropdown").dropdown('restore defaults');
									}
								})
							}
							else {}
						})
					},
					on: 'click'
				}
			);
			ManageService.cspManageGetAllSeries({},function(gasres) {
				if(gasres.result == "succeed") {
					$scope.noticeseries = gasres.data;
					jQuery("#csp_manage_notice_series_dropdown").dropdown({
						onChange:function(value,text,choice) {
							if(value != "") {
								$scope.noticeSelect.seriesid = value;
								$scope.cspManageGetPageNotices($scope.noticeSelect.protype,$scope.noticeSelect.proid,$scope.noticeSelect.seriesid,1);
							}
						},
						on:'click'
					})
				}
			})
			$scope.cspManageGetPageNotices(0,0,-1,1);
		}
		if($scope.cspManageState === $scope.cspManageMenuState.userLoad) {
			//导入用户
			var height12 = document.documentElement.clientHeight - 100;
			var minHeight12 = height12 + "px";
			document.getElementById('csp_manage_load_user_body').style.minHeight = minHeight12;
			window.scrollTo(0,0);
			//验证登录状态
			$scope.showloadUserTips = false;
			$scope.loadUserOperInfo.loading = false;
			$scope.loadUserOperInfo.fileRight = false;
			$scope.loadUserResInfo.loading = false;
			$scope.loadUserCheckAll = false;
			$scope.loadUserCheckOnce = false;
			$scope.loadUsers.splice(0,$scope.loadUsers.length);
			UserInfoService.cspUserCheckAndLoginByCookie($scope.cookieInfo,function(loginres) {
				if(loginres.result == "succeed") {
					if(loginres.gorisk == true) {
						$state.go('risklevel');
					}
					else {
						//登录成功，to do..获取权限配置
						$scope.conlevelInfo.splice(0,$scope.conlevelInfo.length);
						ManageService.cspManageGetConlevel({},function(gcres) {
							if(gcres.result == "succeed") {
								$scope.conlevelInfo = gcres.data;
							}
							else {
								alert("获取数据失败，请刷新页面重试");
							}
						})
					}
				}
				else {
					$state.go('home');
				}
			})
		}
		if($scope.cspManageState === $scope.cspManageMenuState.boughtManage) {
			$scope.boughtSearch.type = 1;  //默认按系列搜索
			$scope.boughtSearch.seriesid = -1;
			$scope.boughtSearch.proid = 0;
			$scope.boughtSearch.userinfo = "";
			$scope.boughts.splice(0,$scope.boughts.length);
			$scope.boughtSeries.splice(0,$scope.boughtSeries.length);
			$scope.boughtDeleteLoading.loading = false;
			$scope.boughtDeleteLoading.error = false;
			$scope.boughtDeleteLoading.errorString = "";
			ManageService.cspManageGetAllSeries({},function(gasres) {
				if(gasres.result == "succeed") {
					$scope.boughtSeries = gasres.data;
				}
				else {
					alert("获取数据失败");
				}
			})
			jQuery('#csp_manage_bought_search_type_dropdown').dropdown({
				onChange: function(value,text,choice) {

					switch (value) {
						case "1":
							$scope.$apply(function() {
								$scope.boughtSearch.type = 1;
							})
							$scope.boughtSearch.seriesid = -1;
							jQuery('#csp_manage_bought_search_series_dropdown').dropdown('clear');
							//查找所有的系列
							$scope.boughtSeries.splice(0,$scope.boughtSeries.length);
							ManageService.cspManageGetAllSeries({},function(gasres) {
								if(gasres.result == "succeed") {
									$scope.boughtSeries = gasres.data;
								}
								else {
									alert("获取数据失败");
								}
							})
							break;
						case "2":
							$scope.$apply(function() {
								$scope.boughtSearch.type = 2;
							})
							$scope.boughtSearch.proid = 0;
							jQuery('#csp_manage_bought_search_product_dropdown').dropdown('clear');
							//查找所有的产品
							$scope.boughtProducts.splice(0,$scope.boughtProducts.length);
							var gnpjson = {};
							gnpjson.protype = 1;
							ManageService.cspManageGetNoticeProduct(gnpjson,function(gnpres) {
								console.log(gnpres);
								if(gnpres.result == "succeed") {
									$scope.boughtProducts = gnpres.data;
								}
								else {
									alert("获取数据失败")
								}
							})
							break;
						case "3":
							$scope.$apply(function() {
								$scope.boughtSearch.type = 3;
							})
							//启用搜索框
							$scope.boughtSearch.userinfo = "";
							break;
						default:
							break;
					}
				},
				on: 'click'
			})
			jQuery('#csp_manage_bought_search_series_dropdown').dropdown({
				onChange: function(value,text,choice) {
					if(value != "") {
						$scope.boughtSearch.seriesid = value;
					}
				},
				on: 'click'
			});
			jQuery('#csp_manage_bought_search_product_dropdown').dropdown({
				onChange: function(value,text,choice) {
					if(value != "") {
						$scope.boughtSearch.proid = value;
					}
				},
				on: 'click'
			});
		}
		if($scope.cspManageState === $scope.cspManageMenuState.boughtLoad) {
			var height14 = document.documentElement.clientHeight - 100;
			var minHeight14 = height14 + "px";
			document.getElementById('csp_manage_load_bought_body').style.minHeight = minHeight14;
			window.scrollTo(0,0);
			$scope.loadBoughts.splice(0,$scope.loadBoughts.length);
		}
	}

    $scope.cspUserAndGroup = function() {
        $state.go('customerGroup');
    }

    $scope.sendMessage = function() {
		var params={};
		params.messageType='sendMessage';
		messageService.setMessageType(params,function(res){
			if (res.result==false) {
				return;
			}
			$state.go('sendMessage');
		});
    }

	$scope.editMessage = function() {
		var params={};
		params.messageType='editMessage';
		messageService.setMessageType(params,function(res){
			if (res.result==false) {
				return;
			}
			$state.go('sendMessage');
		});
	}

	$scope.cspManageClickProduct = function() {
		$scope.cspManageMenuChange($scope.cspManageState,0);
	}
	$scope.cspManageClickanalogProduct = function() {
		$scope.cspManageMenuChange($scope.cspManageState,5);
	}
	$scope.cspManageClickTactics = function() {
		$scope.cspManageMenuChange($scope.cspManageState,1);
	}
	$scope.cspManageClickanalogTactics = function() {
		$scope.cspManageMenuChange($scope.cspManageState,7);
	}
	$scope.cspManageClickOrder = function() {
		$scope.cspManageMenuChange($scope.cspManageState,9);
	}
	$scope.cspManageClickUser = function() {
		$scope.cspManageMenuChange($scope.cspManageState,4);
	}
	$scope.cspManageClickSeries = function() {
		$scope.cspManageMenuChange($scope.cspManageState,10);
	}
	$scope.cspManageClickNotice = function() {
		$scope.cspManageMenuChange($scope.cspManageState,11);
	}
	$scope.cspManageClickExit = function() {
		document.getElementById('csp_header_containter').style.display = "block";
		document.getElementById('csp_footer').style.display = "block";
		$state.go('usercenter');
	}
	$scope.cspManageClickBuy = function() {
		$scope.cspManageMenuChange($scope.cspManageState,$scope.cspManageMenuState.boughtManage);
	}
	//菜单切换
	$scope.cspManageMenuChange = function(oldmenu,nowmenu) {
		switch (oldmenu) {
			case $scope.cspManageMenuState.productManage:
			case $scope.cspManageMenuState.productInfo:
				document.getElementById('csp_manage_product').className = "teal item";
				break;
			case $scope.cspManageMenuState.tacticsManage:
			case $scope.cspManageMenuState.tacticsInfo:
				document.getElementById('csp_manage_tactics').className = "teal item";
				break;
			case $scope.cspManageMenuState.userManage:
			case $scope.cspManageMenuState.userLoad:
				document.getElementById('csp_manage_user').className = "teal item";
				break;
			case $scope.cspManageMenuState.analogProductManage:
			case $scope.cspManageMenuState.analogProductInfo:
				document.getElementById('csp_manage_analogproduct').className = "teal item";
				break;
			case $scope.cspManageMenuState.analogTacticsManage:
			case $scope.cspManageMenuState.analogTacticsInfo:
				document.getElementById('csp_manage_analogtactics').className = "teal item";
				break;
			case $scope.cspManageMenuState.orderManage:
				document.getElementById('csp_manage_order').className = "teal item";
				break;
			case $scope.cspManageMenuState.seriesManage:
				document.getElementById('csp_manage_series').className = "teal item";
				break;
			case $scope.cspManageMenuState.noticeManage:
				document.getElementById('csp_manage_notice').className = "teal item";
				break;
			case $scope.cspManageMenuState.boughtManage:
			case $scope.cspManageMenuState.boughtLoad:
				document.getElementById('csp_manage_buy').className = "teal item";
				break;
			default:
				break;
		}
		switch (nowmenu) {
			case 0:
				document.getElementById('csp_manage_product').className = "active teal item";
				$scope.cspManageLoadPath = "tpls/managecenter/productManage.html";
				$scope.cspManageState = 0;
				break;
			case 1:
				document.getElementById('csp_manage_tactics').className = "active teal item";
				$scope.cspManageLoadPath = "tpls/managecenter/tacticsManage.html";
				$scope.cspManageState = 1;
				break;
			case 4:
				document.getElementById('csp_manage_user').className = "active teal item";
				$scope.cspManageLoadPath = "tpls/managecenter/usermanage.html";
				$scope.cspManageState = 4;
				break;
			case 5:
				document.getElementById('csp_manage_analogproduct').className = "active teal item";
				$scope.cspManageLoadPath = "tpls/managecenter/analogproductmanage.html";
				$scope.cspManageState = 5;
				break;
			case 7:
				document.getElementById('csp_manage_analogtactics').className = "active teal item";
				$scope.cspManageLoadPath = "tpls/managecenter/analogtacticsmanage.html";
				$scope.cspManageState = 7;
				break;
			case 9:
				document.getElementById('csp_manage_order').className = "active teal item";
				$scope.cspManageLoadPath = "tpls/managecenter/ordermanage.html";
				$scope.cspManageState = 9;
				break;
			case 10:
				document.getElementById('csp_manage_series').className = "active teal item";
				$scope.cspManageLoadPath = "tpls/managecenter/seriesmanage.html";
				$scope.cspManageState = 10;
				break;
			case 11:
				document.getElementById('csp_manage_notice').className = "active teal item";
				$scope.cspManageLoadPath = "tpls/managecenter/noticemanage.html";
				$scope.cspManageState = 11;
				break;
			case $scope.cspManageMenuState.boughtManage:
				document.getElementById('csp_manage_buy').className = "active teal item";
				$scope.cspManageLoadPath = "tpls/managecenter/boughtmanage.html";
				$scope.cspManageState = $scope.cspManageMenuState.boughtManage;
				break;
			default:
				break;
		}
	}

	//获取产品分页数据
	$scope.cspManageGetPageProducts = function(type,page,callback) {
		var gppjson = {};
		gppjson.protype = type;
		gppjson.page = page;
		gppjson.pageCount = $scope.pageCount;
		ManageService.cspManageGetPageProducts(gppjson,function(gppres) {
			if(gppres.result == "succeed") {
				var spjson = {};
				spjson.protype = type;
				ManageService.cspManageGetShowProducts(spjson,function(spres) {
					if(spres.result == "succeed") {
						if(type == 1) {
							//热门产品
							$scope.productType = type;
							$scope.productCurrentPage = page;
							$scope.products = gppres.data_product;
							for(var i = 0; i < gppres.data_product.length; i++) {
								if(gppres.data_product[i] !== "") {
									var tacticsNameList = "";
									var tacticsArr = gppres.data_product[i].tacticsList.split(",");
									for(var j = 0; j < tacticsArr.length; j++) {
										for(var k = 0; k < gppres.data_tactics.length; k++) {
											if(tacticsArr[j] == gppres.data_tactics[k].tsid) {
												if(tacticsNameList !== "") {
													tacticsNameList += " ， " + gppres.data_tactics[k].tsname;
												}
												else {
													tacticsNameList += gppres.data_tactics[k].tsname;
												}
											}
										}
									}
									$scope.products[i].tacticsName = tacticsNameList;
								}
							}
							//设计分页
							$scope.productTotalPage = Math.ceil(gppres.count/$scope.pageCount) ;
							$scope.productPages = [];
							var start = 1;
							if( $scope.productCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.productTotalPage <= $scope.itemCount) {
								start = 1;
							}
							else {
								start = $scope.productCurrentPage - Math.ceil($scope.itemCount/2) +1;
								if($scope.productTotalPage -  start + 1 < $scope.itemCount ) {
									start = $scope.productTotalPage - $scope.itemCount +1;
								}
							}
							for( var r = start ; r < start + $scope.itemCount; r ++ ) {
								if(r > $scope.productTotalPage || $scope.productTotalPage <= 1) {
									break;
								}
								else {
									var json = {};
									json.num = r;
									if(r === $scope.productCurrentPage) {
										json.select = true;
									}
									else {
										json.select = false;
									}
									$scope.productPages.push(json);
								}
							}
							if($scope.productTotalPage <= 1) {
								$scope.productShowPrev = false;
								$scope.productShowNext = false;
							}
							else {
								$scope.productShowPrev = true;
								$scope.productShowNext = true;
							}

							//生成显示列表
							$scope.homeProducts.splice(0,$scope.homeProducts.length);
							var m = 0;
							var n = 0;
							for(m =0; m < 3; m++) {
								for(n =0; n < spres.data.length; n ++) {
									if(spres.data[n].priority == m +1) {
										$scope.homeProducts.push(spres.data[n]);
										break;
									}
								}
								if(n >= spres.data.length) {
									var sptemp = {};
									sptemp.protype = 1;
									sptemp.proid = -1;
									sptemp.priority = m+1;
									sptemp.caption = "请选择产品";
									sptemp.piclink = "images/addpro.png";
									$scope.homeProducts.push(sptemp);
								}
							}
							if(spres.data.length < 3) {
								$scope.homeProductsThree = false;
							}
							else {
								$scope.homeProductsThree = true;
							}
						}
						else {
							//策略产品
							console.log(gppres);
							$scope.productType = 2;
							$scope.analogProductCurrentPage = page;
							$scope.analogProducts = gppres.data_product;
							for(var i = 0; i < gppres.data_product.length; i++) {
								if(gppres.data_product[i] !== "") {
									var analogTacticsNameList = "";
									var analogTacticsArr = gppres.data_product[i].analogTacticsList.split(",");
									for(var j = 0; j < analogTacticsArr.length; j++) {
										for(var k = 0; k < gppres.data_tactics.length; k++) {
											if(analogTacticsArr[j] == gppres.data_tactics[k].tsid) {
												if(analogTacticsNameList !== "") {
													analogTacticsNameList += " ， " + gppres.data_tactics[k].tsname;
												}
												else {
													analogTacticsNameList += gppres.data_tactics[k].tsname;
												}
											}
										}
									}
									$scope.analogProducts[i].analogTacticsName = analogTacticsNameList;
								}
							}
							//设计分页
							$scope.analogProductTotalPage = Math.ceil(gppres.count/$scope.pageCount) ;
							$scope.analogProductPages = [];
							var start = 1;
							if( $scope.analogProductCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.analogProductTotalPage <= $scope.itemCount) {
								start = 1;
							}
							else {
								start = $scope.analogProductCurrentPage - Math.ceil($scope.itemCount/2) +1;
								if($scope.analogProductTotalPage -  start + 1 < $scope.itemCount ) {
									start = $scope.analogProductTotalPage - $scope.itemCount +1;
								}
							}
							for( var r = start ; r < start + $scope.itemCount; r ++ ) {
								if(r > $scope.analogProductTotalPage || $scope.analogProductTotalPage <= 1) {
									break;
								}
								else {
									var json = {};
									json.num = r;
									if(r === $scope.analogProductCurrentPage) {
										json.select = true;
									}
									else {
										json.select = false;
									}
									$scope.analogProductPages.push(json);
								}
							}
							if($scope.analogProductTotalPage <= 1) {
								$scope.analogProductShowPrev = false;
								$scope.analogProductShowNext = false;
							}
							else {
								$scope.analogProductShowPrev = true;
								$scope.analogProductShowNext = true;
							}
							//生成显示列表
							$scope.homeAnalogProducts.splice(0,$scope.homeAnalogProducts.length);
							console.log(spres.data);
							var m = 0;
							var n = 0;
							for(m =0; m < 3; m++) {
								for(n =0; n < spres.data.length; n ++) {
									if(spres.data[n].priority == m +1) {
										$scope.homeAnalogProducts.push(spres.data[n]);
										break;
									}
								}
								if(n >= spres.data.length) {
									var sptemp = {};
									sptemp.protype = 2;
									sptemp.proid = -1;
									sptemp.priority = m+1;
									sptemp.caption = "请选择产品";
									sptemp.piclink = "images/addpro.png";
									$scope.homeAnalogProducts.push(sptemp);
								}
							}
							if(spres.data.length < 3) {
								$scope.homeAnalogProductsThree = false;
							}
							else {
								$scope.homeAnalogProductsThree = true;
							}
						}
						callback({"result":"succeed"});
					}
					else {
						callback({"result":"failed"});
					}
				})
			}
			else {
				callback({"result":"failed"});
			}
		})
	}

	//清除产品错误提示
	$scope.cspManageClearProductErrorTips = function(type) {
		switch (type) {
			case 1:
				$scope.currentProduct.capError = false;
				$scope.currentProduct.conError = false;
				$scope.currentProduct.tsidError = false;
				$scope.currentProduct.funError = false;
				$scope.currentProduct.picError = false;
				$scope.currentProduct.proError = false;
				$scope.currentProduct.bpError = false;
				$scope.currentProduct.spError = false;
				$scope.currentProduct.srError = false;
				$scope.currentProduct.mrError = false;
				$scope.currentProduct.rrError = false;
				$scope.currentProduct.mpError = false;
				$scope.currentProduct.serError = false;
				$scope.currentProduct.risError = false;
				break;
			case 2:
				$scope.currentanalogProduct.capError = false;
				$scope.currentanalogProduct.conError = false;
				$scope.currentanalogProduct.tsidError = false;
				$scope.currentanalogProduct.funError = false;
				$scope.currentanalogProduct.picError = false;
				$scope.currentanalogProduct.proError = false;
				$scope.currentanalogProduct.bpError = false;
				$scope.currentanalogProduct.spError = false;
				$scope.currentanalogProduct.srError = false;
				$scope.currentanalogProduct.mrError = false;
				$scope.currentanalogProduct.rrError = false;
				$scope.currentanalogProduct.mpError = false;
				$scope.currentanalogProduct.serError = false;
				$scope.currentanalogProduct.risError = false;
				break;
			default:
				break;
		}
	}

	$scope.cspManageAddClick = function() {
		$scope.currentProduct.caption = "";
		$scope.currentProduct.capError = false;
		$scope.currentProduct.contentshtml = "";
		$scope.currentProduct.conError = false;
		$scope.currentProduct.tsid = "";
		$scope.currentProduct.tsname = "";
		$scope.currentProduct.tsidError = false;
		$scope.currentProduct.tsidArray = [];
		$scope.currentProduct.fundmanager = "";
		$scope.currentProduct.funError = false;
		$scope.currentProduct.piclink = "";
		$scope.currentProduct.picError = false;
		$scope.currentProduct.picErrorTip = "";
		$scope.currentProduct.prostatus = "";
		$scope.currentProduct.proError = false;
		$scope.currentProduct.fileLoading = false;
		$scope.currentProduct.edit = false;
		$scope.currentProduct.addNet = false;
		$scope.currentProduct.importNet = false;
		$scope.currentProduct.selectTactics = false;
		$scope.currentProduct.seriesid = -1;
		$scope.currentProduct.serError = false;
		$scope.currentProduct.seridDefault = "请选择产品系列";
		$scope.currentProduct.risklevelid = 0;
		$scope.currentProduct.riskDefault = "请选择风险等级";
		$scope.currentProduct.risError = false;
		$scope.currentProduct.priority = 0;
		$scope.currentProduct.addhome = false;
		$scope.currentProduct.blackout_period = "";
		$scope.currentProduct.bpError = false;
		$scope.currentProduct.subscribe_point = "";
		$scope.currentProduct.spError = false;
		$scope.currentProduct.subscribe_rate = "";
		$scope.currentProduct.srError = false;
		$scope.currentProduct.manage_rate = "";
		$scope.currentProduct.mrError = false;
		$scope.currentProduct.redeem_rate = "";
		$scope.currentProduct.rrError = false;
		$scope.currentProduct.merit_pay = "";
		$scope.currentProduct.mpError = false;
		ManageService.cspGetAllTactics({},function(res) {
			if(res.result === "succeed") {
				$scope.currentProduct.tsidList = res.data;
				//获取系列数据
				ManageService.cspManageGetAllSeries({},function(gasres) {
					if(gasres.result == "succeed") {
						$scope.productSeries.splice(0,$scope.productSeries.length);
						$scope.productSeries = gasres.data;
						$scope.cspManageLoadPath = "tpls/managecenter/productinfo.html";
						$scope.cspManageState = 2;
					}
					else {
						alert("获取数据失败");
					}
				})
			}
			else {
				alert("数据库异常");
			}
		})
	}

	$scope.cspManageAddCancel = function() {
		//返回产品管理界面
		$scope.cspManageLoadPath = "tpls/managecenter/productManage.html";
		$scope.cspManageState = 0;
	}

	$scope.cspManageAddSure = function() {
		$scope.cspManageClearProductErrorTips(1);
		var error = false;
		//验证（17,2）浮点数
		var reg = /^(([1-9][0-9]{0,13})|0)(.([0-9]{0,2}))?$/;
		if($scope.currentProduct.caption === "") {
			error = true;
			$scope.currentProduct.capError = true;
		}
		if($scope.currentProduct.contentshtml === "") {
			error = true;
			$scope.currentProduct.conError = true;
		}
		if($scope.currentProduct.fundmanager === "") {
			error = true;
			$scope.currentProduct.funError = true;
		}
		if($scope.currentProduct.prostatus === "") {
			error = true;
			$scope.currentProduct.proError = true;
		}
		$scope.currentProduct.tsidArray = [];
		for(var iTl = 0; iTl < $scope.currentProduct.tsidList.length; iTl ++) {
			if($scope.currentProduct.tsidList[iTl].selected === true) {
				$scope.currentProduct.tsidArray.push($scope.currentProduct.tsidList[iTl]);
			}
		}
		if($scope.currentProduct.tsidArray.length === 0) {
			error = true;
			$scope.currentProduct.tsidError = true;
		}
		if($scope.currentProduct.seriesid == -1) {
			error = true;
			$scope.currentProduct.serError = true;
		}
		if($scope.currentProduct.risklevelid == 0) {
			error = true;
			$scope.currentProduct.risError = true;
		}
		if($scope.currentProduct.blackout_period == "") {
			error = true;
			$scope.currentProduct.bpError = true;
		}
		if(!reg.test($scope.currentProduct.subscribe_point)) {
			error = true;
			$scope.currentProduct.spError = true;
		}
		if(!reg.test($scope.currentProduct.subscribe_rate)) {
			error = true;
			$scope.currentProduct.srError = true;
		}
		if(!reg.test($scope.currentProduct.manage_rate)) {
			error = true;
			$scope.currentProduct.mrError = true;
		}
		if(!reg.test($scope.currentProduct.redeem_rate)) {
			error = true;
			$scope.currentProduct.rrError = true;
		}
		if(!reg.test($scope.currentProduct.merit_pay)) {
			error = true;
			$scope.currentProduct.mpError = true;
		}
		if(error === false) {
			//提交到后台
			console.log("提交",$scope.currentProduct.seriesid);
			$scope.currentProduct.tsid = "";
			for(var i=0; i< $scope.currentProduct.tsidArray.length; i ++) {
				if(i===0) {
					$scope.currentProduct.tsid += $scope.currentProduct.tsidArray[i].tsid;
				}
				else {
					$scope.currentProduct.tsid += "," + $scope.currentProduct.tsidArray[i].tsid;
				}
			}
			if($scope.currentProduct.edit === false) {
				//获取添加的priority
				if($scope.currentProduct.addhome == true) {
					var key = 0;
					for(key = 0; key < 3; key++) {
						if($scope.homeProducts[key].proid == -1) {
							break;
						}
					}
					$scope.currentProduct.priority = $scope.homeProducts[key].priority;
					$scope.currentProduct.toaddhome = 1;
				}
				else {
					$scope.currentProduct.toaddhome = 0;
				}
				ManageService.cspAddProduct($scope.currentProduct,function(result) {
					if(result.result === "succeed") {
						$scope.cspManageLoadPath = "tpls/managecenter/productManage.html";
						$scope.cspManageState = 0;
					}
					else {
						alert("数据库异常");
					}
				})
			}
			else {
				if($scope.currentProduct.addhome == true && $scope.currentProduct.priority == 0) {
					var key = 0;
					for(key = 0; key < 3; key++) {
						if($scope.homeProducts[key].proid == -1) {
							break;
						}
					}
					$scope.currentProduct.priority = $scope.homeProducts[key].priority;
					$scope.currentProduct.toaddhome = 1;
				}
				else if($scope.currentProduct.addhome == false && $scope.currentProduct.priority != 0) {
					$scope.currentProduct.toaddhome = 2;
				}
				else {
					$scope.currentProduct.toaddhome = 0;
				}
				ManageService.cspUpdateProduct($scope.currentProduct,function(result) {
					if(result.result === "succeed") {
						$scope.cspManageLoadPath = "tpls/managecenter/productManage.html";
						$scope.cspManageState = 0;
					}
					else {
						alert("数据库异常");
					}
				})
			}
		}
		else {
			window.scrollTo(0,0);
		}
	}

	$scope.cspManageAddTactics = function() {
		$scope.currentTactics.name = "";
		$scope.currentTactics.des = "";
		$scope.currentTactics.nameError = false;
		$scope.currentTactics.desError = false;
		$scope.currentTactics.edit = false;
		$scope.cspManageLoadPath = "tpls/managecenter/tacticsinfo.html";
		$scope.cspManageState = 3;
	}
	$scope.cspManageEditTactics = function(index) {
		$scope.currentTactics.tsid = $scope.tacticsList[index].tsid;
		$scope.currentTactics.title = "编辑策略";
		$scope.currentTactics.name = $scope.tacticsList[index].tsname;
		$scope.currentTactics.des = $scope.tacticsList[index].tsdesc;
		$scope.currentTactics.nameError = false;
		$scope.currentTactics.desError = false;
		$scope.currentTactics.edit = true;
		$scope.currentTactics.index = index;
		$scope.cspManageLoadPath = "tpls/managecenter/tacticsinfo.html";
		$scope.cspManageState = 3;
	}

	$scope.cspManageTacticsAddCancel = function() {
		$scope.cspManageLoadPath = "tpls/managecenter/tacticsManage.html";
		$scope.cspManageState = 1;
	}

	$scope.cspManageTscticsNameAccept = function() {
		$scope.currentTactics.nameError = false;
	}

	$scope.cspManageTscticsDesAccept = function() {
		$scope.currentTactics.desError = false;
	}

	$scope.cspManageTacticsAddCommit = function() {
		var error = false;
		if($scope.currentTactics.name === "") {
			$scope.currentTactics.nameError = true;
			$scope.currentTactics.nameTips = "策略名称不能为空";
			error = true;
		}
		if($scope.currentTactics.des === "") {
			$scope.currentTactics.desError = true;
			$scope.currentTactics.desTips = "策略名称不能为空";
			error = true;
		}
		if(error === false) {
			if($scope.currentTactics.edit === false) {
				//写入数据库
				var json = {};
				json.tacticsName = $scope.currentTactics.name;
				json.tacticsDes = $scope.currentTactics.des;
				ManageService.cspAddTactics(json,function(res) {
					if(res.result === "succeed") {
						$scope.cspManageLoadPath = "tpls/managecenter/tacticsManage.html";
						$scope.cspManageState = 1;
						ManageService.cspGetAllTactics({},function(result) {
							if(result.result = "succeed") {
								$scope.tacticsList = result.data;
								var re1 = new RegExp("<.+?>","g");
								for( var j = 0; j < result.data.length; j++ ) {
									$scope.tacticsList[j].descriptText = result.data[j].tsdeschtml.replace(re1,'');
								}
							}
							else {
								alert("数据更新失败");
							}
						})
					}
					else {
						alert("数据库异常");
					}
				})
			}
			else {
				//更新数据库
				var updatejson = {};
				updatejson.tsid = $scope.currentTactics.tsid;
				updatejson.tsname = $scope.currentTactics.name;
				updatejson.tsdesc = $scope.currentTactics.des;
				ManageService.cspUpdateTactics(updatejson,function(res) {
					if(res.result === "succeed") {

						$scope.cspManageLoadPath = "tpls/managecenter/tacticsManage.html";
						$scope.cspManageState = 1;
						$scope.tacticsList[$scope.currentTactics.index] = updatejson;
						ManageService.cspGetAllTactics({},function(result) {
							if(result.result = "succeed") {
								$scope.tacticsList = result.data;
								var re1 = new RegExp("<.+?>","g");
								for( var j = 0; j < result.data.length; j++ ) {
									$scope.tacticsList[j].descriptText = result.data[j].tsdeschtml.replace(re1,'');
								}
							}
							else {
								alert("数据更新失败");
							}
						})
					}
					else {
						alert("数据库异常");
					}
				})
			}
		}
	}

	$scope.cspManageDeleteTactics = function(index) {
		console.log($scope.tacticsList[index]);
		var json = {};
		json.tsid = $scope.tacticsList[index].tsid;
		ManageService.cspDeleteTactics(json,function(res) {
			if(res.result === "succeed") {
				$scope.tacticsList.splice(index,1);
				ManageService.cspGetAllTactics({},function(result) {
					if(result.result = "succeed") {
						$scope.tacticsList = result.data;
						var re1 = new RegExp("<.+?>","g");
						for( var j = 0; j < result.data.length; j++ ) {
							$scope.tacticsList[j].descriptText = result.data[j].tsdeschtml.replace(re1,'');
						}
					}
					else {
						alert("数据更新失败");
					}
				})
			}
			else {
				alert("数据库异常");
			}
		})
	}
	//删除产品
	$scope.cspManageDeleteProduct = function(index) {
		console.log($scope.products[index].id);
		var json = {};
		json.id = $scope.products[index].id;
		json.contents = $scope.products[index].contents;
		ManageService.cspDeleteProduct(json,function(result) {
			if(result.result === "succeed") {
				$scope.products.splice(index,1);
				var jsonproduct  = {};
				jsonproduct.page = $scope.productCurrentPage;
				jsonproduct.pageCount = $scope.pageCount;
				ManageService.cspGetAllProduct(jsonproduct,function(res) {
					if(res.result === "succeed") {
						$scope.products = res.data_product;
						for(var i = 0; i < res.data_product.length; i++) {
							if(res.data_product[i] !== "") {
								var tacticsNameList = "";
								var tacticsArr = res.data_product[i].tacticsList.split(",");
								for(var j = 0; j < tacticsArr.length; j++) {
									for(var k = 0; k < res.data_tactics.length; k++) {
										if(tacticsArr[j] == res.data_tactics[k].tsid) {
											if(tacticsNameList !== "") {
												tacticsNameList += "," + res.data_tactics[k].tsname;
											}
											else {
												tacticsNameList += res.data_tactics[k].tsname;
											}
										}
									}
								}
								$scope.products[i].tacticsName = tacticsNameList;
							}
						}
						//设计分页
						$scope.productTotalPage = Math.ceil(res.count/$scope.pageCount) ;
						$scope.productPages = [];
						var start = 1;
						if( $scope.productCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.productTotalPage <= $scope.itemCount) {
							start = 1;
						}
						else {
							start = $scope.productCurrentPage - Math.ceil($scope.itemCount/2) +1;
							if($scope.productTotalPage -  start + 1 < $scope.itemCount ) {
								start = $scope.productTotalPage - $scope.itemCount +1;
							}
						}
						for( var r = start ; r < start + $scope.itemCount; r ++ ) {
							if(r > $scope.productTotalPage || $scope.productTotalPage <= 1) {
								break;
							}
							else {
								var json = {};
								json.num = r;
								if(r === $scope.productCurrentPage) {
									json.select = true;
								}
								else {
									json.select = false;
								}
								$scope.productPages.push(json);
							}
						}
						if($scope.productTotalPage <= 1) {
							$scope.productShowPrev = false;
							$scope.productShowNext = false;
						}
						else {
							$scope.productShowPrev = true;
							$scope.productShowNext = true;
						}
					}
					else {
						alert("获取数据失败，请重试");
					}
				})
			}
			else {
				alert("数据库异常");
			}
		})
	}
	//选择图片
	$scope.cspManageProductAddImag = function() {
		$scope.currentProduct.picError = false;
		document.getElementById('cspManageProductFile').click();
	}
	//删除掉图片
	$scope.cspManageProductDeletePic = function() {

		if($scope.currentProduct.piclink === "") {}
		else {
			//删除图片
			var json = {};
			json.filepath = $scope.currentProduct.piclink;
			$scope.currentProduct.fileLoading = true;
			ManageService.cspManageDeleteFile(json,function(res) {
				if(res.result === "succeed") {
					$scope.currentProduct.piclink = "";
					$scope.currentProduct.fileLoading = false;
				}
				else {
					$scope.currentProduct.fileLoading = false;
	                $scope.currentProduct.picError = true;
					$scope.currentProduct.picErrorTip = "文件删除失败";
				}
			})
		}
	}
	//上传图片
	$scope.cspManageProductUploadPic = function() {
		//上传图片
		$scope.currentProduct.fileLoading = true;
		var fd = new FormData();
        var file = document.getElementById('cspManageProductFile').files[0];
        fd.append('file', file);
        ManageService.cspManageUploadFile(fd,function(res) {
            if(res.result === "succeed") {
                $scope.currentProduct.piclink = res.piclink;
                $scope.currentProduct.fileLoading = false;
            }
            else {
                $scope.currentProduct.fileLoading = false;
                $scope.currentProduct.picError = true;
				$scope.currentProduct.picErrorTip = "文件上传失败";
            }
        })
	}
	//图片格式错误
	$scope.cspManageProductErrorPic = function() {
		$scope.currentProduct.picError = true;
		$scope.currentProduct.picErrorTip = "仅支持jpg/png/bmp格式";
	}
	$scope.cspManageAddSingleData = function() {
		//添加单条数据
		$scope.currentProduct.addSingleData = {};
		$scope.currentProduct.addNet = true;
		$scope.currentProduct.importNet = false;
		var myDate = new Date();
		$scope.currentProduct.addSingleData.date = myDate.toLocaleDateString().replace(/\//g,'-');
		$scope.currentProduct.addSingleData.net = "";
		$scope.currentProduct.addSingleData.totalnet = "";
		$scope.currentProduct.addSingleData.accrate = "";
		$scope.currentProduct.addSingleData.yearrate = "";
		$scope.currentProduct.addSingleData.edit = false;
		$scope.currentProduct.addSingleData.netError = false;
		$scope.currentProduct.addSingleData.tolError = false;
		$scope.currentProduct.addSingleData.accError = false;
		$scope.currentProduct.addSingleData.yearError = false;
		$scope.currentProduct.addSingleData.dateError = false;
	}
	//取消添加单条数据
	$scope.cspManageAddNetDataCancel = function() {
		$scope.currentProduct.addNet = false;
	}
	$scope.cspManageAddNetDataSure = function() {
		var error = false;
		//验证浮点数
		var reg = /^\d+(\.\d+)?$/;
		//验证日期
		var reg1 = /^(\d{4})-(\d{1,2})-(\d{1,2})$/;
		if(!($scope.currentProduct.addSingleData.net !== "" && reg.test($scope.currentProduct.addSingleData.net)) ) {
			error = true;
			$scope.currentProduct.addSingleData.netError = true;
		}
		if(!($scope.currentProduct.addSingleData.totalnet !== "" && reg.test($scope.currentProduct.addSingleData.totalnet)) ) {
			error = true;
			$scope.currentProduct.addSingleData.tolError = true;
		}
		if(!($scope.currentProduct.addSingleData.accrate !== "" && reg.test($scope.currentProduct.addSingleData.accrate)) ) {
			error = true;
			$scope.currentProduct.addSingleData.accError = true;
		}
		if(!($scope.currentProduct.addSingleData.yearrate !== "" && reg.test($scope.currentProduct.addSingleData.yearrate)) ) {
			error = true;
			$scope.currentProduct.addSingleData.yearError = true;
		}
		if(!($scope.currentProduct.addSingleData.date !== "" && reg1.test($scope.currentProduct.addSingleData.date))) {
			error = true;
			$scope.currentProduct.addSingleData.dateError = true;
		}
		if(error === false) {
			//检查是否重复
			var jsontemp = {};
			jsontemp.date = $scope.currentProduct.addSingleData.date;
			jsontemp.proid = $scope.currentProduct.id;
			ManageService.cspManageCheckNetExist(jsontemp,function(result) {
				if(result.result === "succeed") {
					if(result.exist === true) {
						$scope.currentProduct.addSingleData.dateError = true;
					}
					else {
						//提交到服务器
						var json = {};
						json.net = $scope.currentProduct.addSingleData.net;
						json.totalnet = $scope.currentProduct.addSingleData.totalnet;
						json.accrate = $scope.currentProduct.addSingleData.accrate;
						json.yearrate = $scope.currentProduct.addSingleData.yearrate;
						json.date = $scope.currentProduct.addSingleData.date;
						json.proid = $scope.currentProduct.id;
						ManageService.cspAddSingleNet(json,function(res) {
							if(res.result === "succeed") {
								$scope.currentProduct.addNet = false;
								var json1 = {};
								json1.proid = $scope.currentProduct.id;
								$scope.netCurrentPage = 1;
								json1.page = $scope.netCurrentPage;
								json1.pageCount = $scope.pageCount;
								ManageService.cspGetNetByProductId(json1,function(result) {
									if(result.result === "succeed") {
										$scope.currentProduct.nets = result.data;
										$scope.currentProduct.checkall = false;
										for(var m = 0; m < $scope.currentProduct.nets.length; m++) {
											$scope.currentProduct.nets[m].edit = false;
											$scope.currentProduct.nets[m].checked = false;
										}
										if(result.data.length === 0) {
											$scope.currentProduct.loadExcel = true;
										}
										else {
											$scope.currentProduct.loadExcel = false;
										}
										//设计分页
										$scope.netTotalPage = Math.ceil(result.count/$scope.pageCount) ;
										$scope.netPages = [];
										var start = 1;
										if( $scope.netCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.netTotalPage <= $scope.itemCount) {
											start = 1;
										}
										else {
											start = $scope.netCurrentPage - Math.ceil($scope.itemCount/2) +1;
											if($scope.netTotalPage -  start + 1 < $scope.itemCount ) {
												start = $scope.netTotalPage - $scope.itemCount +1;
											}
										}
										for( var r = start ; r < start + $scope.itemCount; r ++ ) {
											if(r > $scope.netTotalPage || $scope.netTotalPage <= 1) {
												break;
											}
											else {
												var json = {};
												json.num = r;
												if(r === $scope.netCurrentPage) {
													json.select = true;
												}
												else {
													json.select = false;
												}
												$scope.netPages.push(json);
											}
										}
										if($scope.netTotalPage <= 1) {
											$scope.netShowPrev = false;
											$scope.netShowNext = false;
										}
										else {
											$scope.netShowPrev = true;
											$scope.netShowNext = true;
										}
									}
									else {
										alert("获取数据失败");
									}
								})
							}
							else {
								alert("数据库异常");
							}
						})
					}
				}
				else {
					alert("数据库异常");
				}
			})
		}
	}
	$scope.cspManageHideNetError = function() {
		if($scope.currentProduct.addSingleData.net !== "") {
			$scope.currentProduct.addSingleData.netError = false;
		}
		if($scope.currentProduct.addSingleData.totalnet !== "") {
			$scope.currentProduct.addSingleData.tolError = false;
		}
		if($scope.currentProduct.addSingleData.accrate !== "") {
			$scope.currentProduct.addSingleData.accError = false;
		}
		if($scope.currentProduct.addSingleData.yearrate !== "") {
			$scope.currentProduct.addSingleData.yearError = false;
		}
		if($scope.currentProduct.addSingleData.date !== "") {
			$scope.currentProduct.addSingleData.dateError = false;
		}
	}
	$scope.cspManageEditNetData = function(index) {
		//编辑净值数据
		$scope.currentProduct.nets[index].editNet = $scope.currentProduct.nets[index].net;
		$scope.currentProduct.nets[index].editTotalNet = $scope.currentProduct.nets[index].totalnet;
		$scope.currentProduct.nets[index].editAccrate = $scope.currentProduct.nets[index].accrate;
		$scope.currentProduct.nets[index].editYearrate = $scope.currentProduct.nets[index].yearrate;
		$scope.currentProduct.nets[index].edit = true;
	}
	//从数据库中删除净值数据
	$scope.cspManageDeleteNetData = function(index) {
		var json = {};
		json.ID = $scope.currentProduct.nets[index].ID;
		ManageService.cspDeleteSingleNet(json,function(res) {
			if(res.result === "succeed") {
				$scope.currentProduct.nets.splice(index,1);
				var rejson = {};
				rejson.proid = $scope.currentProduct.id;
				$scope.netCurrentPage = 1;
				rejson.page = $scope.netCurrentPage;
				rejson.pageCount = $scope.pageCount;
				ManageService.cspGetNetByProductId(rejson,function(netresult) {
					if(netresult.result === "succeed") {
						$scope.currentProduct.nets = netresult.data;
						$scope.currentProduct.checkall = false;
						for(var m = 0; m < $scope.currentProduct.nets.length; m++) {
							$scope.currentProduct.nets[m].edit = false;
							$scope.currentProduct.nets[m].checked = false;
						}
						if(netresult.data.length === 0) {
							$scope.currentProduct.loadExcel = true;
						}
						else {
							$scope.currentProduct.loadExcel = false;
						}
						//设计分页
						$scope.netTotalPage = Math.ceil(netresult.count/$scope.pageCount) ;
						$scope.netPages = [];
						var start = 1;
						if( $scope.netCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.netTotalPage <= $scope.itemCount) {
							start = 1;
						}
						else {
							start = $scope.netCurrentPage - Math.ceil($scope.itemCount/2) +1;
							if($scope.netTotalPage -  start + 1 < $scope.itemCount ) {
								start = $scope.netTotalPage - $scope.itemCount +1;
							}
						}
						for( var r = start ; r < start + $scope.itemCount; r ++ ) {
							if(r > $scope.netTotalPage || $scope.netTotalPage <= 1) {
								break;
							}
							else {
								var json = {};
								json.num = r;
								if(r === $scope.netCurrentPage) {
									json.select = true;
								}
								else {
									json.select = false;
								}
								$scope.netPages.push(json);
							}
						}
						if($scope.netTotalPage <= 1) {
							$scope.netShowPrev = false;
							$scope.netShowNext = false;
						}
						else {
							$scope.netShowPrev = true;
							$scope.netShowNext = true;
						}
					}
					else {
						alert("刷新数据失败");
					}
				})
			}
			else {
				alert("数据库异常");
			}
		})

	}

	//批量导入
	$scope.importExcel = function() {
		//初始化导入数据
		$scope.currentProduct.addNet = false;
		$scope.currentProduct.importNet = true;

		$scope.currentProduct.loaddata = {};
		$scope.currentProduct.loaddata.loading = false;
		$scope.currentProduct.loaddata.fileRight = false;
		$scope.currentProduct.loaddata.fileError = false;
		$scope.currentProduct.loaddata.errorTip = "";
		$scope.currentProduct.loaddata.nets = [];

		$scope.timePromise = undefined;
		var second = 1;
		$scope.timePromise = $interval(function(){
			if(second<=0){
			  $interval.cancel($scope.timePromise);
			  $scope.timePromise = undefined;
			  var height = document.getElementById('csp_manage_product_import_net_div').offsetTop;
			  window.scrollTo(0,height - 300);
			}else{
			  second--;
			}
		},1,1000);
	}
	//导入数据选择文件
	$scope.cspManageImportDataSelectFile = function() {
		$scope.currentProduct.loaddata.fileError = false;
		$scope.currentProduct.loaddata.errorTip = "";
		document.getElementById('csp_manage_import_file_load_form').reset();
		document.getElementById('csp_manage_import_file_load_input').click();
	}
	//上传文件
	$scope.cspManageImportLoadFileReady = function() {
		$scope.currentProduct.loaddata.loading = true;
		var fd = new FormData();
        var file = document.getElementById('csp_manage_import_file_load_input').files[0];
        fd.append('file', file);
		ManageService.cspManageImportLoadFile(fd,function(res) {
			$scope.currentProduct.loaddata.loading = false;
			if(res.result === "succeed") {
				if(res.file === true) {
					$scope.currentProduct.loaddata.fileRight = true;
					for(var i = 0; i < res.data.length; i ++) {
						$scope.currentProduct.loaddata.nets.push(res.data[i]);
					}
				}
				else {
					$scope.currentProduct.loaddata.fileError = true;
					$scope.currentProduct.loaddata.errorTip = "文件内容格式错误";
				}
			}
			else {
				$scope.currentProduct.loaddata.fileError = true;
				$scope.currentProduct.loaddata.errorTip = "文件上传失败";
			}
		})
	}
	$scope.cspManageImportFileError = function() {
		$scope.currentProduct.loaddata.fileError = true;
		$scope.currentProduct.loaddata.errorTip = "请选择csv/xls/xlsx格式的文件";
	}
	$scope.cspManageImportClearTable = function() {
		$scope.currentProduct.loaddata.fileRight = false;
		$scope.currentProduct.loaddata.nets = [];
	}
	$scope.cspManageImportLoadTable = function() {
		//检查导入的数据
		//验证浮点数
		var reg = /^\d+(\.\d+)?$/;
		//验证日期
		var reg1 = /^(\d{4})-(\d{1,2})-(\d{1,2})$/;
		var i = 0;
		var dateArr = [];
		var err = false;
		for(i = 0; i < $scope.currentProduct.loaddata.nets.length ; i++) {
			if($scope.currentProduct.loaddata.nets[i].date === undefined || !(reg1.test($scope.currentProduct.loaddata.nets[i].date))) {
				err = true;
				break;
			}
			else if($scope.currentProduct.loaddata.nets[i].net === undefined || !(reg.test($scope.currentProduct.loaddata.nets[i].net))) {
				err = true;
				break;
			}
			else if($scope.currentProduct.loaddata.nets[i].totalnet === undefined || !(reg.test($scope.currentProduct.loaddata.nets[i].totalnet))) {
				err = true;
				break;
			}
			else if($scope.currentProduct.loaddata.nets[i].accrate === undefined || !(reg.test($scope.currentProduct.loaddata.nets[i].accrate))) {
				err = true;
				break;
			}
			else if($scope.currentProduct.loaddata.nets[i].yearrate === undefined || !(reg.test($scope.currentProduct.loaddata.nets[i].yearrate))) {
				err = true;
				break;
			}
			else {
				//将date添加到数组，并判断重复
				var j = 0;
				for(j = 0; j < dateArr.length; j++) {
					if($scope.currentProduct.loaddata.nets[i].date === dateArr[j]) {
						err = true;
						break;
					}
				}
				if( j >= dateArr.length) {
					dateArr.push($scope.currentProduct.loaddata.nets[i].date);
				}
			}
		}
		if(err === true) {
			$scope.currentProduct.loaddata.fileError = true;
			$scope.currentProduct.loaddata.errorTip = "请检查数据格式及日期是否重复";
		}
		else {
			var json = {};
			json.proid = $scope.currentProduct.id;
			json.nets = $scope.currentProduct.loaddata.nets;
			json.count = $scope.currentProduct.loaddata.nets.length;
			ManageService.cspManageImportInsertToDb(json,function(res) {
				if(res.result === "succeed") {
					$scope.currentProduct.importNet = false;
					var json1 = {};
					json1.proid = $scope.currentProduct.id;
					$scope.netCurrentPage = 1;
					json1.page = $scope.netCurrentPage;
					json1.pageCount = $scope.pageCount;
					ManageService.cspGetNetByProductId(json1,function(result) {
						if(result.result === "succeed") {
							$scope.currentProduct.nets = result.data;
							$scope.currentProduct.checkall = false;
							for(var m = 0; m < $scope.currentProduct.nets.length; m++) {
								$scope.currentProduct.nets[m].edit = false;
								$scope.currentProduct.nets[m].checked = false;
							}
							if(result.data.length === 0) {
								$scope.currentProduct.loadExcel = true;
							}
							else {
								$scope.currentProduct.loadExcel = false;
							}
							//设计分页
							$scope.netTotalPage = Math.ceil(result.count/$scope.pageCount) ;
							$scope.netPages = [];
							var start = 1;
							if( $scope.netCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.netTotalPage <= $scope.itemCount) {
								start = 1;
							}
							else {
								start = $scope.netCurrentPage - Math.ceil($scope.itemCount/2) +1;
								if($scope.netTotalPage -  start + 1 < $scope.itemCount ) {
									start = $scope.netTotalPage - $scope.itemCount +1;
								}
							}
							for( var r = start ; r < start + $scope.itemCount; r ++ ) {
								if(r > $scope.netTotalPage || $scope.netTotalPage <= 1) {
									break;
								}
								else {
									var json = {};
									json.num = r;
									if(r === $scope.netCurrentPage) {
										json.select = true;
									}
									else {
										json.select = false;
									}
									$scope.netPages.push(json);
								}
							}
							if($scope.netTotalPage <= 1) {
								$scope.netShowPrev = false;
								$scope.netShowNext = false;
							}
							else {
								$scope.netShowPrev = true;
								$scope.netShowNext = true;
							}
						}
						else {
							alert("获取数据失败");
						}
					})
				}
				else {
					alert("数据库异常");
				}
			})
		}
	}
	$scope.cspManageImportDeleteData = function(index) {
		$scope.currentProduct.loaddata.nets.splice(index,1);
		if($scope.currentProduct.loaddata.nets.length === 0) {
			$scope.currentProduct.loaddata.fileRight = false;
		}
	}
	//编辑产品
	$scope.cspManageEditProduct = function(index) {
		$scope.currentProduct.id = $scope.products[index].id;
		$scope.currentProduct.caption = $scope.products[index].caption;
		$scope.currentProduct.capError = false;
		$scope.currentProduct.contents = $scope.products[index].contents;
		$scope.currentProduct.conError = false;
		$scope.currentProduct.tsid = $scope.products[index].tacticsList;
		$scope.currentProduct.tsname = $scope.products[index].tacticsName;
		$scope.currentProduct.tsidError = false;
		$scope.currentProduct.tsidArray = [];
		$scope.currentProduct.tsidList = [];
		$scope.currentProduct.fundmanager = $scope.products[index].fundmanager;
		$scope.currentProduct.funError = false;
		$scope.currentProduct.piclink = $scope.products[index].piclink;
		$scope.currentProduct.picError = false;
		$scope.currentProduct.picErrorTip = "";
		$scope.currentProduct.prostatus = $scope.products[index].prostatus;
		$scope.currentProduct.proError = false;
		$scope.currentProduct.fileLoading = false;
		$scope.currentProduct.edit = true;
		$scope.currentProduct.addNet = false;
		$scope.currentProduct.importNet = false;
		$scope.currentProduct.nets = [];
		$scope.currentProduct.selectTactics = false;
		$scope.currentProduct.snetdate = $scope.products[index].snetdate;
		$scope.currentProduct.snet = $scope.products[index].snet;
		$scope.currentProduct.netError = false;
		$scope.currentProduct.loadExcel = false;
		$scope.currentProduct.seriesid = $scope.products[index].serid;
		if($scope.currentProduct.seriesid == -1) {
			$scope.currentProduct.seridDefault = "请选择产品系列";
		}
		else {
			$scope.currentProduct.seridDefault = $scope.products[index].sername;
		}
		$scope.currentProduct.serError = false;
		$scope.currentProduct.risklevelid = $scope.products[index].risklevelid;
		$scope.currentProduct.riskDefault = $scope.products[index].risklevelid == 0 ? "请选择风险等级" : $scope.products[index].rname;
		$scope.currentProduct.risError = false;
		$scope.currentProduct.blackout_period = $scope.products[index].blackout_period;
		$scope.currentProduct.bpError = false;
		$scope.currentProduct.subscribe_point = $scope.products[index].subscribe_point;
		$scope.currentProduct.spError = false;
		$scope.currentProduct.subscribe_rate = $scope.products[index].subscribe_rate * 100;
		$scope.currentProduct.srError = false;
		$scope.currentProduct.manage_rate = $scope.products[index].manage_rate * 100;
		$scope.currentProduct.mrError = false;
		$scope.currentProduct.redeem_rate = $scope.products[index].redeem_rate * 100;
		$scope.currentProduct.rrError = false;
		$scope.currentProduct.merit_pay = $scope.products[index].merit_pay * 100;
		$scope.currentProduct.mpError = false;

		$scope.currentProduct.priority = $scope.products[index].priority;
		$scope.currentProduct.addhome = $scope.products[index].priority == 0 ? false : true;

		//期货数据定义
		$scope.currentProduct.spotload = false;
		$scope.currentProduct.showLoadSpot = true;
		$scope.currentProduct.spotadd = false;
		$scope.currentProduct.spotcheckall = false;

		//获取产品说明
		var json1 = {};
		json1.contents = $scope.products[index].contents;
		ManageService.cspManageGetProductDes(json1,function(res1) {
			if(res1.result === "succeed") {
				$scope.currentProduct.contentshtml = res1.data;
			}
			else {
				$scope.currentProduct.contentshtml = "";
			}
			ManageService.cspGetAllTactics({},function(result) {
				if(result.result === "succeed") {
					var tacticsArr = $scope.currentProduct.tsid.split(",");
					console.log($scope.currentProduct.tsid,tacticsArr);
					$scope.currentProduct.tsidList = result.data;
					for(var k = 0; k < result.data.length; k++) {
						for(var j = 0; j < tacticsArr.length; j++) {
							if(tacticsArr[j] == result.data[k].tsid) {
								//$scope.currentProduct.tsidArray.push(res.data[k]);
								$scope.currentProduct.tsidList[k].selected = true;
								break;
							}
						}
						if(j >= tacticsArr.length) {
							$scope.currentProduct.tsidList[k].selected = false;
						}
					}
					//获取净值表
					var json = {};
					json.proid = $scope.products[index].id;
					$scope.netCurrentPage = 1;
					json.page = $scope.netCurrentPage;
					json.pageCount = $scope.pageCount;
					ManageService.cspGetNetByProductId(json,function(res) {
						if(res.result === "succeed") {
							$scope.currentProduct.nets = res.data;
							$scope.currentProduct.checkall = false;
							for(var m = 0; m < $scope.currentProduct.nets.length; m++) {
								$scope.currentProduct.nets[m].edit = false;
								$scope.currentProduct.nets[m].checked = false;
							}
							if(res.data.length === 0) {
								$scope.currentProduct.loadExcel = true;
							}
							else {
								$scope.currentProduct.loadExcel = false;
							}
							//设计分页
							console.log(res.count);
							$scope.netTotalPage = Math.ceil(res.count/$scope.pageCount) ;
							$scope.netPages = [];
							var start = 1;
							if( $scope.netCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.netTotalPage <= $scope.itemCount) {
								start = 1;
							}
							else {
								start = $scope.netCurrentPage - Math.ceil($scope.itemCount/2) +1;
								if($scope.netTotalPage -  start + 1 < $scope.itemCount ) {
									start = $scope.netTotalPage - $scope.itemCount +1;
								}
							}
							for( var r = start ; r < start + $scope.itemCount; r ++ ) {
								if(r > $scope.netTotalPage || $scope.netTotalPage <= 1) {
									break;
								}
								else {
									var json = {};
									json.num = r;
									if(r === $scope.netCurrentPage) {
										json.select = true;
									}
									else {
										json.select = false;
									}
									$scope.netPages.push(json);
								}
							}
							if($scope.netTotalPage <= 1) {
								$scope.netShowPrev = false;
								$scope.netShowNext = false;
							}
							else {
								$scope.netShowPrev = true;
								$scope.netShowNext = true;
							}
							//获取股票持仓数据
							var jsonspot = {};
							jsonspot.proid = $scope.products[index].id;
							jsonspot.protype = $scope.productType;
							$scope.spotCurrentPage = 1;
							jsonspot.page = $scope.spotCurrentPage;
							jsonspot.pageCount = $scope.pageCount;
							ManageService.cspManageGetSpot(jsonspot,function(spotres) {
								if(spotres.result === "succeed") {
									$scope.currentProduct.spots = spotres.data;
									$scope.currentProduct.checkallspot = false;
									for(var m = 0; m < $scope.currentProduct.spots.length; m++) {
										$scope.currentProduct.spots[m].edit = false;
										$scope.currentProduct.spots[m].checked = false;
									}
									if(spotres.data.length === 0) {
										$scope.currentProduct.showLoadSpot = true;
									}
									else {
										$scope.currentProduct.showLoadSpot = false;
									}
									//设计分页
									console.log(spotres.count);
									$scope.spotTotalPage = Math.ceil(spotres.count/$scope.pageCount) ;
									$scope.spotPages = [];
									var start = 1;
									if( $scope.spotCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.spotTotalPage <= $scope.itemCount) {
										start = 1;
									}
									else {
										start = $scope.spotCurrentPage - Math.ceil($scope.itemCount/2) +1;
										if($scope.spotTotalPage -  start + 1 < $scope.itemCount ) {
											start = $scope.spotTotalPage - $scope.itemCount +1;
										}
									}
									for( var r = start ; r < start + $scope.itemCount; r ++ ) {
										if(r > $scope.spotTotalPage || $scope.spotTotalPage <= 1) {
											break;
										}
										else {
											var json = {};
											json.num = r;
											if(r === $scope.spotCurrentPage) {
												json.select = true;
											}
											else {
												json.select = false;
											}
											$scope.spotPages.push(json);
										}
									}
									if($scope.spotTotalPage <= 1) {
										$scope.spotShowPrev = false;
										$scope.spotShowNext = false;
									}
									else {
										$scope.spotShowPrev = true;
										$scope.spotShowNext = true;
									}
									//获取期货数据
									var jsonfutures = {};
									jsonfutures.proid = $scope.products[index].id;
									jsonfutures.protype = $scope.productType;
									$scope.futuresCurrentPage = 1;
									jsonfutures.page = $scope.futuresCurrentPage;
									jsonfutures.pageCount = $scope.pageCount;
									ManageService.cspManageGetFutures(jsonfutures,function(futuresres) {
										if(futuresres.result === "succeed") {
											$scope.currentProduct.futureses = futuresres.data;
											$scope.currentProduct.checkallfutures = false;
											for(var m = 0; m < $scope.currentProduct.futureses.length; m++) {
												$scope.currentProduct.futureses[m].edit = false;
												$scope.currentProduct.futureses[m].checked = false;
												$scope.currentProduct.futureses[m].dealtypejson = {};
												if($scope.currentProduct.futureses[m].dealtype == 0) {
													$scope.currentProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[0];
												}
												else {
													$scope.currentProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[1];
												}
											}
											if(futuresres.data.length === 0) {
												$scope.currentProduct.showLoadFutures = true;
											}
											else {
												$scope.currentProduct.showLoadFutures = false;
											}
											//设计分页
											console.log(futuresres.count);
											$scope.futuresTotalPage = Math.ceil(futuresres.count/$scope.pageCount) ;
											$scope.futuresPages = [];
											var start = 1;
											if( $scope.futuresCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.futuresTotalPage <= $scope.itemCount) {
												start = 1;
											}
											else {
												start = $scope.futuresCurrentPage - Math.ceil($scope.itemCount/2) +1;
												if($scope.futuresTotalPage -  start + 1 < $scope.itemCount ) {
													start = $scope.futuresTotalPage - $scope.itemCount +1;
												}
											}
											for( var r = start ; r < start + $scope.itemCount; r ++ ) {
												if(r > $scope.futuresTotalPage || $scope.futuresTotalPage <= 1) {
													break;
												}
												else {
													var json = {};
													json.num = r;
													if(r === $scope.futuresCurrentPage) {
														json.select = true;
													}
													else {
														json.select = false;
													}
													$scope.futuresPages.push(json);
												}
											}
											if($scope.futuresTotalPage <= 1) {
												$scope.futuresShowPrev = false;
												$scope.futuresShowNext = false;
											}
											else {
												$scope.futuresShowPrev = true;
												$scope.futuresShowNext = true;
											}

											//获取系列数据
											ManageService.cspManageGetAllSeries({},function(gasres) {
												if(gasres.result == "succeed") {
													$scope.productSeries.splice(0,$scope.productSeries.length);
													$scope.productSeries = gasres.data;
													$scope.cspManageLoadPath = "tpls/managecenter/productinfo.html";
													$scope.cspManageState = 2;
												}
												else {
													alert("获取数据失败");
												}
											})

										}
										else {
											alert("获取数据失败");
										}
									})
								}
								else {
									alert("获取数据失败");
								}
							})
						}
						else {
							alert("获取数据失败");
						}
					})
				}
				else {
					alert("数据库异常");
				}
			})
		})

	}
	//取消编辑净值
	$scope.cspManageEditNetDataCancel = function(index) {
		$scope.currentProduct.nets[index].edit = false;
	}
	//保存编辑的净值
	$scope.cspManageSaveNetData = function(index) {
		var error = false;
		//验证浮点数
		var reg = /^\d+(\.\d+)?$/;
		if(!($scope.currentProduct.nets[index].editNet !== "" && reg.test($scope.currentProduct.nets[index].editNet)) ) {
			error = true;

		}
		if(!($scope.currentProduct.nets[index].editTotalNet !== "" && reg.test($scope.currentProduct.nets[index].editTotalNet)) ) {
			error = true;
		}
		if(!($scope.currentProduct.nets[index].editAccrate !== "" && reg.test($scope.currentProduct.nets[index].editAccrate)) ) {
			error = true;
		}
		if(!($scope.currentProduct.nets[index].editYearrate !== "" && reg.test($scope.currentProduct.nets[index].editYearrate)) ) {
			error = true;
		}
		if(error === true) {
			alert("请正确输入编辑的信息");
		}
		else {
			var json = {};
			json.net = $scope.currentProduct.nets[index].editNet;
			json.totalnet = $scope.currentProduct.nets[index].editTotalNet;
			json.accrate = $scope.currentProduct.nets[index].editAccrate;
			json.yearrate = $scope.currentProduct.nets[index].editYearrate;
			json.ID = $scope.currentProduct.nets[index].ID;
			ManageService.cspUpdateSingleNet(json,function(res) {
				if(res.result === "succeed") {
					$scope.currentProduct.nets[index].edit = false;
					var json1 = {};
					json1.proid = $scope.currentProduct.id;
					json1.page = $scope.netCurrentPage;
					json1.pageCount = $scope.pageCount;
					ManageService.cspGetNetByProductId(json1,function(result) {
						if(result.result === "succeed") {
							$scope.currentProduct.nets = result.data;
							$scope.currentProduct.checkall = false;
							for(var m = 0; m < $scope.currentProduct.nets.length; m++) {
								$scope.currentProduct.nets[m].edit = false;
								$scope.currentProduct.nets[m].checked = false;
							}
							if(result.data.length === 0) {
								$scope.currentProduct.loadExcel = true;
							}
							else {
								$scope.currentProduct.loadExcel = false;
							}
							//设计分页
							$scope.netTotalPage = Math.ceil(result.count/$scope.pageCount) ;
							$scope.netPages = [];
							var start = 1;
							if( $scope.netCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.netTotalPage <= $scope.itemCount) {
								start = 1;
							}
							else {
								start = $scope.netCurrentPage - Math.ceil($scope.itemCount/2) +1;
								if($scope.netTotalPage -  start + 1 < $scope.itemCount ) {
									start = $scope.netTotalPage - $scope.itemCount +1;
								}
							}
							for( var r = start ; r < start + $scope.itemCount; r ++ ) {
								if(r > $scope.netTotalPage || $scope.netTotalPage <= 1) {
									break;
								}
								else {
									var json = {};
									json.num = r;
									if(r === $scope.netCurrentPage) {
										json.select = true;
									}
									else {
										json.select = false;
									}
									$scope.netPages.push(json);
								}
							}
							if($scope.netTotalPage <= 1) {
								$scope.netShowPrev = false;
								$scope.netShowNext = false;
							}
							else {
								$scope.netShowPrev = true;
								$scope.netShowNext = true;
							}
						}
						else {
							alert("获取数据失败");
						}
					})
				}
				else {
					$scope.currentProduct.nets[index].edit = false;
					alert("数据库异常");
				}
			})
		}
	}

	$scope.cspManageProductSelectTactics = function(e) {
		$scope.currentProduct.selectTactics = true;
		$scope.currentProduct.tsidError = false;
		document.getElementById('csp_manage_product_tactics_select').style.width = document.getElementById('csp_manage_product_tactics_result').offsetWidth + "px";
		e.stopPropagation();
	}
	$scope.cspManageProductCloseTactics = function() {
		$scope.currentProduct.selectTactics = false;
	}
	$scope.cspManageProductStop = function(e) {
		console.log("dfdf");
		e.stopPropagation();
	}
	$scope.cspManageProductSelectTacticsSure = function(index) {
		$scope.currentProduct.tsidList[index].selected = !$scope.currentProduct.tsidList[index].selected;
		var k = 0;
		$scope.currentProduct.tsname = "";
		for(var i = 0; i < $scope.currentProduct.tsidList.length; i++ ) {
			if($scope.currentProduct.tsidList[i].selected === true) {
				if(k === 0) {
					k = 1;
					$scope.currentProduct.tsname += $scope.currentProduct.tsidList[i].tsname;
				}
				else {
					$scope.currentProduct.tsname += " ， " + $scope.currentProduct.tsidList[i].tsname;
				}
			}
		}
	}
	$scope.cspManageSelectUserChange = function() {
		var kind = document.getElementById('csp_manage_user_kind').value;
		if(kind === $scope.currentUserKind){}
		else {
			$scope.currentUserKind = kind;
			var jsonuser = {};
			jsonuser.kind = $scope.currentUserKind;
			$scope.userCurrentPage = 1;
			jsonuser.page = $scope.userCurrentPage;
			jsonuser.pageCount = $scope.pageCount;
			ManageService.cspManageGetAllUser(jsonuser,function(res) {
				if(res.result === "succeed") {
					$scope.users = res.data;
					for(var i = 0; i < res.data.length; i++) {
						if(res.data[i].au_stat == 0) {
							$scope.users[i].checkState = "未验证";
						}
						else {
							$scope.users[i].checkState = "已验证";
						}
						$scope.users[i].edit = false;
					}

					//设计分页
					$scope.userTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.userPages = [];
					var start = 1;
					if( $scope.userCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.userTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.userCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.userTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.userTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.userTotalPage || $scope.userTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.userCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.userPages.push(json);
						}
					}
					if($scope.userTotalPage <= 1) {
						$scope.userShowPrev = false;
						$scope.userShowNext = false;
					}
					else {
						$scope.userShowPrev = true;
						$scope.userShowNext = true;
					}
				}
				else {
					alert("数据库异常");
				}
			})
		}
	}
	$scope.cspManageEditUser = function(index) {
		$scope.users[index].memberlevels = [];
		ManageService.cspManageGetMemberLevel({},function(res) {
			if(res.result === "succeed") {
				$scope.users[index].memberlevels = res.data;
				$scope.users[index].edit = true;
				for(var i = 0; i< res.data.length; i++) {
					if($scope.users[index].conlevel === res.data[i].id) {
						$scope.users[index].selectMemLevel = res.data[i];
						break;
					}
				}
			}
			else {
				alert("数据库异常");
			}
		})

	}
	$scope.cspManageEditUserSave = function(index) {
		if($scope.users[index].conlevel === $scope.users[index].selectMemLevel.id) {
			$scope.users[index].edit = false;
		}
		else {
			//提交到后台处理
			var json = {};
			json.uid = $scope.users[index].uid;
			json.conlevel = $scope.users[index].selectMemLevel.id;
			ManageService.cspManageChangeUserLevel(json,function(res) {
				if(res.result === "succeed") {
					$scope.users[index].edit = false;
					var jsonuser = {};
					jsonuser.kind = $scope.currentUserKind;
					jsonuser.page = $scope.userCurrentPage;
					jsonuser.pageCount = $scope.pageCount;
					ManageService.cspManageGetAllUser(jsonuser,function(res) {
						if(res.result === "succeed") {
							$scope.users = res.data;
							for(var i = 0; i < res.data.length; i++) {
								if(res.data[i].au_stat == 0) {
									$scope.users[i].checkState = "未验证";
								}
								else {
									$scope.users[i].checkState = "已验证";
								}
								$scope.users[i].edit = false;
							}

							//设计分页
							$scope.userTotalPage = Math.ceil(res.count/$scope.pageCount) ;
							$scope.userPages = [];
							var start = 1;
							if( $scope.userCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.userTotalPage <= $scope.itemCount) {
								start = 1;
							}
							else {
								start = $scope.userCurrentPage - Math.ceil($scope.itemCount/2) +1;
								if($scope.userTotalPage -  start + 1 < $scope.itemCount ) {
									start = $scope.userTotalPage - $scope.itemCount +1;
								}
							}
							for( var r = start ; r < start + $scope.itemCount; r ++ ) {
								if(r > $scope.userTotalPage || $scope.userTotalPage <= 1) {
									break;
								}
								else {
									var json = {};
									json.num = r;
									if(r === $scope.userCurrentPage) {
										json.select = true;
									}
									else {
										json.select = false;
									}
									$scope.userPages.push(json);
								}
							}
							if($scope.userTotalPage <= 1) {
								$scope.userShowPrev = false;
								$scope.userShowNext = false;
							}
							else {
								$scope.userShowPrev = true;
								$scope.userShowNext = true;
							}
						}
						else {
							alert("数据库异常");
						}
					})
				}
				else {
					alert("数据库异常");
				}
			})

		}
	}
	$scope.cspManageEditUserCancel = function(index) {
		$scope.users[index].edit = false;
	}
	$scope.cspManageFinishCheck = function(index) {
		var json = {};
		json.uid = $scope.users[index].uid;
		ManageService.cspManageChangeUserCheckState(json,function(res) {
			if(res.result === "succeed") {
				var jsonuser = {};
				jsonuser.kind = $scope.currentUserKind;
				jsonuser.page = $scope.userCurrentPage;
				jsonuser.pageCount = $scope.pageCount;
				ManageService.cspManageGetAllUser(jsonuser,function(res) {
					if(res.result === "succeed") {
						$scope.users = res.data;
						for(var i = 0; i < res.data.length; i++) {
							if(res.data[i].au_stat == 0) {
								$scope.users[i].checkState = "未验证";
							}
							else {
								$scope.users[i].checkState = "已验证";
							}
							$scope.users[i].edit = false;
						}

						//设计分页
						$scope.userTotalPage = Math.ceil(res.count/$scope.pageCount) ;
						$scope.userPages = [];
						var start = 1;
						if( $scope.userCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.userTotalPage <= $scope.itemCount) {
							start = 1;
						}
						else {
							start = $scope.userCurrentPage - Math.ceil($scope.itemCount/2) +1;
							if($scope.userTotalPage -  start + 1 < $scope.itemCount ) {
								start = $scope.userTotalPage - $scope.itemCount +1;
							}
						}
						for( var r = start ; r < start + $scope.itemCount; r ++ ) {
							if(r > $scope.userTotalPage || $scope.userTotalPage <= 1) {
								break;
							}
							else {
								var json = {};
								json.num = r;
								if(r === $scope.userCurrentPage) {
									json.select = true;
								}
								else {
									json.select = false;
								}
								$scope.userPages.push(json);
							}
						}
						if($scope.userTotalPage <= 1) {
							$scope.userShowPrev = false;
							$scope.userShowNext = false;
						}
						else {
							$scope.userShowPrev = true;
							$scope.userShowNext = true;
						}
					}
					else {
						alert("数据库异常");
					}
				})
			}
			else {
				alert("数据库异常");
			}
		})
	}
	$scope.cspManageCheckAllNets = function() {
		if ($scope.currentProduct.checkall === false) {
			$scope.currentProduct.checkall = true;
			for(var i = 0; i < $scope.currentProduct.nets.length; i++) {
				$scope.currentProduct.nets[i].checked = true;
			}
		}
		else {
			$scope.currentProduct.checkall = false;
			for(var j = 0; j < $scope.currentProduct.nets.length; j++) {
				$scope.currentProduct.nets[j].checked = false;
			}
		}
	}
	$scope.cspManageNetCheckClick = function() {
		$scope.currentProduct.checkall = true;
		for(var i = 0; i < $scope.currentProduct.nets.length; i++) {
			if($scope.currentProduct.nets[i].checked === false) {
				$scope.currentProduct.checkall = false;
			}
		}
	}
	$scope.cspManageMultipleDeleteNets = function() {
		//先循环，获取所有要删除的净值数据
		var idarr = [];
		for(var i = 0; i < $scope.currentProduct.nets.length; i++) {
			if($scope.currentProduct.nets[i].checked === true) {
				idarr.push($scope.currentProduct.nets[i].ID)
			}
		}
		if(idarr.length === 0) {
			//啥也不干
		}
		else if(idarr.length === 1) {
			var json1 = {};
			json1.count = 1;
			json1.data = idarr;
			ManageService.cspManageMultipleDeleteNets(json1,function(res1) {
				if(res1.result === "succeed") {
					var jsontemp1 = {};
					jsontemp1.proid = $scope.currentProduct.id;
					$scope.netCurrentPage = 1;
					jsontemp1.page = $scope.netCurrentPage;
					jsontemp1.pageCount = $scope.pageCount;
					ManageService.cspGetNetByProductId(jsontemp1,function(result1) {
						if(result1.result === "succeed") {
							$scope.currentProduct.nets = result1.data;
							$scope.currentProduct.checkall = false;
							for(var m = 0; m < $scope.currentProduct.nets.length; m++) {
								$scope.currentProduct.nets[m].edit = false;
								$scope.currentProduct.nets[m].checked = false;
							}
							if(result1.data.length === 0) {
								$scope.currentProduct.loadExcel = true;
							}
							else {
								$scope.currentProduct.loadExcel = false;
							}
							//设计分页
							$scope.netTotalPage = Math.ceil(result1.count/$scope.pageCount) ;
							$scope.netPages = [];
							var start = 1;
							if( $scope.netCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.netTotalPage <= $scope.itemCount) {
								start = 1;
							}
							else {
								start = $scope.netCurrentPage - Math.ceil($scope.itemCount/2) +1;
								if($scope.netTotalPage -  start + 1 < $scope.itemCount ) {
									start = $scope.netTotalPage - $scope.itemCount +1;
								}
							}
							for( var r = start ; r < start + $scope.itemCount; r ++ ) {
								if(r > $scope.netTotalPage || $scope.netTotalPage <= 1) {
									break;
								}
								else {
									var json = {};
									json.num = r;
									if(r === $scope.netCurrentPage) {
										json.select = true;
									}
									else {
										json.select = false;
									}
									$scope.netPages.push(json);
								}
							}
							if($scope.netTotalPage <= 1) {
								$scope.netShowPrev = false;
								$scope.netShowNext = false;
							}
							else {
								$scope.netShowPrev = true;
								$scope.netShowNext = true;
							}
						}
						else {
							alert("获取数据失败");
						}
					})
				}
				else {
					alert("数据库异常");
				}
			})
		}
		else {
			var json2 = {};
			json2.count = idarr.length;
			json2.data = idarr;
			ManageService.cspManageMultipleDeleteNets(json2,function(res2) {
				if(res2.result === "succeed") {
					var jsontemp2 = {};
					jsontemp2.proid = $scope.currentProduct.id;
					$scope.netCurrentPage = 1;
					jsontemp2.page = $scope.netCurrentPage;
					jsontemp2.pageCount = $scope.pageCount;
					ManageService.cspGetNetByProductId(jsontemp2,function(result2) {
						if(result2.result === "succeed") {
							$scope.currentProduct.nets = result2.data;
							$scope.currentProduct.checkall = false;
							for(var m = 0; m < $scope.currentProduct.nets.length; m++) {
								$scope.currentProduct.nets[m].edit = false;
								$scope.currentProduct.nets[m].checked = false;
							}
							if(result2.data.length === 0) {
								$scope.currentProduct.loadExcel = true;
							}
							else {
								$scope.currentProduct.loadExcel = false;
							}
							//设计分页
							$scope.netTotalPage = Math.ceil(result2.count/$scope.pageCount) ;
							$scope.netPages = [];
							var start = 1;
							if( $scope.netCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.netTotalPage <= $scope.itemCount) {
								start = 1;
							}
							else {
								start = $scope.netCurrentPage - Math.ceil($scope.itemCount/2) +1;
								if($scope.netTotalPage -  start + 1 < $scope.itemCount ) {
									start = $scope.netTotalPage - $scope.itemCount +1;
								}
							}
							for( var r = start ; r < start + $scope.itemCount; r ++ ) {
								if(r > $scope.netTotalPage || $scope.netTotalPage <= 1) {
									break;
								}
								else {
									var json = {};
									json.num = r;
									if(r === $scope.netCurrentPage) {
										json.select = true;
									}
									else {
										json.select = false;
									}
									$scope.netPages.push(json);
								}
							}
							if($scope.netTotalPage <= 1) {
								$scope.netShowPrev = false;
								$scope.netShowNext = false;
							}
							else {
								$scope.netShowPrev = true;
								$scope.netShowNext = true;
							}
						}
						else {
							alert("获取数据失败");
						}
					})
				}
				else {
					alert("数据库异常");
				}
			})
		}
	}

	$scope.cspManageProductLoopToFirst = function () {
		if($scope.productCurrentPage === 1) {}
		else {
			window.scrollTo(0,0);
			var jsonproduct = {};
			$scope.productCurrentPage = 1;
			jsonproduct.page = $scope.productCurrentPage;
			jsonproduct.pageCount = $scope.pageCount;
			ManageService.cspGetAllProduct(jsonproduct,function(res) {
				if(res.result === "succeed") {
					$scope.products = res.data_product;
					for(var i = 0; i < res.data_product.length; i++) {
						if(res.data_product[i] !== "") {
							var tacticsNameList = "";
							var tacticsArr = res.data_product[i].tacticsList.split(",");
							for(var j = 0; j < tacticsArr.length; j++) {
								for(var k = 0; k < res.data_tactics.length; k++) {
									if(tacticsArr[j] == res.data_tactics[k].tsid) {
										if(tacticsNameList !== "") {
											tacticsNameList += " ， " + res.data_tactics[k].tsname;
										}
										else {
											tacticsNameList += res.data_tactics[k].tsname;
										}
									}
								}
							}
							$scope.products[i].tacticsName = tacticsNameList;
						}
					}
					//设计分页
					$scope.productTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.productPages = [];
					var start = 1;
					if( $scope.productCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.productTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.productCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.productTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.productTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.productTotalPage || $scope.productTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.productCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.productPages.push(json);
						}
					}
					if($scope.productTotalPage <= 1) {
						$scope.productShowPrev = false;
						$scope.productShowNext = false;
					}
					else {
						$scope.productShowPrev = true;
						$scope.productShowNext = true;
					}
				}
				else {
					alert("获取数据失败，请重试");
				}
			})
		}
	}

	$scope.cspManageProductLoopPrev = function() {
		if($scope.productCurrentPage === 1) {}
		else {
			window.scrollTo(0,0);
			var jsonproduct = {};
			$scope.productCurrentPage = $scope.productCurrentPage - 1;
			jsonproduct.page = $scope.productCurrentPage;
			jsonproduct.pageCount = $scope.pageCount;
			ManageService.cspGetAllProduct(jsonproduct,function(res) {
				if(res.result === "succeed") {
					$scope.products = res.data_product;
					for(var i = 0; i < res.data_product.length; i++) {
						if(res.data_product[i] !== "") {
							var tacticsNameList = "";
							var tacticsArr = res.data_product[i].tacticsList.split(",");
							for(var j = 0; j < tacticsArr.length; j++) {
								for(var k = 0; k < res.data_tactics.length; k++) {
									if(tacticsArr[j] == res.data_tactics[k].tsid) {
										if(tacticsNameList !== "") {
											tacticsNameList += " ， " + res.data_tactics[k].tsname;
										}
										else {
											tacticsNameList += res.data_tactics[k].tsname;
										}
									}
								}
							}
							$scope.products[i].tacticsName = tacticsNameList;
						}
					}
					//设计分页
					$scope.productTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.productPages = [];
					var start = 1;
					if( $scope.productCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.productTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.productCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.productTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.productTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.productTotalPage || $scope.productTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.productCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.productPages.push(json);
						}
					}
					if($scope.productTotalPage <= 1) {
						$scope.productShowPrev = false;
						$scope.productShowNext = false;
					}
					else {
						$scope.productShowPrev = true;
						$scope.productShowNext = true;
					}
				}
				else {
					alert("获取数据失败，请重试");
				}
			})
		}
	}

	$scope.cspManageProductLoopToPage = function(page) {
		if(page.select === true) {}
		else {
			window.scrollTo(0,0);
			var jsonproduct = {};
			$scope.productCurrentPage = page.num;
			jsonproduct.page = $scope.productCurrentPage;
			jsonproduct.pageCount = $scope.pageCount;
			ManageService.cspGetAllProduct(jsonproduct,function(res) {
				if(res.result === "succeed") {
					$scope.products = res.data_product;
					for(var i = 0; i < res.data_product.length; i++) {
						if(res.data_product[i] !== "") {
							var tacticsNameList = "";
							var tacticsArr = res.data_product[i].tacticsList.split(",");
							for(var j = 0; j < tacticsArr.length; j++) {
								for(var k = 0; k < res.data_tactics.length; k++) {
									if(tacticsArr[j] == res.data_tactics[k].tsid) {
										if(tacticsNameList !== "") {
											tacticsNameList += " ， " + res.data_tactics[k].tsname;
										}
										else {
											tacticsNameList += res.data_tactics[k].tsname;
										}
									}
								}
							}
							$scope.products[i].tacticsName = tacticsNameList;
						}
					}
					//设计分页
					$scope.productTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.productPages = [];
					var start = 1;
					if( $scope.productCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.productTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.productCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.productTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.productTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.productTotalPage || $scope.productTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.productCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.productPages.push(json);
						}
					}
					if($scope.productTotalPage <= 1) {
						$scope.productShowPrev = false;
						$scope.productShowNext = false;
					}
					else {
						$scope.productShowPrev = true;
						$scope.productShowNext = true;
					}
				}
				else {
					alert("获取数据失败，请重试");
				}
			})
		}
	}

	$scope.cspManageProductLoopNext = function() {
		if($scope.productCurrentPage === $scope.productTotalPage) {}
		else {
			window.scrollTo(0,0);
			var jsonproduct = {};
			$scope.productCurrentPage = $scope.productCurrentPage + 1;
			jsonproduct.page = $scope.productCurrentPage;
			jsonproduct.pageCount = $scope.pageCount;
			ManageService.cspGetAllProduct(jsonproduct,function(res) {
				if(res.result === "succeed") {
					$scope.products = res.data_product;
					for(var i = 0; i < res.data_product.length; i++) {
						if(res.data_product[i] !== "") {
							var tacticsNameList = "";
							var tacticsArr = res.data_product[i].tacticsList.split(",");
							for(var j = 0; j < tacticsArr.length; j++) {
								for(var k = 0; k < res.data_tactics.length; k++) {
									if(tacticsArr[j] == res.data_tactics[k].tsid) {
										if(tacticsNameList !== "") {
											tacticsNameList += " ， " + res.data_tactics[k].tsname;
										}
										else {
											tacticsNameList += res.data_tactics[k].tsname;
										}
									}
								}
							}
							$scope.products[i].tacticsName = tacticsNameList;
						}
					}
					//设计分页
					$scope.productTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.productPages = [];
					var start = 1;
					if( $scope.productCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.productTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.productCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.productTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.productTotalPage - $scope.itemCount + 1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.productTotalPage || $scope.productTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.productCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.productPages.push(json);
						}
					}
					if($scope.productTotalPage <= 1) {
						$scope.productShowPrev = false;
						$scope.productShowNext = false;
					}
					else {
						$scope.productShowPrev = true;
						$scope.productShowNext = true;
					}
				}
				else {
					alert("获取数据失败，请重试");
				}
			})
		}
	}

	$scope.cspManageProductLoopLast = function() {
		if($scope.productCurrentPage === $scope.productTotalPage) {}
		else {
			window.scrollTo(0,0);
			var jsonproduct = {};
			$scope.productCurrentPage = $scope.productTotalPage;
			jsonproduct.page = $scope.productCurrentPage;
			jsonproduct.pageCount = $scope.pageCount;
			ManageService.cspGetAllProduct(jsonproduct,function(res) {
				if(res.result === "succeed") {
					$scope.products = res.data_product;
					for(var i = 0; i < res.data_product.length; i++) {
						if(res.data_product[i] !== "") {
							var tacticsNameList = "";
							var tacticsArr = res.data_product[i].tacticsList.split(",");
							for(var j = 0; j < tacticsArr.length; j++) {
								for(var k = 0; k < res.data_tactics.length; k++) {
									if(tacticsArr[j] == res.data_tactics[k].tsid) {
										if(tacticsNameList !== "") {
											tacticsNameList += " ， " + res.data_tactics[k].tsname;
										}
										else {
											tacticsNameList += res.data_tactics[k].tsname;
										}
									}
								}
							}
							$scope.products[i].tacticsName = tacticsNameList;
						}
					}
					//设计分页
					$scope.productTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.productPages = [];
					var start = 1;
					if( $scope.productCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.productTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.productCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.productTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.productTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.productTotalPage || $scope.productTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.productCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.productPages.push(json);
						}
					}
					if($scope.productTotalPage <= 1) {
						$scope.productShowPrev = false;
						$scope.productShowNext = false;
					}
					else {
						$scope.productShowPrev = true;
						$scope.productShowNext = true;
					}
				}
				else {
					alert("获取数据失败，请重试");
				}
			})
		}
	}

	$scope.cspManageTacticsLoopToFirst = function() {
		if($scope.tacticsCurrentPage === 1){}
		else {
			window.scrollTo(0,0);
			var jsontactics = {};
			$scope.tacticsCurrentPage = 1;
			jsontactics.page = $scope.tacticsCurrentPage;
			jsontactics.pageCount = $scope.pageCount;
			ManageService.cspGetAllTactics(jsontactics,function(result) {
				if(result.result = "succeed") {
					$scope.tacticsList = result.data;
					var re1 = new RegExp("<.+?>","g");
					for( var j = 0; j < result.data.length; j++ ) {
						$scope.tacticsList[j].descriptText = result.data[j].tsdeschtml.replace(re1,'');
					}
					//设计分页
					$scope.tacticsTotalPage = Math.ceil(result.count/$scope.pageCount) ;
					$scope.tacticsPages = [];
					var start = 1;
					if( $scope.tacticsCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.tacticsTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.tacticsCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.tacticsTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.tacticsTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.tacticsTotalPage || $scope.tacticsTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.tacticsCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.tacticsPages.push(json);
						}
					}
					if($scope.tacticsTotalPage <= 1) {
						$scope.tacticsShowPrev = false;
						$scope.tacticsShowNext = false;
					}
					else {
						$scope.tacticsShowPrev = true;
						$scope.tacticsShowNext = true;
					}
				}
				else {
					alert("数据更新失败");
				}
			})
		}
	}

	$scope.cspManageTacticsLoopPrev = function() {
		if($scope.tacticsCurrentPage === 1){}
		else {
			window.scrollTo(0,0);
			var jsontactics = {};
			$scope.tacticsCurrentPage =  $scope.tacticsCurrentPage - 1;
			jsontactics.page = $scope.tacticsCurrentPage;
			jsontactics.pageCount = $scope.pageCount;
			ManageService.cspGetAllTactics(jsontactics,function(result) {
				if(result.result = "succeed") {
					$scope.tacticsList = result.data;
					var re1 = new RegExp("<.+?>","g");
					for( var j = 0; j < result.data.length; j++ ) {
						$scope.tacticsList[j].descriptText = result.data[j].tsdeschtml.replace(re1,'');
					}
					//设计分页
					$scope.tacticsTotalPage = Math.ceil(result.count/$scope.pageCount) ;
					$scope.tacticsPages = [];
					var start = 1;
					if( $scope.tacticsCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.tacticsTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.tacticsCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.tacticsTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.tacticsTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.tacticsTotalPage || $scope.tacticsTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.tacticsCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.tacticsPages.push(json);
						}
					}
					if($scope.tacticsTotalPage <= 1) {
						$scope.tacticsShowPrev = false;
						$scope.tacticsShowNext = false;
					}
					else {
						$scope.tacticsShowPrev = true;
						$scope.tacticsShowNext = true;
					}
				}
				else {
					alert("数据更新失败");
				}
			})
		}
	}

	$scope.cspManageTacticsLoopToPage = function(page) {
		if(page.select === true){}
		else {
			window.scrollTo(0,0);
			var jsontactics = {};
			$scope.tacticsCurrentPage = page.num;
			jsontactics.page = $scope.tacticsCurrentPage;
			jsontactics.pageCount = $scope.pageCount;
			ManageService.cspGetAllTactics(jsontactics,function(result) {
				if(result.result = "succeed") {
					$scope.tacticsList = result.data;
					var re1 = new RegExp("<.+?>","g");
					for( var j = 0; j < result.data.length; j++ ) {
						$scope.tacticsList[j].descriptText = result.data[j].tsdeschtml.replace(re1,'');
					}
					//设计分页
					$scope.tacticsTotalPage = Math.ceil(result.count/$scope.pageCount) ;
					$scope.tacticsPages = [];
					var start = 1;
					if( $scope.tacticsCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.tacticsTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.tacticsCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.tacticsTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.tacticsTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.tacticsTotalPage || $scope.tacticsTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.tacticsCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.tacticsPages.push(json);
						}
					}
					if($scope.tacticsTotalPage <= 1) {
						$scope.tacticsShowPrev = false;
						$scope.tacticsShowNext = false;
					}
					else {
						$scope.tacticsShowPrev = true;
						$scope.tacticsShowNext = true;
					}
				}
				else {
					alert("数据更新失败");
				}
			})
		}
	}

	$scope.cspManageTacticsLoopNext = function() {
		if($scope.tacticsCurrentPage === $scope.tacticsTotalPage){}
		else {
			window.scrollTo(0,0);
			var jsontactics = {};
			$scope.tacticsCurrentPage = $scope.tacticsCurrentPage + 1;
			jsontactics.page = $scope.tacticsCurrentPage;
			jsontactics.pageCount = $scope.pageCount;
			ManageService.cspGetAllTactics(jsontactics,function(result) {
				if(result.result = "succeed") {
					$scope.tacticsList = result.data;
					var re1 = new RegExp("<.+?>","g");
					for( var j = 0; j < result.data.length; j++ ) {
						$scope.tacticsList[j].descriptText = result.data[j].tsdeschtml.replace(re1,'');
					}
					//设计分页
					$scope.tacticsTotalPage = Math.ceil(result.count/$scope.pageCount) ;
					$scope.tacticsPages = [];
					var start = 1;
					if( $scope.tacticsCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.tacticsTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.tacticsCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.tacticsTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.tacticsTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.tacticsTotalPage || $scope.tacticsTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.tacticsCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.tacticsPages.push(json);
						}
					}
					if($scope.tacticsTotalPage <= 1) {
						$scope.tacticsShowPrev = false;
						$scope.tacticsShowNext = false;
					}
					else {
						$scope.tacticsShowPrev = true;
						$scope.tacticsShowNext = true;
					}
				}
				else {
					alert("数据更新失败");
				}
			})
		}
	}

	$scope.cspManageTacticsLoopLast = function() {
		if($scope.tacticsCurrentPage === $scope.tacticsTotalPage){}
		else {
			window.scrollTo(0,0);
			var jsontactics = {};
			$scope.tacticsCurrentPage = $scope.tacticsTotalPage;
			jsontactics.page = $scope.tacticsCurrentPage;
			jsontactics.pageCount = $scope.pageCount;
			ManageService.cspGetAllTactics(jsontactics,function(result) {
				if(result.result = "succeed") {
					$scope.tacticsList = result.data;
					var re1 = new RegExp("<.+?>","g");
					for( var j = 0; j < result.data.length; j++ ) {
						$scope.tacticsList[j].descriptText = result.data[j].tsdeschtml.replace(re1,'');
					}
					//设计分页
					$scope.tacticsTotalPage = Math.ceil(result.count/$scope.pageCount) ;
					$scope.tacticsPages = [];
					var start = 1;
					if( $scope.tacticsCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.tacticsTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.tacticsCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.tacticsTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.tacticsTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.tacticsTotalPage || $scope.tacticsTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.tacticsCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.tacticsPages.push(json);
						}
					}
					if($scope.tacticsTotalPage <= 1) {
						$scope.tacticsShowPrev = false;
						$scope.tacticsShowNext = false;
					}
					else {
						$scope.tacticsShowPrev = true;
						$scope.tacticsShowNext = true;
					}
				}
				else {
					alert("数据更新失败");
				}
			})
		}
	}

	$scope.cspManageUserLoopToFirst = function() {
		if($scope.userCurrentPage === 1) {}
		else {
			var jsonuser = {};
			jsonuser.kind = $scope.currentUserKind;
			$scope.userCurrentPage = 1;
			jsonuser.page = $scope.userCurrentPage;
			jsonuser.pageCount = $scope.pageCount;
			ManageService.cspManageGetAllUser(jsonuser,function(res) {
				if(res.result === "succeed") {
					$scope.users = res.data;
					for(var i = 0; i < res.data.length; i++) {
						if(res.data[i].au_stat == 0) {
							$scope.users[i].checkState = "未验证";
						}
						else {
							$scope.users[i].checkState = "已验证";
						}
						$scope.users[i].edit = false;
					}

					//设计分页
					$scope.userTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.userPages = [];
					var start = 1;
					if( $scope.userCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.userTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.userCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.userTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.userTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.userTotalPage || $scope.userTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.userCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.userPages.push(json);
						}
					}
					if($scope.userTotalPage <= 1) {
						$scope.userShowPrev = false;
						$scope.userShowNext = false;
					}
					else {
						$scope.userShowPrev = true;
						$scope.userShowNext = true;
					}
				}
				else {
					alert("数据库异常");
				}
			})
		}
	}

	$scope.cspManageUserLoopPrev = function() {
		if($scope.userCurrentPage === 1) {}
		else {
			var jsonuser = {};
			jsonuser.kind = $scope.currentUserKind;
			$scope.userCurrentPage = $scope.userCurrentPage -1;
			jsonuser.page = $scope.userCurrentPage;
			jsonuser.pageCount = $scope.pageCount;
			ManageService.cspManageGetAllUser(jsonuser,function(res) {
				if(res.result === "succeed") {
					$scope.users = res.data;
					for(var i = 0; i < res.data.length; i++) {
						if(res.data[i].au_stat == 0) {
							$scope.users[i].checkState = "未验证";
						}
						else {
							$scope.users[i].checkState = "已验证";
						}
						$scope.users[i].edit = false;
					}

					//设计分页
					$scope.userTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.userPages = [];
					var start = 1;
					if( $scope.userCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.userTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.userCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.userTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.userTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.userTotalPage || $scope.userTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.userCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.userPages.push(json);
						}
					}
					if($scope.userTotalPage <= 1) {
						$scope.userShowPrev = false;
						$scope.userShowNext = false;
					}
					else {
						$scope.userShowPrev = true;
						$scope.userShowNext = true;
					}
				}
				else {
					alert("数据库异常");
				}
			})
		}
	}

	$scope.cspManageUserLoopToPage = function(page) {
		console.log(page);
		if(page.select === true) {}
		else {
			var jsonuser = {};
			jsonuser.kind = $scope.currentUserKind;
			$scope.userCurrentPage = page.num;
			jsonuser.page = $scope.userCurrentPage;
			jsonuser.pageCount = $scope.pageCount;
			ManageService.cspManageGetAllUser(jsonuser,function(res) {
				if(res.result === "succeed") {
					$scope.users = res.data;
					for(var i = 0; i < res.data.length; i++) {
						if(res.data[i].au_stat == 0) {
							$scope.users[i].checkState = "未验证";
						}
						else {
							$scope.users[i].checkState = "已验证";
						}
						$scope.users[i].edit = false;
					}

					//设计分页
					$scope.userTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.userPages = [];
					var start = 1;
					if( $scope.userCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.userTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.userCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.userTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.userTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.userTotalPage || $scope.userTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.userCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.userPages.push(json);
						}
					}
					if($scope.userTotalPage <= 1) {
						$scope.userShowPrev = false;
						$scope.userShowNext = false;
					}
					else {
						$scope.userShowPrev = true;
						$scope.userShowNext = true;
					}
				}
				else {
					alert("数据库异常");
				}
			})
		}
	}

	$scope.cspManageUserLoopNext = function() {
		if($scope.userCurrentPage === $scope.userTotalPage) {}
		else {
			var jsonuser = {};
			jsonuser.kind = $scope.currentUserKind;
			$scope.userCurrentPage = $scope.userCurrentPage + 1;
			jsonuser.page = $scope.userCurrentPage;
			jsonuser.pageCount = $scope.pageCount;
			ManageService.cspManageGetAllUser(jsonuser,function(res) {
				if(res.result === "succeed") {
					$scope.users = res.data;
					for(var i = 0; i < res.data.length; i++) {
						if(res.data[i].au_stat == 0) {
							$scope.users[i].checkState = "未验证";
						}
						else {
							$scope.users[i].checkState = "已验证";
						}
						$scope.users[i].edit = false;
					}

					//设计分页
					$scope.userTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.userPages = [];
					var start = 1;
					if( $scope.userCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.userTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.userCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.userTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.userTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.userTotalPage || $scope.userTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.userCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.userPages.push(json);
						}
					}
					if($scope.userTotalPage <= 1) {
						$scope.userShowPrev = false;
						$scope.userShowNext = false;
					}
					else {
						$scope.userShowPrev = true;
						$scope.userShowNext = true;
					}
				}
				else {
					alert("数据库异常");
				}
			})
		}
	}

	$scope.cspManageUserLoopLast = function() {
		if($scope.userCurrentPage === $scope.userTotalPage) {}
		else {
			var jsonuser = {};
			jsonuser.kind = $scope.currentUserKind;
			$scope.userCurrentPage = $scope.userTotalPage;
			jsonuser.page = $scope.userCurrentPage;
			jsonuser.pageCount = $scope.pageCount;
			ManageService.cspManageGetAllUser(jsonuser,function(res) {
				if(res.result === "succeed") {
					$scope.users = res.data;
					for(var i = 0; i < res.data.length; i++) {
						if(res.data[i].au_stat == 0) {
							$scope.users[i].checkState = "未验证";
						}
						else {
							$scope.users[i].checkState = "已验证";
						}
						$scope.users[i].edit = false;
					}

					//设计分页
					$scope.userTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.userPages = [];
					var start = 1;
					if( $scope.userCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.userTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.userCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.userTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.userTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.userTotalPage || $scope.userTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.userCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.userPages.push(json);
						}
					}
					if($scope.userTotalPage <= 1) {
						$scope.userShowPrev = false;
						$scope.userShowNext = false;
					}
					else {
						$scope.userShowPrev = true;
						$scope.userShowNext = true;
					}
				}
				else {
					alert("数据库异常");
				}
			})
		}
	}

	$scope.cspManageNetLoopToFirst = function() {
		if($scope.netCurrentPage === 1) {}
		else {
			var json = {};
			json.proid = $scope.currentProduct.id;
			$scope.netCurrentPage = 1;
			json.page = $scope.netCurrentPage;
			json.pageCount = $scope.pageCount;
			ManageService.cspGetNetByProductId(json,function(res) {
				if(res.result === "succeed") {
					$scope.currentProduct.nets = res.data;
					$scope.currentProduct.checkall = false;
					for(var m = 0; m < $scope.currentProduct.nets.length; m++) {
						$scope.currentProduct.nets[m].edit = false;
						$scope.currentProduct.nets[m].checked = false;
					}
					if(res.data.length === 0) {
						$scope.currentProduct.loadExcel = true;
					}
					else {
						$scope.currentProduct.loadExcel = false;
					}
					//设计分页
					$scope.netTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.netPages = [];
					var start = 1;
					if( $scope.netCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.netTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.netCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.netTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.netTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.netTotalPage || $scope.netTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.netCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.netPages.push(json);
						}
					}
					if($scope.netTotalPage <= 1) {
						$scope.netShowPrev = false;
						$scope.netShowNext = false;
					}
					else {
						$scope.netShowPrev = true;
						$scope.netShowNext = true;
					}
					$scope.cspManageLoadPath = "tpls/managecenter/productinfo.html";
					$scope.cspManageState = 2;
				}
				else {
					alert("获取数据失败");
				}
			})
		}
	}

	$scope.cspManageNetLoopPrev = function() {
		if($scope.netCurrentPage === 1) {}
		else {
			var json = {};
			json.proid = $scope.currentProduct.id;
			$scope.netCurrentPage = $scope.netCurrentPage - 1;
			json.page = $scope.netCurrentPage;
			json.pageCount = $scope.pageCount;
			ManageService.cspGetNetByProductId(json,function(res) {
				if(res.result === "succeed") {
					$scope.currentProduct.nets = res.data;
					$scope.currentProduct.checkall = false;
					for(var m = 0; m < $scope.currentProduct.nets.length; m++) {
						$scope.currentProduct.nets[m].edit = false;
						$scope.currentProduct.nets[m].checked = false;
					}
					if(res.data.length === 0) {
						$scope.currentProduct.loadExcel = true;
					}
					else {
						$scope.currentProduct.loadExcel = false;
					}
					//设计分页
					$scope.netTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.netPages = [];
					var start = 1;
					if( $scope.netCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.netTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.netCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.netTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.netTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.netTotalPage || $scope.netTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.netCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.netPages.push(json);
						}
					}
					if($scope.netTotalPage <= 1) {
						$scope.netShowPrev = false;
						$scope.netShowNext = false;
					}
					else {
						$scope.netShowPrev = true;
						$scope.netShowNext = true;
					}
					$scope.cspManageLoadPath = "tpls/managecenter/productinfo.html";
					$scope.cspManageState = 2;
				}
				else {
					alert("获取数据失败");
				}
			})
		}
	}

	$scope.cspManageNetLoopToPage = function(page) {
		if(page.select === true) {}
		else {
			var json = {};
			json.proid = $scope.currentProduct.id;
			$scope.netCurrentPage = page.num;
			json.page = $scope.netCurrentPage;
			json.pageCount = $scope.pageCount;
			ManageService.cspGetNetByProductId(json,function(res) {
				if(res.result === "succeed") {
					$scope.currentProduct.nets = res.data;
					$scope.currentProduct.checkall = false;
					for(var m = 0; m < $scope.currentProduct.nets.length; m++) {
						$scope.currentProduct.nets[m].edit = false;
						$scope.currentProduct.nets[m].checked = false;
					}
					if(res.data.length === 0) {
						$scope.currentProduct.loadExcel = true;
					}
					else {
						$scope.currentProduct.loadExcel = false;
					}
					//设计分页
					$scope.netTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.netPages = [];
					var start = 1;
					if( $scope.netCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.netTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.netCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.netTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.netTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.netTotalPage || $scope.netTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.netCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.netPages.push(json);
						}
					}
					if($scope.netTotalPage <= 1) {
						$scope.netShowPrev = false;
						$scope.netShowNext = false;
					}
					else {
						$scope.netShowPrev = true;
						$scope.netShowNext = true;
					}
					$scope.cspManageLoadPath = "tpls/managecenter/productinfo.html";
					$scope.cspManageState = 2;
				}
				else {
					alert("获取数据失败");
				}
			})
		}
	}

	$scope.cspManageNetLoopNext = function() {
		if($scope.netCurrentPage === $scope.netTotalPage) {}
		else {
			var json = {};
			json.proid = $scope.currentProduct.id;
			$scope.netCurrentPage = $scope.netCurrentPage + 1;
			json.page = $scope.netCurrentPage;
			json.pageCount = $scope.pageCount;
			ManageService.cspGetNetByProductId(json,function(res) {
				if(res.result === "succeed") {
					$scope.currentProduct.nets = res.data;
					$scope.currentProduct.checkall = false;
					for(var m = 0; m < $scope.currentProduct.nets.length; m++) {
						$scope.currentProduct.nets[m].edit = false;
						$scope.currentProduct.nets[m].checked = false;
					}
					if(res.data.length === 0) {
						$scope.currentProduct.loadExcel = true;
					}
					else {
						$scope.currentProduct.loadExcel = false;
					}
					//设计分页
					$scope.netTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.netPages = [];
					var start = 1;
					if( $scope.netCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.netTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.netCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.netTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.netTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.netTotalPage || $scope.netTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.netCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.netPages.push(json);
						}
					}
					if($scope.netTotalPage <= 1) {
						$scope.netShowPrev = false;
						$scope.netShowNext = false;
					}
					else {
						$scope.netShowPrev = true;
						$scope.netShowNext = true;
					}
					$scope.cspManageLoadPath = "tpls/managecenter/productinfo.html";
					$scope.cspManageState = 2;
				}
				else {
					alert("获取数据失败");
				}
			})
		}
	}

	$scope.cspManageNetLoopLast = function() {
		if($scope.netCurrentPage === $scope.netTotalPage) {}
		else {
			var json = {};
			json.proid = $scope.currentProduct.id;
			$scope.netCurrentPage = $scope.netTotalPage;
			json.page = $scope.netCurrentPage;
			json.pageCount = $scope.pageCount;
			ManageService.cspGetNetByProductId(json,function(res) {
				if(res.result === "succeed") {
					$scope.currentProduct.nets = res.data;
					$scope.currentProduct.checkall = false;
					for(var m = 0; m < $scope.currentProduct.nets.length; m++) {
						$scope.currentProduct.nets[m].edit = false;
						$scope.currentProduct.nets[m].checked = false;
					}
					if(res.data.length === 0) {
						$scope.currentProduct.loadExcel = true;
					}
					else {
						$scope.currentProduct.loadExcel = false;
					}
					//设计分页
					$scope.netTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.netPages = [];
					var start = 1;
					if( $scope.netCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.netTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.netCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.netTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.netTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.netTotalPage || $scope.netTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.netCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.netPages.push(json);
						}
					}
					if($scope.netTotalPage <= 1) {
						$scope.netShowPrev = false;
						$scope.netShowNext = false;
					}
					else {
						$scope.netShowPrev = true;
						$scope.netShowNext = true;
					}
					$scope.cspManageLoadPath = "tpls/managecenter/productinfo.html";
					$scope.cspManageState = 2;
				}
				else {
					alert("获取数据失败");
				}
			})
		}
	}

	//模拟产品
	$scope.cspManageAddanalogClick = function() {
		$scope.currentanalogProduct.caption = "";
		$scope.currentanalogProduct.capError = false;
		$scope.currentanalogProduct.contentshtml = "";
		$scope.currentanalogProduct.conError = false;
		$scope.currentanalogProduct.tsid = "";
		$scope.currentanalogProduct.tsname = "";
		$scope.currentanalogProduct.tsidError = false;
		$scope.currentanalogProduct.tsidArray = [];
		$scope.currentanalogProduct.fundmanager = "";
		$scope.currentanalogProduct.funError = false;
		$scope.currentanalogProduct.piclink = "";
		$scope.currentanalogProduct.picError = false;
		$scope.currentanalogProduct.picErrorTip = "";
		$scope.currentanalogProduct.prostatus = "";
		$scope.currentanalogProduct.proError = false;
		$scope.currentanalogProduct.fileLoading = false;
		$scope.currentanalogProduct.edit = false;
		$scope.currentanalogProduct.addanalogNet = false;
		$scope.currentanalogProduct.importanalogNet = false;
		$scope.currentanalogProduct.selectanalogTactics = false;
		$scope.currentanalogProduct.seriesid = -1;
		$scope.currentanalogProduct.seridDefault = "请选择产品系列";
		$scope.currentanalogProduct.risklevelid = 0;
		$scope.currentanalogProduct.riskDefault = "请选择风险等级";
		$scope.currentanalogProduct.risError = false;
		$scope.currentanalogProduct.priority = 0;
		$scope.currentanalogProduct.addhome = false;
		$scope.currentanalogProduct.blackout_period = "";
		$scope.currentanalogProduct.bpError = false;
		$scope.currentanalogProduct.subscribe_point = "";
		$scope.currentanalogProduct.spError = false;
		$scope.currentanalogProduct.subscribe_rate = "";
		$scope.currentanalogProduct.srError = false;
		$scope.currentanalogProduct.manage_rate = "";
		$scope.currentanalogProduct.mrError = false;
		$scope.currentanalogProduct.redeem_rate = "";
		$scope.currentanalogProduct.rrError = false;
		$scope.currentanalogProduct.merit_pay = "";
		$scope.currentanalogProduct.mpError = false;
		ManageService.cspGetAllTactics({},function(res) {
			if(res.result === "succeed") {
				$scope.currentanalogProduct.tsidList = res.data;
				//获取系列数据
				ManageService.cspManageGetAllSeries({},function(gasres) {
					if(gasres.result == "succeed") {
						$scope.productSeries.splice(0,$scope.productSeries.length);
						$scope.productSeries = gasres.data;
						$scope.cspManageLoadPath = "tpls/managecenter/analogproductinfo.html";
						$scope.cspManageState = 6;
					}
					else {
						alert("获取数据失败");
					}
				})
			}
			else {
				alert("数据库异常");
			}
		})
	}
	//编辑产品
	$scope.cspManageEditanalogProduct = function(index) {
		$scope.currentanalogProduct.id = $scope.analogProducts[index].id;
		$scope.currentanalogProduct.caption = $scope.analogProducts[index].caption;
		$scope.currentanalogProduct.capError = false;
		$scope.currentanalogProduct.contents = $scope.analogProducts[index].contents;
		$scope.currentanalogProduct.conError = false;
		$scope.currentanalogProduct.tsid = $scope.analogProducts[index].analogTacticsList;
		$scope.currentanalogProduct.tsname = $scope.analogProducts[index].analogTacticsName;
		$scope.currentanalogProduct.tsidError = false;
		$scope.currentanalogProduct.tsidArray = [];
		$scope.currentanalogProduct.tsidList = [];
		$scope.currentanalogProduct.fundmanager = $scope.analogProducts[index].fundmanager;
		$scope.currentanalogProduct.funError = false;
		$scope.currentanalogProduct.piclink = $scope.analogProducts[index].piclink;
		$scope.currentanalogProduct.picError = false;
		$scope.currentanalogProduct.picErrorTip = "";
		$scope.currentanalogProduct.prostatus = $scope.analogProducts[index].prostatus;
		$scope.currentanalogProduct.proError = false;
		$scope.currentanalogProduct.fileLoading = false;
		$scope.currentanalogProduct.edit = true;
		$scope.currentanalogProduct.addanalogNet = false;
		$scope.currentanalogProduct.importanalogNet = false;
		$scope.currentanalogProduct.analogNets = [];
		$scope.currentanalogProduct.selectanalogTactics = false;
		$scope.currentanalogProduct.analogNetError = false;
		$scope.currentanalogProduct.seriesid = $scope.analogProducts[index].serid;
		if($scope.currentanalogProduct.seriesid == -1) {
			$scope.currentanalogProduct.seridDefault = "请选择产品系列";
		}
		else {
			$scope.currentanalogProduct.seridDefault = $scope.analogProducts[index].sername;
		}
		$scope.currentanalogProduct.serError = false;
		$scope.currentanalogProduct.priority = $scope.analogProducts[index].priority;
		$scope.currentanalogProduct.addhome = $scope.analogProducts[index].priority == 0 ? false : true;
		$scope.currentanalogProduct.risklevelid = $scope.analogProducts[index].risklevelid;
		$scope.currentanalogProduct.riskDefault = $scope.analogProducts[index].risklevelid == 0 ? "请选择风险等级" : $scope.products[index].rname;
		$scope.currentanalogProduct.risError = false;
		$scope.currentanalogProduct.blackout_period = $scope.analogProducts[index].blackout_period;
		$scope.currentanalogProduct.bpError = false;
		$scope.currentanalogProduct.subscribe_point = $scope.analogProducts[index].subscribe_point;
		$scope.currentanalogProduct.spError = false;
		$scope.currentanalogProduct.subscribe_rate = $scope.analogProducts[index].subscribe_rate * 100;
		$scope.currentanalogProduct.srError = false;
		$scope.currentanalogProduct.manage_rate = $scope.analogProducts[index].manage_rate * 100;
		$scope.currentanalogProduct.mrError = false;
		$scope.currentanalogProduct.redeem_rate = $scope.analogProducts[index].redeem_rate * 100;
		$scope.currentanalogProduct.rrError = false;
		$scope.currentanalogProduct.merit_pay = $scope.analogProducts[index].merit_pay * 100;
		$scope.currentanalogProduct.mpError = false;

		//定义期货数据
		$scope.currentanalogProduct.spotload = false;
		$scope.currentanalogProduct.showLoadSpot = true;
		$scope.currentanalogProduct.spotadd = false;
		$scope.currentanalogProduct.spotcheckall = false;
		//获取产品说明
		var json1 = {};
		json1.contents = $scope.analogProducts[index].contents;
		ManageService.cspManageGetanalogProductDes(json1,function(res1) {
			if(res1.result === "succeed") {
				$scope.currentanalogProduct.contentshtml = res1.data;
			}
			else {
				$scope.currentanalogProduct.contentshtml = "";
			}
			ManageService.cspGetAllTactics({},function(result) {
				if(result.result === "succeed") {
					var analogTacticsArr = $scope.currentanalogProduct.tsid.split(",");
					console.log($scope.currentanalogProduct.tsid,analogTacticsArr);
					$scope.currentanalogProduct.tsidList = result.data;
					for(var k = 0; k < result.data.length; k++) {
						for(var j = 0; j < analogTacticsArr.length; j++) {
							if(analogTacticsArr[j] == result.data[k].tsid) {
								//$scope.currentanalogProduct.tsidArray.push(res.data[k]);
								$scope.currentanalogProduct.tsidList[k].selected = true;
								break;
							}
						}
						if(j >= analogTacticsArr.length) {
							$scope.currentanalogProduct.tsidList[k].selected = false;
						}
					}
					//获取净值表
					var json = {};
					json.proid = $scope.analogProducts[index].id;
					$scope.analogNetCurrentPage = 1;
					json.page = $scope.analogNetCurrentPage;
					json.pageCount = $scope.pageCount;
					ManageService.cspGetanalogNetByanalogProductId(json,function(res) {
						if(res.result === "succeed") {
							$scope.currentanalogProduct.analogNets = res.data;
							$scope.currentanalogProduct.checkall = false;
							for(var m = 0; m < $scope.currentanalogProduct.analogNets.length; m++) {
								$scope.currentanalogProduct.analogNets[m].edit = false;
								$scope.currentanalogProduct.analogNets[m].checked = false;
							}
							if(res.data.length === 0) {
								$scope.currentanalogProduct.loadExcel = true;
							}
							else {
								$scope.currentanalogProduct.loadExcel = false;
							}
							//设计分页
							console.log(res.count);
							$scope.analogNetTotalPage = Math.ceil(res.count/$scope.pageCount) ;
							$scope.analogNetPages = [];
							var start = 1;
							if( $scope.analogNetCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.analogNetTotalPage <= $scope.itemCount) {
								start = 1;
							}
							else {
								start = $scope.analogNetCurrentPage - Math.ceil($scope.itemCount/2) +1;
								if($scope.analogNetTotalPage -  start + 1 < $scope.itemCount ) {
									start = $scope.analogNetTotalPage - $scope.itemCount +1;
								}
							}
							for( var r = start ; r < start + $scope.itemCount; r ++ ) {
								if(r > $scope.analogNetTotalPage || $scope.analogNetTotalPage <= 1) {
									break;
								}
								else {
									var json = {};
									json.num = r;
									if(r === $scope.analogNetCurrentPage) {
										json.select = true;
									}
									else {
										json.select = false;
									}
									$scope.analogNetPages.push(json);
								}
							}
							if($scope.analogNetTotalPage <= 1) {
								$scope.analogNetShowPrev = false;
								$scope.analogNetShowNext = false;
							}
							else {
								$scope.analogNetShowPrev = true;
								$scope.analogNetShowNext = true;
							}
							//获取数据持仓数据
							var jsonspot = {};
							jsonspot.proid = $scope.products[index].id;
							jsonspot.protype = $scope.productType;
							$scope.spotCurrentPage = 1;
							jsonspot.page = $scope.spotCurrentPage;
							jsonspot.pageCount = $scope.pageCount;
							ManageService.cspManageGetSpot(jsonspot,function(spotres) {
								if(spotres.result === "succeed") {
									$scope.currentanalogProduct.spots = spotres.data;
									$scope.currentanalogProduct.checkallspot = false;
									for(var m = 0; m < $scope.currentanalogProduct.spots.length; m++) {
										$scope.currentanalogProduct.spots[m].edit = false;
										$scope.currentanalogProduct.spots[m].checked = false;
									}
									if(spotres.data.length === 0) {
										$scope.currentanalogProduct.showLoadSpot = true;
									}
									else {
										$scope.currentanalogProduct.showLoadSpot = false;
									}
									//设计分页
									console.log(spotres.count);
									$scope.spotTotalPage = Math.ceil(spotres.count/$scope.pageCount) ;
									$scope.spotPages = [];
									var start = 1;
									if( $scope.spotCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.spotTotalPage <= $scope.itemCount) {
										start = 1;
									}
									else {
										start = $scope.spotCurrentPage - Math.ceil($scope.itemCount/2) +1;
										if($scope.spotTotalPage -  start + 1 < $scope.itemCount ) {
											start = $scope.spotTotalPage - $scope.itemCount +1;
										}
									}
									for( var r = start ; r < start + $scope.itemCount; r ++ ) {
										if(r > $scope.spotTotalPage || $scope.spotTotalPage <= 1) {
											break;
										}
										else {
											var json = {};
											json.num = r;
											if(r === $scope.spotCurrentPage) {
												json.select = true;
											}
											else {
												json.select = false;
											}
											$scope.spotPages.push(json);
										}
									}
									if($scope.spotTotalPage <= 1) {
										$scope.spotShowPrev = false;
										$scope.spotShowNext = false;
									}
									else {
										$scope.spotShowPrev = true;
										$scope.spotShowNext = true;
									}
									//获取期货数据
									var jsonfutures = {};
									jsonfutures.proid = $scope.analogProducts[index].id;
									jsonfutures.protype = $scope.productType;
									$scope.futuresCurrentPage = 1;
									jsonfutures.page = $scope.futuresCurrentPage;
									jsonfutures.pageCount = $scope.pageCount;
									ManageService.cspManageGetFutures(jsonfutures,function(futuresres) {
										if(futuresres.result === "succeed") {
											$scope.currentanalogProduct.futureses = futuresres.data;
											$scope.currentanalogProduct.checkallfutures = false;
											for(var m = 0; m < $scope.currentanalogProduct.futureses.length; m++) {
												$scope.currentanalogProduct.futureses[m].edit = false;
												$scope.currentanalogProduct.futureses[m].checked = false;
												$scope.currentanalogProduct.futureses[m].dealtypejson = {};
												if($scope.currentanalogProduct.futureses[m].dealtype == 0) {
													$scope.currentanalogProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[0];
												}
												else {
													$scope.currentanalogProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[1];
												}
											}
											if(futuresres.data.length === 0) {
												$scope.currentanalogProduct.showLoadFutures = true;
											}
											else {
												$scope.currentanalogProduct.showLoadFutures = false;
											}
											//设计分页
											console.log(futuresres.count);
											$scope.futuresTotalPage = Math.ceil(futuresres.count/$scope.pageCount) ;
											$scope.futuresPages = [];
											var start = 1;
											if( $scope.futuresCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.futuresTotalPage <= $scope.itemCount) {
												start = 1;
											}
											else {
												start = $scope.futuresCurrentPage - Math.ceil($scope.itemCount/2) +1;
												if($scope.futuresTotalPage -  start + 1 < $scope.itemCount ) {
													start = $scope.futuresTotalPage - $scope.itemCount +1;
												}
											}
											for( var r = start ; r < start + $scope.itemCount; r ++ ) {
												if(r > $scope.futuresTotalPage || $scope.futuresTotalPage <= 1) {
													break;
												}
												else {
													var json = {};
													json.num = r;
													if(r === $scope.futuresCurrentPage) {
														json.select = true;
													}
													else {
														json.select = false;
													}
													$scope.futuresPages.push(json);
												}
											}
											if($scope.futuresTotalPage <= 1) {
												$scope.futuresShowPrev = false;
												$scope.futuresShowNext = false;
											}
											else {
												$scope.futuresShowPrev = true;
												$scope.futuresShowNext = true;
											}
											//获取系列数据
											ManageService.cspManageGetAllSeries({},function(gasres) {
												if(gasres.result == "succeed") {
													$scope.productSeries.splice(0,$scope.productSeries.length);
													$scope.productSeries = gasres.data;
													$scope.cspManageLoadPath = "tpls/managecenter/analogproductinfo.html";
													$scope.cspManageState = 6;
												}
												else {
													alert("获取数据失败");
												}
											})
										}
										else {
											alert("获取数据失败");
										}
									})
								}
								else {
									alert("获取数据失败");
								}
							})
						}
						else {
							alert("获取数据失败");
						}
					})
				}
				else {
					alert("数据库异常");
				}
			})
		})
	}

	//删除产品
	$scope.cspManageDeleteanalogProduct = function(index) {
		console.log($scope.analogProducts[index].id);
		var json = {};
		json.id = $scope.analogProducts[index].id;
		json.contents = $scope.analogProducts[index].contents;
		ManageService.cspDeleteanalogProduct(json,function(result) {
			if(result.result === "succeed") {
				$scope.analogProducts.splice(index,1);
				var jsonanalogProduct  = {};
				jsonanalogProduct.page = $scope.analogProductCurrentPage;
				jsonanalogProduct.pageCount = $scope.pageCount;
				ManageService.cspGetAllanalogProduct(jsonanalogProduct,function(res) {
					if(res.result === "succeed") {
						$scope.analogProducts = res.data_analogProduct;
						for(var i = 0; i < res.data_analogProduct.length; i++) {
							if(res.data_analogProduct[i] !== "") {
								var analogTacticsNameList = "";
								var analogTacticsArr = res.data_analogProduct[i].analogTacticsList.split(",");
								for(var j = 0; j < analogTacticsArr.length; j++) {
									for(var k = 0; k < res.data_analogTactics.length; k++) {
										if(analogTacticsArr[j] == res.data_analogTactics[k].tsid) {
											if(analogTacticsNameList !== "") {
												analogTacticsNameList += "," + res.data_analogTactics[k].tsname;
											}
											else {
												analogTacticsNameList += res.data_analogTactics[k].tsname;
											}
										}
									}
								}
								$scope.analogProducts[i].analogTacticsName = analogTacticsNameList;
							}
						}
						//设计分页
						$scope.analogProductTotalPage = Math.ceil(res.count/$scope.pageCount) ;
						$scope.analogProductPages = [];
						var start = 1;
						if( $scope.analogProductCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.analogProductTotalPage <= $scope.itemCount) {
							start = 1;
						}
						else {
							start = $scope.analogProductCurrentPage - Math.ceil($scope.itemCount/2) +1;
							if($scope.analogProductTotalPage -  start + 1 < $scope.itemCount ) {
								start = $scope.analogProductTotalPage - $scope.itemCount +1;
							}
						}
						for( var r = start ; r < start + $scope.itemCount; r ++ ) {
							if(r > $scope.analogProductTotalPage || $scope.analogProductTotalPage <= 1) {
								break;
							}
							else {
								var json = {};
								json.num = r;
								if(r === $scope.analogProductCurrentPage) {
									json.select = true;
								}
								else {
									json.select = false;
								}
								$scope.analogProductPages.push(json);
							}
						}
						if($scope.analogProductTotalPage <= 1) {
							$scope.analogProductShowPrev = false;
							$scope.analogProductShowNext = false;
						}
						else {
							$scope.analogProductShowPrev = true;
							$scope.analogProductShowNext = true;
						}
					}
					else {
						alert("获取数据失败，请重试");
					}
				})
			}
			else {
				alert("数据库异常");
			}
		})
	}

	$scope.cspManageAddanalogCancel = function() {
		//返回产品管理界面
		$scope.cspManageLoadPath = "tpls/managecenter/analogproductmanage.html";
		$scope.cspManageState = 5;
	}

	$scope.cspManageAddanalogSure = function() {
		$scope.cspManageClearProductErrorTips(2);
		var reg = /^(([1-9][0-9]{0,13})|0)(.([0-9]{0,2}))?$/;
		var error = false;
		if($scope.currentanalogProduct.caption === "") {
			error = true;
			$scope.currentanalogProduct.capError = true;
		}
		if($scope.currentanalogProduct.contentshtml === "") {
			error = true;
			$scope.currentanalogProduct.conError = true;
		}
		if($scope.currentanalogProduct.fundmanager === "") {
			error = true;
			$scope.currentanalogProduct.funError = true;
		}
		if($scope.currentanalogProduct.prostatus === "") {
			error = true;
			$scope.currentanalogProduct.proError = true;
		}
		$scope.currentanalogProduct.tsidArray = [];
		for(var iTl = 0; iTl < $scope.currentanalogProduct.tsidList.length; iTl ++) {
			if($scope.currentanalogProduct.tsidList[iTl].selected === true) {
				$scope.currentanalogProduct.tsidArray.push($scope.currentanalogProduct.tsidList[iTl]);
			}
		}
		if($scope.currentanalogProduct.tsidArray.length === 0) {
			error = true;
			$scope.currentanalogProduct.tsidError = true;
		}
		if($scope.currentanalogProduct.seriesid == -1) {
			error = true;
			$scope.currentanalogProduct.serError = true;
		}
		if($scope.currentanalogProduct.risklevelid == 0) {
			error = true;
			$scope.currentanalogProduct.risError = true;
		}
		if($scope.currentanalogProduct.blackout_period == "") {
			error = true;
			$scope.currentanalogProduct.bpError = true;
		}
		if(!reg.test($scope.currentanalogProduct.subscribe_point)) {
			error = true;
			$scope.currentanalogProduct.spError = true;
		}
		if(!reg.test($scope.currentanalogProduct.subscribe_rate)) {
			error = true;
			$scope.currentanalogProduct.srError = true;
		}
		if(!reg.test($scope.currentanalogProduct.manage_rate)) {
			error = true;
			$scope.currentanalogProduct.mrError = true;
		}
		if(!reg.test($scope.currentanalogProduct.redeem_rate)) {
			error = true;
			$scope.currentanalogProduct.rrError = true;
		}
		if(!reg.test($scope.currentanalogProduct.merit_pay)) {
			error = true;
			$scope.currentanalogProduct.mpError = true;
		}
		if(error === false) {
			//提交到后台
			$scope.currentanalogProduct.tsid = "";
			for(var i=0; i< $scope.currentanalogProduct.tsidArray.length; i ++) {
				if(i===0) {
					$scope.currentanalogProduct.tsid += $scope.currentanalogProduct.tsidArray[i].tsid;
				}
				else {
					$scope.currentanalogProduct.tsid += "," + $scope.currentanalogProduct.tsidArray[i].tsid;
				}
			}
			if($scope.currentanalogProduct.edit === false) {
				//获取添加的priority
				if($scope.currentanalogProduct.addhome == true) {
					var key = 0;
					for(key = 0; key < 3; key++) {
						if($scope.homeAnalogProducts[key].proid == -1) {
							break;
						}
					}
					$scope.currentanalogProduct.priority = $scope.homeAnalogProducts[key].priority;
					$scope.currentanalogProduct.toaddhome = 1;
				}
				else {
					$scope.currentanalogProduct.toaddhome = 0;
				}
				ManageService.cspAddanalogProduct($scope.currentanalogProduct,function(result) {
					if(result.result === "succeed") {
						$scope.cspManageLoadPath = "tpls/managecenter/analogProductManage.html";
						$scope.cspManageState = 5;
					}
					else {
						alert("数据库异常");
					}
				})
			}
			else {
				if($scope.currentanalogProduct.addhome == true && $scope.currentanalogProduct.priority == 0) {
					var key = 0;
					for(key = 0; key < 3; key++) {
						if($scope.homeAnalogProducts[key].proid == -1) {
							break;
						}
					}
					$scope.currentanalogProduct.priority = $scope.homeAnalogProducts[key].priority;
					$scope.currentanalogProduct.toaddhome = 1;
				}
				else if($scope.currentanalogProduct.addhome == false && $scope.currentanalogProduct.priority != 0) {
					$scope.currentanalogProduct.toaddhome = 2;
				}
				else {
					$scope.currentanalogProduct.toaddhome = 0;
				}
				console.log("sdjlfjsdlfjl",$scope.currentanalogProduct,$scope.currentanalogProduct.toaddhome);
				ManageService.cspUpdateanalogProduct($scope.currentanalogProduct,function(result) {
					if(result.result === "succeed") {
						$scope.cspManageLoadPath = "tpls/managecenter/analogProductManage.html";
						$scope.cspManageState = 5;
					}
					else {
						alert("数据库异常");
					}
				})
			}
		}
		else {
			window.scrollTo(0,0);
		}
	}

	$scope.cspManageAddanalogTactics = function() {
		$scope.currentanalogTactics.name = "";
		$scope.currentanalogTactics.des= "";
		$scope.currentanalogTactics.nameError = false;
		$scope.currentanalogTactics.desError = false;
		$scope.currentanalogTactics.edit = false;
		$scope.cspManageLoadPath = "tpls/managecenter/analogtacticsinfo.html";
		$scope.cspManageState = 8;
	}
	$scope.cspManageEditanalogTactics = function(index) {
		$scope.currentanalogTactics.tsid = $scope.analogTacticsList[index].tsid;
		$scope.currentanalogTactics.title = "编辑策略";
		$scope.currentanalogTactics.name = $scope.analogTacticsList[index].tsname;
		$scope.currentanalogTactics.des = $scope.analogTacticsList[index].tsdesc;
		$scope.currentanalogTactics.nameError = false;
		$scope.currentanalogTactics.desError = false;
		$scope.currentanalogTactics.edit = true;
		$scope.currentanalogTactics.index = index;
		$scope.cspManageLoadPath = "tpls/managecenter/analogtacticsinfo.html";
		$scope.cspManageState = 8;
	}

	$scope.cspManageanalogTacticsAddCancel = function() {
		$scope.cspManageLoadPath = "tpls/managecenter/analogtacticsmanage.html";
		$scope.cspManageState = 7;
	}

	$scope.cspManageTscticsNameAccept = function() {
		$scope.currentanalogTactics.nameError = false;
	}

	$scope.cspManageTscticsDesAccept = function() {
		$scope.currentanalogTactics.desError = false;
	}

	$scope.cspManageanalogTacticsAddCommit = function() {
		var error = false;
		if($scope.currentanalogTactics.name === "") {
			$scope.currentanalogTactics.nameError = true;
			$scope.currentanalogTactics.nameTips = "策略名称不能为空";
			error = true;
		}
		if($scope.currentanalogTactics.des === "") {
			$scope.currentanalogTactics.desError = true;
			$scope.currentanalogTactics.desTips = "策略名称不能为空";
			error = true;
		}
		if(error === false) {
			if($scope.currentanalogTactics.edit === false) {
				//写入数据库
				var json = {};
				json.analogTacticsName = $scope.currentanalogTactics.name;
				json.analogTacticsDes = $scope.currentanalogTactics.des;
				ManageService.cspAddanalogTactics(json,function(res) {
					if(res.result === "succeed") {
						$scope.cspManageLoadPath = "tpls/managecenter/analogtacticsmanage.html";
						$scope.cspManageState = 7;
						ManageService.cspGetAllanalogTactics({},function(result) {
							if(result.result = "succeed") {
								$scope.analogTacticsList = result.data;
							}
							else {
								alert("数据更新失败");
							}
						})
					}
					else {
						alert("数据库异常");
					}
				})
			}
			else {
				//更新数据库
				var updatejson = {};
				updatejson.tsid = $scope.currentanalogTactics.tsid;
				updatejson.tsname = $scope.currentanalogTactics.name;
				updatejson.tsdesc = $scope.currentanalogTactics.des;
				ManageService.cspUpdateanalogTactics(updatejson,function(res) {
					if(res.result === "succeed") {
						$scope.cspManageLoadPath = "tpls/managecenter/analogtacticsmanage.html";
						$scope.cspManageState = 7;
						$scope.analogTacticsList[$scope.currentanalogTactics.index] = updatejson;
						ManageService.cspGetAllanalogTactics({},function(result) {
							if(result.result = "succeed") {
								$scope.analogTacticsList = result.data;
							}
							else {
								alert("数据更新失败");
							}
						})
					}
					else {
						alert("数据库异常");
					}
				})
			}
		}
	}

	$scope.cspManageDeleteanalogTactics = function(index) {
		console.log($scope.analogTacticsList[index]);
		var json = {};
		json.tsid = $scope.analogTacticsList[index].tsid;
		ManageService.cspDeleteanalogTactics(json,function(res) {
			if(res.result === "succeed") {
				$scope.analogTacticsList.splice(index,1);
				ManageService.cspGetAllanalogTactics({},function(result) {
					if(result.result = "succeed") {
						$scope.analogTacticsList = result.data;
					}
					else {
						alert("数据更新失败");
					}
				})
			}
			else {
				alert("数据库异常");
			}
		})
	}
	//删除产品
	$scope.cspManageDeleteanalogProduct = function(index) {
		console.log($scope.analogProducts[index].id);
		var json = {};
		json.id = $scope.analogProducts[index].id;
		json.contents = $scope.analogProducts[index].contents;
		ManageService.cspDeleteanalogProduct(json,function(result) {
			if(result.result === "succeed") {
				$scope.analogProducts.splice(index,1);
				var jsonanalogProduct  = {};
				jsonanalogProduct.page = $scope.analogProductCurrentPage;
				jsonanalogProduct.pageCount = $scope.pageCount;
				ManageService.cspGetAllanalogProduct(jsonanalogProduct,function(res) {
					if(res.result === "succeed") {
						$scope.analogProducts = res.data_analogProduct;
						for(var i = 0; i < res.data_analogProduct.length; i++) {
							if(res.data_analogProduct[i] !== "") {
								var analogTacticsNameList = "";
								var analogTacticsArr = res.data_analogProduct[i].analogTacticsList.split(",");
								for(var j = 0; j < analogTacticsArr.length; j++) {
									for(var k = 0; k < res.data_analogTactics.length; k++) {
										if(analogTacticsArr[j] == res.data_analogTactics[k].tsid) {
											if(analogTacticsNameList !== "") {
												analogTacticsNameList += "," + res.data_analogTactics[k].tsname;
											}
											else {
												analogTacticsNameList += res.data_analogTactics[k].tsname;
											}
										}
									}
								}
								$scope.analogProducts[i].analogTacticsName = analogTacticsNameList;
							}
						}
						//设计分页
						$scope.analogProductTotalPage = Math.ceil(res.count/$scope.pageCount) ;
						$scope.analogProductPages = [];
						var start = 1;
						if( $scope.analogProductCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.analogProductTotalPage <= $scope.itemCount) {
							start = 1;
						}
						else {
							start = $scope.analogProductCurrentPage - Math.ceil($scope.itemCount/2) +1;
							if($scope.analogProductTotalPage -  start + 1 < $scope.itemCount ) {
								start = $scope.analogProductTotalPage - $scope.itemCount +1;
							}
						}
						for( var r = start ; r < start + $scope.itemCount; r ++ ) {
							if(r > $scope.analogProductTotalPage || $scope.analogProductTotalPage <= 1) {
								break;
							}
							else {
								var json = {};
								json.num = r;
								if(r === $scope.analogProductCurrentPage) {
									json.select = true;
								}
								else {
									json.select = false;
								}
								$scope.analogProductPages.push(json);
							}
						}
						if($scope.analogProductTotalPage <= 1) {
							$scope.analogProductShowPrev = false;
							$scope.analogProductShowNext = false;
						}
						else {
							$scope.analogProductShowPrev = true;
							$scope.analogProductShowNext = true;
						}
					}
					else {
						alert("获取数据失败，请重试");
					}
				})
			}
			else {
				alert("数据库异常");
			}
		})
	}
	//选择图片
	$scope.cspManageanalogProductAddImag = function() {
		$scope.currentanalogProduct.picError = false;
		document.getElementById('cspManageanalogProductFile').click();
	}
	//删除掉图片
	$scope.cspManageanalogProductDeletePic = function() {

		if($scope.currentanalogProduct.piclink === "") {}
		else {
			//删除图片
			var json = {};
			json.filepath = $scope.currentanalogProduct.piclink;
			$scope.currentanalogProduct.fileLoading = true;
			ManageService.cspManageDeleteFile(json,function(res) {
				if(res.result === "succeed") {
					$scope.currentanalogProduct.piclink = "";
					$scope.currentanalogProduct.fileLoading = false;
				}
				else {
					$scope.currentanalogProduct.fileLoading = false;
	                $scope.currentanalogProduct.picError = true;
					$scope.currentanalogProduct.picErrorTip = "文件删除失败";
				}
			})
		}
	}
	//上传图片
	$scope.cspManageanalogProductUploadPic = function() {
		//上传图片
		$scope.currentanalogProduct.fileLoading = true;
		var fd = new FormData();
        var file = document.getElementById('cspManageanalogProductFile').files[0];
        fd.append('file', file);
        ManageService.cspManageUploadFile(fd,function(res) {
            if(res.result === "succeed") {
                $scope.currentanalogProduct.piclink = res.piclink;
                $scope.currentanalogProduct.fileLoading = false;
            }
            else {
                $scope.currentanalogProduct.fileLoading = false;
                $scope.currentanalogProduct.picError = true;
				$scope.currentanalogProduct.picErrorTip = "文件上传失败";
            }
        })
	}
	//图片格式错误
	$scope.cspManageanalogProductErrorPic = function() {
		$scope.currentanalogProduct.picError = true;
		$scope.currentanalogProduct.picErrorTip = "仅支持jpg/png/bmp格式";
	}
	$scope.cspManageanalogProductCaptionChange = function() {
		$scope.currentanalogProduct.capError = false;
	}
	$scope.cspManageanalogProductTsnameChange = function() {
		$scope.currentanalogProduct.tsidError = false;
	}
	$scope.cspManageanalogProductFundmanagerChange = function() {
		$scope.currentanalogProduct.funError = false;
	}
	$scope.cspManageanalogProductProstatusChange = function() {
		$scope.currentanalogProduct.proError = false;
	}
	$scope.cspManageanalogProductcontentshtmlChange = function() {
		$scope.currentanalogProduct.conError = false;
	}

	$scope.cspManageAddSingleanalogData = function() {
		//添加单条数据
		$scope.currentanalogProduct.addSingleData = {};
		$scope.currentanalogProduct.addanalogNet = true;
		$scope.currentanalogProduct.importanalogNet = false;
		var myDate = new Date();
		$scope.currentanalogProduct.addSingleData.date = myDate.toLocaleDateString().replace(/\//g,'-');
		$scope.currentanalogProduct.addSingleData.analogNet = "";
		$scope.currentanalogProduct.addSingleData.totalanalogNet = "";
		$scope.currentanalogProduct.addSingleData.accrate = "";
		$scope.currentanalogProduct.addSingleData.yearrate = "";
		$scope.currentanalogProduct.addSingleData.edit = false;
		$scope.currentanalogProduct.addSingleData.analogNetError = false;
		$scope.currentanalogProduct.addSingleData.tolError = false;
		$scope.currentanalogProduct.addSingleData.accError = false;
		$scope.currentanalogProduct.addSingleData.yearError = false;
		$scope.currentanalogProduct.addSingleData.dateError = false;
	}
	//取消添加单条数据
	$scope.cspManageAddanalogNetDataCancel = function() {
		$scope.currentanalogProduct.addanalogNet = false;
	}
	$scope.cspManageAddanalogNetDataSure = function() {
		var error = false;
		//验证浮点数
		var reg = /^\d+(\.\d+)?$/;
		//验证日期
		var reg1 = /^(\d{4})-(\d{1,2})-(\d{1,2})$/;
		if(!($scope.currentanalogProduct.addSingleData.analogNet !== "" && reg.test($scope.currentanalogProduct.addSingleData.analogNet)) ) {
			error = true;
			$scope.currentanalogProduct.addSingleData.analogNetError = true;
		}
		if(!($scope.currentanalogProduct.addSingleData.totalanalogNet !== "" && reg.test($scope.currentanalogProduct.addSingleData.totalanalogNet)) ) {
			error = true;
			$scope.currentanalogProduct.addSingleData.tolError = true;
		}
		if(!($scope.currentanalogProduct.addSingleData.accrate !== "" && reg.test($scope.currentanalogProduct.addSingleData.accrate)) ) {
			error = true;
			$scope.currentanalogProduct.addSingleData.accError = true;
		}
		if(!($scope.currentanalogProduct.addSingleData.yearrate !== "" && reg.test($scope.currentanalogProduct.addSingleData.yearrate)) ) {
			error = true;
			$scope.currentanalogProduct.addSingleData.yearError = true;
		}
		if(!($scope.currentanalogProduct.addSingleData.date !== "" && reg1.test($scope.currentanalogProduct.addSingleData.date))) {
			error = true;
			$scope.currentanalogProduct.addSingleData.dateError = true;
		}
		if(error === false) {
			//检查是否重复
			var jsontemp = {};
			jsontemp.date = $scope.currentanalogProduct.addSingleData.date;
			jsontemp.proid = $scope.currentanalogProduct.id;
			ManageService.cspManageCheckanalogNetExist(jsontemp,function(result) {
				if(result.result === "succeed") {
					if(result.exist === true) {
						$scope.currentanalogProduct.addSingleData.dateError = true;
					}
					else {
						//提交到服务器
						var json = {};
						json.analogNet = $scope.currentanalogProduct.addSingleData.analogNet;
						json.totalanalogNet = $scope.currentanalogProduct.addSingleData.totalanalogNet;
						json.accrate = $scope.currentanalogProduct.addSingleData.accrate;
						json.yearrate = $scope.currentanalogProduct.addSingleData.yearrate;
						json.date = $scope.currentanalogProduct.addSingleData.date;
						json.proid = $scope.currentanalogProduct.id;
						ManageService.cspAddSingleanalogNet(json,function(res) {
							if(res.result === "succeed") {
								$scope.currentanalogProduct.addanalogNet = false;
								var json1 = {};
								json1.proid = $scope.currentanalogProduct.id;
								$scope.analogNetCurrentPage = 1;
								json1.page = $scope.analogNetCurrentPage;
								json1.pageCount = $scope.pageCount;
								ManageService.cspGetanalogNetByanalogProductId(json1,function(result) {
									if(result.result === "succeed") {
										$scope.currentanalogProduct.analogNets = result.data;
										$scope.currentanalogProduct.checkall = false;
										for(var m = 0; m < $scope.currentanalogProduct.analogNets.length; m++) {
											$scope.currentanalogProduct.analogNets[m].edit = false;
											$scope.currentanalogProduct.analogNets[m].checked = false;
										}
										if(result.data.length === 0) {
											$scope.currentanalogProduct.loadExcel = true;
										}
										else {
											$scope.currentanalogProduct.loadExcel = false;
										}
										//设计分页
										$scope.analogNetTotalPage = Math.ceil(result.count/$scope.pageCount) ;
										$scope.analogNetPages = [];
										var start = 1;
										if( $scope.analogNetCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.analogNetTotalPage <= $scope.itemCount) {
											start = 1;
										}
										else {
											start = $scope.analogNetCurrentPage - Math.ceil($scope.itemCount/2) +1;
											if($scope.analogNetTotalPage -  start + 1 < $scope.itemCount ) {
												start = $scope.analogNetTotalPage - $scope.itemCount +1;
											}
										}
										for( var r = start ; r < start + $scope.itemCount; r ++ ) {
											if(r > $scope.analogNetTotalPage || $scope.analogNetTotalPage <= 1) {
												break;
											}
											else {
												var json = {};
												json.num = r;
												if(r === $scope.analogNetCurrentPage) {
													json.select = true;
												}
												else {
													json.select = false;
												}
												$scope.analogNetPages.push(json);
											}
										}
										if($scope.analogNetTotalPage <= 1) {
											$scope.analogNetShowPrev = false;
											$scope.analogNetShowNext = false;
										}
										else {
											$scope.analogNetShowPrev = true;
											$scope.analogNetShowNext = true;
										}
									}
									else {
										alert("获取数据失败");
									}
								})
							}
							else {
								alert("数据库异常");
							}
						})
					}
				}
				else {
					alert("数据库异常");
				}
			})
		}
	}
	$scope.cspManageHideanalogNetError = function() {
		if($scope.currentanalogProduct.addSingleData.analogNet !== "") {
			$scope.currentanalogProduct.addSingleData.analogNetError = false;
		}
		if($scope.currentanalogProduct.addSingleData.totalanalogNet !== "") {
			$scope.currentanalogProduct.addSingleData.tolError = false;
		}
		if($scope.currentanalogProduct.addSingleData.accrate !== "") {
			$scope.currentanalogProduct.addSingleData.accError = false;
		}
		if($scope.currentanalogProduct.addSingleData.yearrate !== "") {
			$scope.currentanalogProduct.addSingleData.yearError = false;
		}
		if($scope.currentanalogProduct.addSingleData.date !== "") {
			$scope.currentanalogProduct.addSingleData.dateError = false;
		}
	}
	$scope.cspManageEditanalogNetData = function(index) {
		//编辑净值数据
		$scope.currentanalogProduct.analogNets[index].editanalogNet = $scope.currentanalogProduct.analogNets[index].net;
		$scope.currentanalogProduct.analogNets[index].editTotalanalogNet = $scope.currentanalogProduct.analogNets[index].totalnet;
		$scope.currentanalogProduct.analogNets[index].editAccrate = $scope.currentanalogProduct.analogNets[index].accrate;
		$scope.currentanalogProduct.analogNets[index].editYearrate = $scope.currentanalogProduct.analogNets[index].yearrate;
		$scope.currentanalogProduct.analogNets[index].edit = true;
	}
	//从数据库中删除净值数据
	$scope.cspManageDeleteanalogNetData = function(index) {
		var json = {};
		json.ID = $scope.currentanalogProduct.analogNets[index].ID;
		ManageService.cspDeleteSingleanalogNet(json,function(res) {
			if(res.result === "succeed") {
				$scope.currentanalogProduct.analogNets.splice(index,1);
				var rejson = {};
				rejson.proid = $scope.currentanalogProduct.id;
				$scope.analogNetCurrentPage = 1;
				rejson.page = $scope.analogNetCurrentPage;
				rejson.pageCount = $scope.pageCount;
				ManageService.cspGetanalogNetByanalogProductId(rejson,function(analogNetresult) {
					if(analogNetresult.result === "succeed") {
						$scope.currentanalogProduct.analogNets = analogNetresult.data;
						$scope.currentanalogProduct.checkall = false;
						for(var m = 0; m < $scope.currentanalogProduct.analogNets.length; m++) {
							$scope.currentanalogProduct.analogNets[m].edit = false;
							$scope.currentanalogProduct.analogNets[m].checked = false;
						}
						if(analogNetresult.data.length === 0) {
							$scope.currentanalogProduct.loadExcel = true;
						}
						else {
							$scope.currentanalogProduct.loadExcel = false;
						}
						//设计分页
						$scope.analogNetTotalPage = Math.ceil(analogNetresult.count/$scope.pageCount) ;
						$scope.analogNetPages = [];
						var start = 1;
						if( $scope.analogNetCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.analogNetTotalPage <= $scope.itemCount) {
							start = 1;
						}
						else {
							start = $scope.analogNetCurrentPage - Math.ceil($scope.itemCount/2) +1;
							if($scope.analogNetTotalPage -  start + 1 < $scope.itemCount ) {
								start = $scope.analogNetTotalPage - $scope.itemCount +1;
							}
						}
						for( var r = start ; r < start + $scope.itemCount; r ++ ) {
							if(r > $scope.analogNetTotalPage || $scope.analogNetTotalPage <= 1) {
								break;
							}
							else {
								var json = {};
								json.num = r;
								if(r === $scope.analogNetCurrentPage) {
									json.select = true;
								}
								else {
									json.select = false;
								}
								$scope.analogNetPages.push(json);
							}
						}
						if($scope.analogNetTotalPage <= 1) {
							$scope.analogNetShowPrev = false;
							$scope.analogNetShowNext = false;
						}
						else {
							$scope.analogNetShowPrev = true;
							$scope.analogNetShowNext = true;
						}
					}
					else {
						alert("刷新数据失败");
					}
				})
			}
			else {
				alert("数据库异常");
			}
		})

	}

	//批量导入
	$scope.importanalogExcel = function() {
		//初始化导入数据
		$scope.currentanalogProduct.addanalogNet = false;
		$scope.currentanalogProduct.importanalogNet = true;

		$scope.currentanalogProduct.loaddata = {};
		$scope.currentanalogProduct.loaddata.loading = false;
		$scope.currentanalogProduct.loaddata.fileRight = false;
		$scope.currentanalogProduct.loaddata.fileError = false;
		$scope.currentanalogProduct.loaddata.errorTip = "";
		$scope.currentanalogProduct.loaddata.analogNets = [];

		console.log("$scope.currentanalogProduct.loaddata.fileError",$scope.currentanalogProduct.loaddata.fileError);

		$scope.timePromise = undefined;
		var second = 1;
		$scope.timePromise = $interval(function(){
			if(second<=0){
			  $interval.cancel($scope.timePromise);
			  $scope.timePromise = undefined;
			  var height = document.getElementById('csp_manage_analogProduct_import_analogNet_div').offsetTop;
			  window.scrollTo(0,height - 300);
			}else{
			  second--;
			}
		},1,1000);
	}
	//导入数据选择文件
	$scope.cspManageImportanalogDataSelectFile = function() {
		console.log("$scope.currentanalogProduct.loaddata.fileError1",$scope.currentanalogProduct.loaddata.fileError);
		$scope.currentanalogProduct.loaddata.fileError = false;
		$scope.currentanalogProduct.loaddata.errorTip = "";
		document.getElementById('csp_manage_import_file_load_form').reset();
		document.getElementById('csp_manage_import_file_load_input').click();
	}
	//上传文件
	$scope.cspManageImportanalogLoadFileReady = function() {
		$scope.currentanalogProduct.loaddata.loading = true;
		var fd = new FormData();
        var file = document.getElementById('csp_manage_import_file_load_input').files[0];
        fd.append('file', file);
		ManageService.cspManageImportanalogLoadFile(fd,function(res) {
			$scope.currentanalogProduct.loaddata.loading = false;
			if(res.result === "succeed") {
				if(res.file === true) {
					$scope.currentanalogProduct.loaddata.fileRight = true;
					for(var i = 0; i < res.data.length; i ++) {
						$scope.currentanalogProduct.loaddata.analogNets.push(res.data[i]);
					}
					console.log($scope.currentanalogProduct.loaddata.analogNets);
				}
				else {
					$scope.currentanalogProduct.loaddata.fileError = true;
					$scope.currentanalogProduct.loaddata.errorTip = "文件内容格式错误";
				}
			}
			else {
				$scope.currentanalogProduct.loaddata.fileError = true;
				$scope.currentanalogProduct.loaddata.errorTip = "文件上传失败";
			}
		})
	}
	$scope.cspManageImportanalogFileError = function() {
		$scope.currentanalogProduct.loaddata.fileError = true;
		$scope.currentanalogProduct.loaddata.errorTip = "请选择csv/xls/xlsx格式的文件";
	}
	$scope.cspManageImportanalogClearTable = function() {
		$scope.currentanalogProduct.loaddata.fileRight = false;
		$scope.currentanalogProduct.loaddata.analogNets = [];
	}
	$scope.cspManageImportanalogLoadTable = function() {
		//检查导入的数据
		//验证浮点数
		var reg = /^\d+(\.\d+)?$/;
		//验证日期
		var reg1 = /^(\d{4})-(\d{1,2})-(\d{1,2})$/;
		var i = 0;
		var dateArr = [];
		var err = false;
		for(i = 0; i < $scope.currentanalogProduct.loaddata.analogNets.length ; i++) {
			if($scope.currentanalogProduct.loaddata.analogNets[i].date === undefined || !(reg1.test($scope.currentanalogProduct.loaddata.analogNets[i].date))) {
				err = true;
				break;
			}
			else if($scope.currentanalogProduct.loaddata.analogNets[i].analogNet === undefined || !(reg.test($scope.currentanalogProduct.loaddata.analogNets[i].analogNet))) {
				err = true;
				break;
			}
			else if($scope.currentanalogProduct.loaddata.analogNets[i].totalanalogNet === undefined || !(reg.test($scope.currentanalogProduct.loaddata.analogNets[i].totalanalogNet))) {
				err = true;
				break;
			}
			else if($scope.currentanalogProduct.loaddata.analogNets[i].accrate === undefined || !(reg.test($scope.currentanalogProduct.loaddata.analogNets[i].accrate))) {
				err = true;
				break;
			}
			else if($scope.currentanalogProduct.loaddata.analogNets[i].yearrate === undefined || !(reg.test($scope.currentanalogProduct.loaddata.analogNets[i].yearrate))) {
				err = true;
				break;
			}
			else {
				//将date添加到数组，并判断重复
				var j = 0;
				for(j = 0; j < dateArr.length; j++) {
					if($scope.currentanalogProduct.loaddata.analogNets[i].date === dateArr[j]) {
						err = true;
						break;
					}
				}
				if( j >= dateArr.length) {
					dateArr.push($scope.currentanalogProduct.loaddata.analogNets[i].date);
				}
			}
		}
		if(err === true) {
			$scope.currentanalogProduct.loaddata.fileError = true;
			$scope.currentanalogProduct.loaddata.errorTip = "请检查数据格式及日期是否重复";
		}
		else {
			var json = {};
			json.proid = $scope.currentanalogProduct.id;
			json.analogNets = $scope.currentanalogProduct.loaddata.analogNets;
			json.count = $scope.currentanalogProduct.loaddata.analogNets.length;
			ManageService.cspManageImportanalogInsertToDb(json,function(res) {
				if(res.result === "succeed") {
					$scope.currentanalogProduct.importanalogNet = false;
					var json1 = {};
					json1.proid = $scope.currentanalogProduct.id;
					$scope.analogNetCurrentPage = 1;
					json1.page = $scope.analogNetCurrentPage;
					json1.pageCount = $scope.pageCount;
					ManageService.cspGetanalogNetByanalogProductId(json1,function(result) {
						if(result.result === "succeed") {
							$scope.currentanalogProduct.analogNets = result.data;
							$scope.currentanalogProduct.checkall = false;
							for(var m = 0; m < $scope.currentanalogProduct.analogNets.length; m++) {
								$scope.currentanalogProduct.analogNets[m].edit = false;
								$scope.currentanalogProduct.analogNets[m].checked = false;
							}
							if(result.data.length === 0) {
								$scope.currentanalogProduct.loadExcel = true;
							}
							else {
								$scope.currentanalogProduct.loadExcel = false;
							}
							//设计分页
							$scope.analogNetTotalPage = Math.ceil(result.count/$scope.pageCount) ;
							$scope.analogNetPages = [];
							var start = 1;
							if( $scope.analogNetCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.analogNetTotalPage <= $scope.itemCount) {
								start = 1;
							}
							else {
								start = $scope.analogNetCurrentPage - Math.ceil($scope.itemCount/2) +1;
								if($scope.analogNetTotalPage -  start + 1 < $scope.itemCount ) {
									start = $scope.analogNetTotalPage - $scope.itemCount +1;
								}
							}
							for( var r = start ; r < start + $scope.itemCount; r ++ ) {
								if(r > $scope.analogNetTotalPage || $scope.analogNetTotalPage <= 1) {
									break;
								}
								else {
									var json = {};
									json.num = r;
									if(r === $scope.analogNetCurrentPage) {
										json.select = true;
									}
									else {
										json.select = false;
									}
									$scope.analogNetPages.push(json);
								}
							}
							if($scope.analogNetTotalPage <= 1) {
								$scope.analogNetShowPrev = false;
								$scope.analogNetShowNext = false;
							}
							else {
								$scope.analogNetShowPrev = true;
								$scope.analogNetShowNext = true;
							}
						}
						else {
							alert("获取数据失败");
						}
					})
				}
				else {
					alert("数据库异常");
				}
			})
		}
	}
	$scope.cspManageImportanalogDeleteData = function(index) {
		$scope.currentanalogProduct.loaddata.analogNets.splice(index,1);
		if($scope.currentanalogProduct.loaddata.analogNets.length === 0) {
			$scope.currentanalogProduct.loaddata.fileRight = false;
		}
	}
	//取消编辑净值
	$scope.cspManageEditanalogNetDataCancel = function(index) {
		$scope.currentanalogProduct.analogNets[index].edit = false;
	}
	//保存编辑的净值
	$scope.cspManageSaveanalogNetData = function(index) {
		var error = false;
		//验证浮点数
		var reg = /^\d+(\.\d+)?$/;
		if(!($scope.currentanalogProduct.analogNets[index].editanalogNet !== "" && reg.test($scope.currentanalogProduct.analogNets[index].editanalogNet)) ) {
			error = true;

		}
		if(!($scope.currentanalogProduct.analogNets[index].editTotalanalogNet !== "" && reg.test($scope.currentanalogProduct.analogNets[index].editTotalanalogNet)) ) {
			error = true;
		}
		if(!($scope.currentanalogProduct.analogNets[index].editAccrate !== "" && reg.test($scope.currentanalogProduct.analogNets[index].editAccrate)) ) {
			error = true;
		}
		if(!($scope.currentanalogProduct.analogNets[index].editYearrate !== "" && reg.test($scope.currentanalogProduct.analogNets[index].editYearrate)) ) {
			error = true;
		}
		if(error === true) {
			alert("请正确输入编辑的信息");
		}
		else {
			var json = {};
			json.analogNet = $scope.currentanalogProduct.analogNets[index].editanalogNet;
			json.totalanalogNet = $scope.currentanalogProduct.analogNets[index].editTotalanalogNet;
			json.accrate = $scope.currentanalogProduct.analogNets[index].editAccrate;
			json.yearrate = $scope.currentanalogProduct.analogNets[index].editYearrate;
			json.ID = $scope.currentanalogProduct.analogNets[index].ID;
			ManageService.cspUpdateSingleanalogNet(json,function(res) {
				if(res.result === "succeed") {
					$scope.currentanalogProduct.analogNets[index].edit = false;
					var json1 = {};
					json1.proid = $scope.currentanalogProduct.id;
					json1.page = $scope.analogNetCurrentPage;
					json1.pageCount = $scope.pageCount;
					ManageService.cspGetanalogNetByanalogProductId(json1,function(result) {
						if(result.result === "succeed") {
							$scope.currentanalogProduct.analogNets = result.data;
							$scope.currentanalogProduct.checkall = false;
							for(var m = 0; m < $scope.currentanalogProduct.analogNets.length; m++) {
								$scope.currentanalogProduct.analogNets[m].edit = false;
								$scope.currentanalogProduct.analogNets[m].checked = false;
							}
							if(result.data.length === 0) {
								$scope.currentanalogProduct.loadExcel = true;
							}
							else {
								$scope.currentanalogProduct.loadExcel = false;
							}
							//设计分页
							$scope.analogNetTotalPage = Math.ceil(result.count/$scope.pageCount) ;
							$scope.analogNetPages = [];
							var start = 1;
							if( $scope.analogNetCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.analogNetTotalPage <= $scope.itemCount) {
								start = 1;
							}
							else {
								start = $scope.analogNetCurrentPage - Math.ceil($scope.itemCount/2) +1;
								if($scope.analogNetTotalPage -  start + 1 < $scope.itemCount ) {
									start = $scope.analogNetTotalPage - $scope.itemCount +1;
								}
							}
							for( var r = start ; r < start + $scope.itemCount; r ++ ) {
								if(r > $scope.analogNetTotalPage || $scope.analogNetTotalPage <= 1) {
									break;
								}
								else {
									var json = {};
									json.num = r;
									if(r === $scope.analogNetCurrentPage) {
										json.select = true;
									}
									else {
										json.select = false;
									}
									$scope.analogNetPages.push(json);
								}
							}
							if($scope.analogNetTotalPage <= 1) {
								$scope.analogNetShowPrev = false;
								$scope.analogNetShowNext = false;
							}
							else {
								$scope.analogNetShowPrev = true;
								$scope.analogNetShowNext = true;
							}
						}
						else {
							alert("获取数据失败");
						}
					})
				}
				else {
					$scope.currentanalogProduct.analogNets[index].edit = false;
					alert("数据库异常");
				}
			})
		}
	}
	$scope.cspManageanalogProductSelectanalogTactics = function(e) {
		$scope.currentanalogProduct.selectanalogTactics = true;
		document.getElementById('csp_manage_analogProduct_analogTactics_select').style.width = document.getElementById('csp_manage_analogProduct_analogTactics_result').offsetWidth + "px";
		e.stopPropagation();
	}
	$scope.cspManageanalogProductCloseanalogTactics = function() {
		$scope.currentanalogProduct.selectanalogTactics = false;
	}
	$scope.cspManageanalogProductStop = function(e) {
		e.stopPropagation();
	}
	$scope.cspManageanalogProductSelectanalogTacticsSure = function(index) {
		$scope.currentanalogProduct.tsidList[index].selected = !$scope.currentanalogProduct.tsidList[index].selected;
		var k = 0;
		$scope.currentanalogProduct.tsname = "";
		for(var i = 0; i < $scope.currentanalogProduct.tsidList.length; i++ ) {
			if($scope.currentanalogProduct.tsidList[i].selected === true) {
				if(k === 0) {
					k = 1;
					$scope.currentanalogProduct.tsname += $scope.currentanalogProduct.tsidList[i].tsname;
				}
				else {
					$scope.currentanalogProduct.tsname += " ， " + $scope.currentanalogProduct.tsidList[i].tsname;
				}
			}
		}
	}
	$scope.cspManageSelectUserChange = function() {
		var kind = document.getElementById('csp_manage_user_kind').value;
		if(kind === $scope.currentUserKind){}
		else {
			$scope.currentUserKind = kind;
			var jsonuser = {};
			jsonuser.kind = $scope.currentUserKind;
			$scope.userCurrentPage = 1;
			jsonuser.page = $scope.userCurrentPage;
			jsonuser.pageCount = $scope.pageCount;
			ManageService.cspManageGetAllUser(jsonuser,function(res) {
				if(res.result === "succeed") {
					$scope.users = res.data;
					for(var i = 0; i < res.data.length; i++) {
						if(res.data[i].au_stat == 0) {
							$scope.users[i].checkState = "未验证";
						}
						else {
							$scope.users[i].checkState = "已验证";
						}
						$scope.users[i].edit = false;
					}

					//设计分页
					$scope.userTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.userPages = [];
					var start = 1;
					if( $scope.userCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.userTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.userCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.userTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.userTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.userTotalPage || $scope.userTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.userCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.userPages.push(json);
						}
					}
					if($scope.userTotalPage <= 1) {
						$scope.userShowPrev = false;
						$scope.userShowNext = false;
					}
					else {
						$scope.userShowPrev = true;
						$scope.userShowNext = true;
					}
				}
				else {
					alert("数据库异常");
				}
			})
		}
	}

	$scope.cspManageCheckAllanalogNets = function() {
		if ($scope.currentanalogProduct.checkall === false) {
			$scope.currentanalogProduct.checkall = true;
			for(var i = 0; i < $scope.currentanalogProduct.analogNets.length; i++) {
				$scope.currentanalogProduct.analogNets[i].checked = true;
			}
		}
		else {
			$scope.currentanalogProduct.checkall = false;
			for(var j = 0; j < $scope.currentanalogProduct.analogNets.length; j++) {
				$scope.currentanalogProduct.analogNets[j].checked = false;
			}
		}
	}
	$scope.cspManageanalogNetCheckClick = function() {
		$scope.currentanalogProduct.checkall = true;
		for(var i = 0; i < $scope.currentanalogProduct.analogNets.length; i++) {
			if($scope.currentanalogProduct.analogNets[i].checked === false) {
				$scope.currentanalogProduct.checkall = false;
			}
		}
	}
	$scope.cspManageMultipleDeleteanalogNets = function() {
		//先循环，获取所有要删除的净值数据
		var idarr = [];
		for(var i = 0; i < $scope.currentanalogProduct.analogNets.length; i++) {
			if($scope.currentanalogProduct.analogNets[i].checked === true) {
				idarr.push($scope.currentanalogProduct.analogNets[i].ID)
			}
		}
		if(idarr.length === 0) {
			//啥也不干
		}
		else if(idarr.length === 1) {
			var json1 = {};
			json1.count = 1;
			json1.data = idarr;
			ManageService.cspManageMultipleDeleteanalogNets(json1,function(res1) {
				if(res1.result === "succeed") {
					var jsontemp1 = {};
					jsontemp1.proid = $scope.currentanalogProduct.id;
					$scope.analogNetCurrentPage = 1;
					jsontemp1.page = $scope.analogNetCurrentPage;
					jsontemp1.pageCount = $scope.pageCount;
					ManageService.cspGetanalogNetByanalogProductId(jsontemp1,function(result1) {
						if(result1.result === "succeed") {
							$scope.currentanalogProduct.analogNets = result1.data;
							$scope.currentanalogProduct.checkall = false;
							for(var m = 0; m < $scope.currentanalogProduct.analogNets.length; m++) {
								$scope.currentanalogProduct.analogNets[m].edit = false;
								$scope.currentanalogProduct.analogNets[m].checked = false;
							}
							if(result1.data.length === 0) {
								$scope.currentanalogProduct.loadExcel = true;
							}
							else {
								$scope.currentanalogProduct.loadExcel = false;
							}
							//设计分页
							$scope.analogNetTotalPage = Math.ceil(result1.count/$scope.pageCount) ;
							$scope.analogNetPages = [];
							var start = 1;
							if( $scope.analogNetCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.analogNetTotalPage <= $scope.itemCount) {
								start = 1;
							}
							else {
								start = $scope.analogNetCurrentPage - Math.ceil($scope.itemCount/2) +1;
								if($scope.analogNetTotalPage -  start + 1 < $scope.itemCount ) {
									start = $scope.analogNetTotalPage - $scope.itemCount +1;
								}
							}
							for( var r = start ; r < start + $scope.itemCount; r ++ ) {
								if(r > $scope.analogNetTotalPage || $scope.analogNetTotalPage <= 1) {
									break;
								}
								else {
									var json = {};
									json.num = r;
									if(r === $scope.analogNetCurrentPage) {
										json.select = true;
									}
									else {
										json.select = false;
									}
									$scope.analogNetPages.push(json);
								}
							}
							if($scope.analogNetTotalPage <= 1) {
								$scope.analogNetShowPrev = false;
								$scope.analogNetShowNext = false;
							}
							else {
								$scope.analogNetShowPrev = true;
								$scope.analogNetShowNext = true;
							}
						}
						else {
							alert("获取数据失败");
						}
					})
				}
				else {
					alert("数据库异常");
				}
			})
		}
		else {
			var json2 = {};
			json2.count = idarr.length;
			json2.data = idarr;
			ManageService.cspManageMultipleDeleteanalogNets(json2,function(res2) {
				if(res2.result === "succeed") {
					var jsontemp2 = {};
					jsontemp2.proid = $scope.currentanalogProduct.id;
					$scope.analogNetCurrentPage = 1;
					jsontemp2.page = $scope.analogNetCurrentPage;
					jsontemp2.pageCount = $scope.pageCount;
					ManageService.cspGetanalogNetByanalogProductId(jsontemp2,function(result2) {
						if(result2.result === "succeed") {
							$scope.currentanalogProduct.analogNets = result2.data;
							$scope.currentanalogProduct.checkall = false;
							for(var m = 0; m < $scope.currentanalogProduct.analogNets.length; m++) {
								$scope.currentanalogProduct.analogNets[m].edit = false;
								$scope.currentanalogProduct.analogNets[m].checked = false;
							}
							if(result2.data.length === 0) {
								$scope.currentanalogProduct.loadExcel = true;
							}
							else {
								$scope.currentanalogProduct.loadExcel = false;
							}
							//设计分页
							$scope.analogNetTotalPage = Math.ceil(result2.count/$scope.pageCount) ;
							$scope.analogNetPages = [];
							var start = 1;
							if( $scope.analogNetCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.analogNetTotalPage <= $scope.itemCount) {
								start = 1;
							}
							else {
								start = $scope.analogNetCurrentPage - Math.ceil($scope.itemCount/2) +1;
								if($scope.analogNetTotalPage -  start + 1 < $scope.itemCount ) {
									start = $scope.analogNetTotalPage - $scope.itemCount +1;
								}
							}
							for( var r = start ; r < start + $scope.itemCount; r ++ ) {
								if(r > $scope.analogNetTotalPage || $scope.analogNetTotalPage <= 1) {
									break;
								}
								else {
									var json = {};
									json.num = r;
									if(r === $scope.analogNetCurrentPage) {
										json.select = true;
									}
									else {
										json.select = false;
									}
									$scope.analogNetPages.push(json);
								}
							}
							if($scope.analogNetTotalPage <= 1) {
								$scope.analogNetShowPrev = false;
								$scope.analogNetShowNext = false;
							}
							else {
								$scope.analogNetShowPrev = true;
								$scope.analogNetShowNext = true;
							}
						}
						else {
							alert("获取数据失败");
						}
					})
				}
				else {
					alert("数据库异常");
				}
			})
		}
	}

	$scope.cspManageanalogProductLoopToFirst = function () {
		if($scope.analogProductCurrentPage === 1) {}
		else {
			window.scrollTo(0,0);
			var jsonanalogProduct = {};
			$scope.analogProductCurrentPage = 1;
			jsonanalogProduct.page = $scope.analogProductCurrentPage;
			jsonanalogProduct.pageCount = $scope.pageCount;
			ManageService.cspGetAllanalogProduct(jsonanalogProduct,function(res) {
				if(res.result === "succeed") {
					$scope.analogProducts = res.data_analogProduct;
					for(var i = 0; i < res.data_analogProduct.length; i++) {
						if(res.data_analogProduct[i] !== "") {
							var analogTacticsNameList = "";
							var analogTacticsArr = res.data_analogProduct[i].analogTacticsList.split(",");
							for(var j = 0; j < analogTacticsArr.length; j++) {
								for(var k = 0; k < res.data_analogTactics.length; k++) {
									if(analogTacticsArr[j] == res.data_analogTactics[k].tsid) {
										if(analogTacticsNameList !== "") {
											analogTacticsNameList += " ， " + res.data_analogTactics[k].tsname;
										}
										else {
											analogTacticsNameList += res.data_analogTactics[k].tsname;
										}
									}
								}
							}
							$scope.analogProducts[i].analogTacticsName = analogTacticsNameList;
						}
					}
					//设计分页
					$scope.analogProductTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.analogProductPages = [];
					var start = 1;
					if( $scope.analogProductCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.analogProductTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.analogProductCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.analogProductTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.analogProductTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.analogProductTotalPage || $scope.analogProductTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.analogProductCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.analogProductPages.push(json);
						}
					}
					if($scope.analogProductTotalPage <= 1) {
						$scope.analogProductShowPrev = false;
						$scope.analogProductShowNext = false;
					}
					else {
						$scope.analogProductShowPrev = true;
						$scope.analogProductShowNext = true;
					}
				}
				else {
					alert("获取数据失败，请重试");
				}
			})
		}
	}

	$scope.cspManageanalogProductLoopPrev = function() {
		if($scope.analogProductCurrentPage === 1) {}
		else {
			window.scrollTo(0,0);
			var jsonanalogProduct = {};
			$scope.analogProductCurrentPage = $scope.analogProductCurrentPage - 1;
			jsonanalogProduct.page = $scope.analogProductCurrentPage;
			jsonanalogProduct.pageCount = $scope.pageCount;
			ManageService.cspGetAllanalogProduct(jsonanalogProduct,function(res) {
				if(res.result === "succeed") {
					$scope.analogProducts = res.data_analogProduct;
					for(var i = 0; i < res.data_analogProduct.length; i++) {
						if(res.data_analogProduct[i] !== "") {
							var analogTacticsNameList = "";
							var analogTacticsArr = res.data_analogProduct[i].analogTacticsList.split(",");
							for(var j = 0; j < analogTacticsArr.length; j++) {
								for(var k = 0; k < res.data_analogTactics.length; k++) {
									if(analogTacticsArr[j] == res.data_analogTactics[k].tsid) {
										if(analogTacticsNameList !== "") {
											analogTacticsNameList += " ， " + res.data_analogTactics[k].tsname;
										}
										else {
											analogTacticsNameList += res.data_analogTactics[k].tsname;
										}
									}
								}
							}
							$scope.analogProducts[i].analogTacticsName = analogTacticsNameList;
						}
					}
					//设计分页
					$scope.analogProductTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.analogProductPages = [];
					var start = 1;
					if( $scope.analogProductCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.analogProductTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.analogProductCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.analogProductTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.analogProductTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.analogProductTotalPage || $scope.analogProductTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.analogProductCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.analogProductPages.push(json);
						}
					}
					if($scope.analogProductTotalPage <= 1) {
						$scope.analogProductShowPrev = false;
						$scope.analogProductShowNext = false;
					}
					else {
						$scope.analogProductShowPrev = true;
						$scope.analogProductShowNext = true;
					}
				}
				else {
					alert("获取数据失败，请重试");
				}
			})
		}
	}

	$scope.cspManageanalogProductLoopToPage = function(page) {
		if(page.select === true) {}
		else {
			window.scrollTo(0,0);
			var jsonanalogProduct = {};
			$scope.analogProductCurrentPage = page.num;
			jsonanalogProduct.page = $scope.analogProductCurrentPage;
			jsonanalogProduct.pageCount = $scope.pageCount;
			ManageService.cspGetAllanalogProduct(jsonanalogProduct,function(res) {
				if(res.result === "succeed") {
					$scope.analogProducts = res.data_analogProduct;
					for(var i = 0; i < res.data_analogProduct.length; i++) {
						if(res.data_analogProduct[i] !== "") {
							var analogTacticsNameList = "";
							var analogTacticsArr = res.data_analogProduct[i].analogTacticsList.split(",");
							for(var j = 0; j < analogTacticsArr.length; j++) {
								for(var k = 0; k < res.data_analogTactics.length; k++) {
									if(analogTacticsArr[j] == res.data_analogTactics[k].tsid) {
										if(analogTacticsNameList !== "") {
											analogTacticsNameList += " ， " + res.data_analogTactics[k].tsname;
										}
										else {
											analogTacticsNameList += res.data_analogTactics[k].tsname;
										}
									}
								}
							}
							$scope.analogProducts[i].analogTacticsName = analogTacticsNameList;
						}
					}
					//设计分页
					$scope.analogProductTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.analogProductPages = [];
					var start = 1;
					if( $scope.analogProductCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.analogProductTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.analogProductCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.analogProductTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.analogProductTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.analogProductTotalPage || $scope.analogProductTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.analogProductCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.analogProductPages.push(json);
						}
					}
					if($scope.analogProductTotalPage <= 1) {
						$scope.analogProductShowPrev = false;
						$scope.analogProductShowNext = false;
					}
					else {
						$scope.analogProductShowPrev = true;
						$scope.analogProductShowNext = true;
					}
				}
				else {
					alert("获取数据失败，请重试");
				}
			})
		}
	}

	$scope.cspManageanalogProductLoopNext = function() {
		if($scope.analogProductCurrentPage === $scope.analogProductTotalPage) {}
		else {
			window.scrollTo(0,0);
			var jsonanalogProduct = {};
			$scope.analogProductCurrentPage = $scope.analogProductCurrentPage + 1;
			jsonanalogProduct.page = $scope.analogProductCurrentPage;
			jsonanalogProduct.pageCount = $scope.pageCount;
			ManageService.cspGetAllanalogProduct(jsonanalogProduct,function(res) {
				if(res.result === "succeed") {
					$scope.analogProducts = res.data_analogProduct;
					for(var i = 0; i < res.data_analogProduct.length; i++) {
						if(res.data_analogProduct[i] !== "") {
							var analogTacticsNameList = "";
							var analogTacticsArr = res.data_analogProduct[i].analogTacticsList.split(",");
							for(var j = 0; j < analogTacticsArr.length; j++) {
								for(var k = 0; k < res.data_analogTactics.length; k++) {
									if(analogTacticsArr[j] == res.data_analogTactics[k].tsid) {
										if(analogTacticsNameList !== "") {
											analogTacticsNameList += " ， " + res.data_analogTactics[k].tsname;
										}
										else {
											analogTacticsNameList += res.data_analogTactics[k].tsname;
										}
									}
								}
							}
							$scope.analogProducts[i].analogTacticsName = analogTacticsNameList;
						}
					}
					//设计分页
					$scope.analogProductTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.analogProductPages = [];
					var start = 1;
					if( $scope.analogProductCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.analogProductTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.analogProductCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.analogProductTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.analogProductTotalPage - $scope.itemCount + 1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.analogProductTotalPage || $scope.analogProductTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.analogProductCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.analogProductPages.push(json);
						}
					}
					if($scope.analogProductTotalPage <= 1) {
						$scope.analogProductShowPrev = false;
						$scope.analogProductShowNext = false;
					}
					else {
						$scope.analogProductShowPrev = true;
						$scope.analogProductShowNext = true;
					}
				}
				else {
					alert("获取数据失败，请重试");
				}
			})
		}
	}

	$scope.cspManageanalogProductLoopLast = function() {
		if($scope.analogProductCurrentPage === $scope.analogProductTotalPage) {}
		else {
			window.scrollTo(0,0);
			var jsonanalogProduct = {};
			$scope.analogProductCurrentPage = $scope.analogProductTotalPage;
			jsonanalogProduct.page = $scope.analogProductCurrentPage;
			jsonanalogProduct.pageCount = $scope.pageCount;
			ManageService.cspGetAllanalogProduct(jsonanalogProduct,function(res) {
				if(res.result === "succeed") {
					$scope.analogProducts = res.data_analogProduct;
					for(var i = 0; i < res.data_analogProduct.length; i++) {
						if(res.data_analogProduct[i] !== "") {
							var analogTacticsNameList = "";
							var analogTacticsArr = res.data_analogProduct[i].analogTacticsList.split(",");
							for(var j = 0; j < analogTacticsArr.length; j++) {
								for(var k = 0; k < res.data_analogTactics.length; k++) {
									if(analogTacticsArr[j] == res.data_analogTactics[k].tsid) {
										if(analogTacticsNameList !== "") {
											analogTacticsNameList += " ， " + res.data_analogTactics[k].tsname;
										}
										else {
											analogTacticsNameList += res.data_analogTactics[k].tsname;
										}
									}
								}
							}
							$scope.analogProducts[i].analogTacticsName = analogTacticsNameList;
						}
					}
					//设计分页
					$scope.analogProductTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.analogProductPages = [];
					var start = 1;
					if( $scope.analogProductCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.analogProductTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.analogProductCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.analogProductTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.analogProductTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.analogProductTotalPage || $scope.analogProductTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.analogProductCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.analogProductPages.push(json);
						}
					}
					if($scope.analogProductTotalPage <= 1) {
						$scope.analogProductShowPrev = false;
						$scope.analogProductShowNext = false;
					}
					else {
						$scope.analogProductShowPrev = true;
						$scope.analogProductShowNext = true;
					}
				}
				else {
					alert("获取数据失败，请重试");
				}
			})
		}
	}

	$scope.cspManageanalogTacticsLoopToFirst = function() {
		if($scope.analogTacticsCurrentPage === 1){}
		else {
			window.scrollTo(0,0);
			var jsonanalogTactics = {};
			$scope.analogTacticsCurrentPage = 1;
			jsonanalogTactics.page = $scope.analogTacticsCurrentPage;
			jsonanalogTactics.pageCount = $scope.pageCount;
			ManageService.cspGetAllanalogTactics(jsonanalogTactics,function(result) {
				if(result.result = "succeed") {
					$scope.analogTacticsList = result.data;
					//设计分页
					$scope.analogTacticsTotalPage = Math.ceil(result.count/$scope.pageCount) ;
					$scope.analogTacticsPages = [];
					var start = 1;
					if( $scope.analogTacticsCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.analogTacticsTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.analogTacticsCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.analogTacticsTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.analogTacticsTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.analogTacticsTotalPage || $scope.analogTacticsTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.analogTacticsCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.analogTacticsPages.push(json);
						}
					}
					if($scope.analogTacticsTotalPage <= 1) {
						$scope.analogTacticsShowPrev = false;
						$scope.analogTacticsShowNext = false;
					}
					else {
						$scope.analogTacticsShowPrev = true;
						$scope.analogTacticsShowNext = true;
					}
				}
				else {
					alert("数据更新失败");
				}
			})
		}
	}

	$scope.cspManageanalogTacticsLoopPrev = function() {
		if($scope.analogTacticsCurrentPage === 1){}
		else {
			window.scrollTo(0,0);
			var jsonanalogTactics = {};
			$scope.analogTacticsCurrentPage =  $scope.analogTacticsCurrentPage - 1;
			jsonanalogTactics.page = $scope.analogTacticsCurrentPage;
			jsonanalogTactics.pageCount = $scope.pageCount;
			ManageService.cspGetAllanalogTactics(jsonanalogTactics,function(result) {
				if(result.result = "succeed") {
					$scope.analogTacticsList = result.data;
					//设计分页
					$scope.analogTacticsTotalPage = Math.ceil(result.count/$scope.pageCount) ;
					$scope.analogTacticsPages = [];
					var start = 1;
					if( $scope.analogTacticsCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.analogTacticsTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.analogTacticsCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.analogTacticsTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.analogTacticsTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.analogTacticsTotalPage || $scope.analogTacticsTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.analogTacticsCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.analogTacticsPages.push(json);
						}
					}
					if($scope.analogTacticsTotalPage <= 1) {
						$scope.analogTacticsShowPrev = false;
						$scope.analogTacticsShowNext = false;
					}
					else {
						$scope.analogTacticsShowPrev = true;
						$scope.analogTacticsShowNext = true;
					}
				}
				else {
					alert("数据更新失败");
				}
			})
		}
	}

	$scope.cspManageanalogTacticsLoopToPage = function(page) {
		if(page.select === true){}
		else {
			window.scrollTo(0,0);
			var jsonanalogTactics = {};
			$scope.analogTacticsCurrentPage = page.num;
			jsonanalogTactics.page = $scope.analogTacticsCurrentPage;
			jsonanalogTactics.pageCount = $scope.pageCount;
			ManageService.cspGetAllanalogTactics(jsonanalogTactics,function(result) {
				if(result.result = "succeed") {
					$scope.analogTacticsList = result.data;
					//设计分页
					$scope.analogTacticsTotalPage = Math.ceil(result.count/$scope.pageCount) ;
					$scope.analogTacticsPages = [];
					var start = 1;
					if( $scope.analogTacticsCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.analogTacticsTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.analogTacticsCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.analogTacticsTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.analogTacticsTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.analogTacticsTotalPage || $scope.analogTacticsTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.analogTacticsCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.analogTacticsPages.push(json);
						}
					}
					if($scope.analogTacticsTotalPage <= 1) {
						$scope.analogTacticsShowPrev = false;
						$scope.analogTacticsShowNext = false;
					}
					else {
						$scope.analogTacticsShowPrev = true;
						$scope.analogTacticsShowNext = true;
					}
				}
				else {
					alert("数据更新失败");
				}
			})
		}
	}

	$scope.cspManageanalogTacticsLoopNext = function() {
		if($scope.analogTacticsCurrentPage === $scope.analogTacticsTotalPage){}
		else {
			window.scrollTo(0,0);
			var jsonanalogTactics = {};
			$scope.analogTacticsCurrentPage = $scope.analogTacticsCurrentPage + 1;
			jsonanalogTactics.page = $scope.analogTacticsCurrentPage;
			jsonanalogTactics.pageCount = $scope.pageCount;
			ManageService.cspGetAllanalogTactics(jsonanalogTactics,function(result) {
				if(result.result = "succeed") {
					$scope.analogTacticsList = result.data;
					//设计分页
					$scope.analogTacticsTotalPage = Math.ceil(result.count/$scope.pageCount) ;
					$scope.analogTacticsPages = [];
					var start = 1;
					if( $scope.analogTacticsCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.analogTacticsTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.analogTacticsCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.analogTacticsTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.analogTacticsTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.analogTacticsTotalPage || $scope.analogTacticsTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.analogTacticsCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.analogTacticsPages.push(json);
						}
					}
					if($scope.analogTacticsTotalPage <= 1) {
						$scope.analogTacticsShowPrev = false;
						$scope.analogTacticsShowNext = false;
					}
					else {
						$scope.analogTacticsShowPrev = true;
						$scope.analogTacticsShowNext = true;
					}
				}
				else {
					alert("数据更新失败");
				}
			})
		}
	}

	$scope.cspManageanalogTacticsLoopLast = function() {
		if($scope.analogTacticsCurrentPage === $scope.analogTacticsTotalPage){}
		else {
			window.scrollTo(0,0);
			var jsonanalogTactics = {};
			$scope.analogTacticsCurrentPage = $scope.analogTacticsTotalPage;
			jsonanalogTactics.page = $scope.analogTacticsCurrentPage;
			jsonanalogTactics.pageCount = $scope.pageCount;
			ManageService.cspGetAllanalogTactics(jsonanalogTactics,function(result) {
				if(result.result = "succeed") {
					$scope.analogTacticsList = result.data;
					//设计分页
					$scope.analogTacticsTotalPage = Math.ceil(result.count/$scope.pageCount) ;
					$scope.analogTacticsPages = [];
					var start = 1;
					if( $scope.analogTacticsCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.analogTacticsTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.analogTacticsCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.analogTacticsTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.analogTacticsTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.analogTacticsTotalPage || $scope.analogTacticsTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.analogTacticsCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.analogTacticsPages.push(json);
						}
					}
					if($scope.analogTacticsTotalPage <= 1) {
						$scope.analogTacticsShowPrev = false;
						$scope.analogTacticsShowNext = false;
					}
					else {
						$scope.analogTacticsShowPrev = true;
						$scope.analogTacticsShowNext = true;
					}
				}
				else {
					alert("数据更新失败");
				}
			})
		}
	}


	$scope.cspManageanalogNetLoopToFirst = function() {
		if($scope.analogNetCurrentPage === 1) {}
		else {
			var json = {};
			json.proid = $scope.currentanalogProduct.id;
			$scope.analogNetCurrentPage = 1;
			json.page = $scope.analogNetCurrentPage;
			json.pageCount = $scope.pageCount;
			ManageService.cspGetanalogNetByanalogProductId(json,function(res) {
				if(res.result === "succeed") {
					$scope.currentanalogProduct.analogNets = res.data;
					$scope.currentanalogProduct.checkall = false;
					for(var m = 0; m < $scope.currentanalogProduct.analogNets.length; m++) {
						$scope.currentanalogProduct.analogNets[m].edit = false;
						$scope.currentanalogProduct.analogNets[m].checked = false;
					}
					if(res.data.length === 0) {
						$scope.currentanalogProduct.loadExcel = true;
					}
					else {
						$scope.currentanalogProduct.loadExcel = false;
					}
					//设计分页
					$scope.analogNetTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.analogNetPages = [];
					var start = 1;
					if( $scope.analogNetCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.analogNetTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.analogNetCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.analogNetTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.analogNetTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.analogNetTotalPage || $scope.analogNetTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.analogNetCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.analogNetPages.push(json);
						}
					}
					if($scope.analogNetTotalPage <= 1) {
						$scope.analogNetShowPrev = false;
						$scope.analogNetShowNext = false;
					}
					else {
						$scope.analogNetShowPrev = true;
						$scope.analogNetShowNext = true;
					}
					$scope.cspManageLoadPath = "tpls/managecenter/analogProductinfo.html";
					$scope.cspManageState = 2;
				}
				else {
					alert("获取数据失败");
				}
			})
		}
	}

	$scope.cspManageanalogNetLoopPrev = function() {
		if($scope.analogNetCurrentPage === 1) {}
		else {
			var json = {};
			json.proid = $scope.currentanalogProduct.id;
			$scope.analogNetCurrentPage = $scope.analogNetCurrentPage - 1;
			json.page = $scope.analogNetCurrentPage;
			json.pageCount = $scope.pageCount;
			ManageService.cspGetanalogNetByanalogProductId(json,function(res) {
				if(res.result === "succeed") {
					$scope.currentanalogProduct.analogNets = res.data;
					$scope.currentanalogProduct.checkall = false;
					for(var m = 0; m < $scope.currentanalogProduct.analogNets.length; m++) {
						$scope.currentanalogProduct.analogNets[m].edit = false;
						$scope.currentanalogProduct.analogNets[m].checked = false;
					}
					if(res.data.length === 0) {
						$scope.currentanalogProduct.loadExcel = true;
					}
					else {
						$scope.currentanalogProduct.loadExcel = false;
					}
					//设计分页
					$scope.analogNetTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.analogNetPages = [];
					var start = 1;
					if( $scope.analogNetCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.analogNetTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.analogNetCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.analogNetTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.analogNetTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.analogNetTotalPage || $scope.analogNetTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.analogNetCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.analogNetPages.push(json);
						}
					}
					if($scope.analogNetTotalPage <= 1) {
						$scope.analogNetShowPrev = false;
						$scope.analogNetShowNext = false;
					}
					else {
						$scope.analogNetShowPrev = true;
						$scope.analogNetShowNext = true;
					}
					$scope.cspManageLoadPath = "tpls/managecenter/analogProductinfo.html";
					$scope.cspManageState = 2;
				}
				else {
					alert("获取数据失败");
				}
			})
		}
	}

	$scope.cspManageanalogNetLoopToPage = function(page) {
		if(page.select === true) {}
		else {
			var json = {};
			json.proid = $scope.currentanalogProduct.id;
			$scope.analogNetCurrentPage = page.num;
			json.page = $scope.analogNetCurrentPage;
			json.pageCount = $scope.pageCount;
			ManageService.cspGetanalogNetByanalogProductId(json,function(res) {
				if(res.result === "succeed") {
					$scope.currentanalogProduct.analogNets = res.data;
					$scope.currentanalogProduct.checkall = false;
					for(var m = 0; m < $scope.currentanalogProduct.analogNets.length; m++) {
						$scope.currentanalogProduct.analogNets[m].edit = false;
						$scope.currentanalogProduct.analogNets[m].checked = false;
					}
					if(res.data.length === 0) {
						$scope.currentanalogProduct.loadExcel = true;
					}
					else {
						$scope.currentanalogProduct.loadExcel = false;
					}
					//设计分页
					$scope.analogNetTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.analogNetPages = [];
					var start = 1;
					if( $scope.analogNetCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.analogNetTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.analogNetCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.analogNetTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.analogNetTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.analogNetTotalPage || $scope.analogNetTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.analogNetCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.analogNetPages.push(json);
						}
					}
					if($scope.analogNetTotalPage <= 1) {
						$scope.analogNetShowPrev = false;
						$scope.analogNetShowNext = false;
					}
					else {
						$scope.analogNetShowPrev = true;
						$scope.analogNetShowNext = true;
					}
					$scope.cspManageLoadPath = "tpls/managecenter/analogProductinfo.html";
					$scope.cspManageState = 2;
				}
				else {
					alert("获取数据失败");
				}
			})
		}
	}

	$scope.cspManageanalogNetLoopNext = function() {
		if($scope.analogNetCurrentPage === $scope.analogNetTotalPage) {}
		else {
			var json = {};
			json.proid = $scope.currentanalogProduct.id;
			$scope.analogNetCurrentPage = $scope.analogNetCurrentPage + 1;
			json.page = $scope.analogNetCurrentPage;
			json.pageCount = $scope.pageCount;
			ManageService.cspGetanalogNetByanalogProductId(json,function(res) {
				if(res.result === "succeed") {
					$scope.currentanalogProduct.analogNets = res.data;
					$scope.currentanalogProduct.checkall = false;
					for(var m = 0; m < $scope.currentanalogProduct.analogNets.length; m++) {
						$scope.currentanalogProduct.analogNets[m].edit = false;
						$scope.currentanalogProduct.analogNets[m].checked = false;
					}
					if(res.data.length === 0) {
						$scope.currentanalogProduct.loadExcel = true;
					}
					else {
						$scope.currentanalogProduct.loadExcel = false;
					}
					//设计分页
					$scope.analogNetTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.analogNetPages = [];
					var start = 1;
					if( $scope.analogNetCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.analogNetTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.analogNetCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.analogNetTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.analogNetTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.analogNetTotalPage || $scope.analogNetTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.analogNetCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.analogNetPages.push(json);
						}
					}
					if($scope.analogNetTotalPage <= 1) {
						$scope.analogNetShowPrev = false;
						$scope.analogNetShowNext = false;
					}
					else {
						$scope.analogNetShowPrev = true;
						$scope.analogNetShowNext = true;
					}
					$scope.cspManageLoadPath = "tpls/managecenter/analogProductinfo.html";
					$scope.cspManageState = 2;
				}
				else {
					alert("获取数据失败");
				}
			})
		}
	}

	$scope.cspManageanalogNetLoopLast = function() {
		if($scope.analogNetCurrentPage === $scope.analogNetTotalPage) {}
		else {
			var json = {};
			json.proid = $scope.currentanalogProduct.id;
			$scope.analogNetCurrentPage = $scope.analogNetTotalPage;
			json.page = $scope.analogNetCurrentPage;
			json.pageCount = $scope.pageCount;
			ManageService.cspGetanalogNetByanalogProductId(json,function(res) {
				if(res.result === "succeed") {
					$scope.currentanalogProduct.analogNets = res.data;
					$scope.currentanalogProduct.checkall = false;
					for(var m = 0; m < $scope.currentanalogProduct.analogNets.length; m++) {
						$scope.currentanalogProduct.analogNets[m].edit = false;
						$scope.currentanalogProduct.analogNets[m].checked = false;
					}
					if(res.data.length === 0) {
						$scope.currentanalogProduct.loadExcel = true;
					}
					else {
						$scope.currentanalogProduct.loadExcel = false;
					}
					//设计分页
					$scope.analogNetTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.analogNetPages = [];
					var start = 1;
					if( $scope.analogNetCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.analogNetTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.analogNetCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.analogNetTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.analogNetTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.analogNetTotalPage || $scope.analogNetTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.analogNetCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.analogNetPages.push(json);
						}
					}
					if($scope.analogNetTotalPage <= 1) {
						$scope.analogNetShowPrev = false;
						$scope.analogNetShowNext = false;
					}
					else {
						$scope.analogNetShowPrev = true;
						$scope.analogNetShowNext = true;
					}
					$scope.cspManageLoadPath = "tpls/managecenter/analogProductinfo.html";
					$scope.cspManageState = 2;
				}
				else {
					alert("获取数据失败");
				}
			})
		}
	}
	$scope.cspManageEditOrder = function(index) {
		if($scope.orderEditIndex !== -1) {
			$scope.orders[$scope.orderEditIndex].edit = false;
		}
		$scope.orders[index].edit = true;
		$scope.orderEditIndex = index;
		for(var i = 0; i < $scope.orderKinds.length; i++) {
			if($scope.orders[index].stats === $scope.orderKinds[i].osid) {
				$scope.orders[index].editKind = $scope.orderKinds[i];
				break;
			}
		}
	}
	$scope.cspManageEditOrderSave = function(index) {
		console.log($scope.orders[index].editKind);
		if($scope.orders[index].editKind.osid !== $scope.orders[index].stats || $scope.orders[index].editmarks !== $scope.orders[index].Remarks) {
			//更新数据库
			var jsonupdateorder = {};
			jsonupdateorder.oid = $scope.orders[index].oid;
			jsonupdateorder.stats = $scope.orders[index].editKind.osid;
			jsonupdateorder.Remarks = $scope.orders[index].editmarks;
			ManageService.cspManageUpdateOrder(jsonupdateorder,function(result) {
				if(result.result === "succeed") {
					var jsonorder = {};
					jsonorder.page = $scope.orderCurrentPage;
					jsonorder.pageCount = $scope.pageCount;
					jsonorder.stats = $scope.orderCurrentKind.osid;
					$scope.orders[index].edit = false;
					ManageService.cspManageGetAllOrder(jsonorder,function(res) {
						if(res.result === "succeed") {
							$scope.orderKinds = res.ostate;
							$scope.orders = res.data;
							for(var i = 0; i < $scope.orders.length; i++) {
								$scope.orders[i].edit = false;
								$scope.orders[i].editkind = {};
								$scope.orders[i].editmarks = $scope.orders[i].Remarks;
							}
							$scope.orderEditIndex = -1;
							//分页处理
							$scope.orderTotalPage = Math.ceil(res.count/$scope.pageCount) ;
							$scope.orderPages = [];
							var start = 1;
							if( $scope.orderCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.orderTotalPage <= $scope.itemCount) {
								start = 1;
							}
							else {
								start = $scope.orderCurrentPage - Math.ceil($scope.itemCount/2) +1;
								if($scope.orderTotalPage -  start + 1 < $scope.itemCount ) {
									start = $scope.orderTotalPage - $scope.itemCount +1;
								}
							}
							for( var r = start ; r < start + $scope.itemCount; r ++ ) {
								if(r > $scope.orderTotalPage || $scope.orderTotalPage <= 1) {
									break;
								}
								else {
									var json = {};
									json.num = r;
									if(r === $scope.orderCurrentPage) {
										json.select = true;
									}
									else {
										json.select = false;
									}
									$scope.orderPages.push(json);
								}
							}
							if($scope.orderTotalPage <= 1) {
								$scope.orderShowPrev = false;
								$scope.orderShowNext = false;
							}
							else {
								$scope.orderShowPrev = true;
								$scope.orderShowNext = true;
							}
						}
						else {
							alert("获取数据失败");
						}
					})
				}
				else {
					alert("数据库异常");
				}
			})
		}
	}

	$scope.cspManageEditOrderCancel = function(index) {
		$scope.orders[index].edit = false;
		$scope.orderEditIndex = -1;
	}

	$scope.cspManageSelectOrder = function() {
		console.log($scope.orderCurrentKind);
		$scope.orderCurrentPage = 1;
		var jsonorder = {};
		jsonorder.page = $scope.orderCurrentPage;
		jsonorder.pageCount = $scope.pageCount;
		jsonorder.stats = $scope.orderCurrentKind.osid;
		ManageService.cspManageGetAllOrder(jsonorder,function(res) {
			if(res.result === "succeed") {
				$scope.orderKinds = res.ostate;
				$scope.orders = res.data;
				for(var i = 0; i < $scope.orders.length; i++) {
					$scope.orders[i].edit = false;
					$scope.orders[i].editKind = {};
					$scope.orders[i].editmarks = $scope.orders[i].Remarks;
				}
				$scope.orderEditIndex = -1;
				//分页处理
				$scope.orderTotalPage = Math.ceil(res.count/$scope.pageCount) ;
				console.log(res.count,$scope.pageCount,$scope.orderTotalPage);
				// for(var d =0; d < $scope.orderPages.length; d ++) {
				// 	delete $scope.orderPages[d];
				// }
				$scope.orderPages.splice(0,$scope.orderPages.length);
				console.log($scope.orderPages);
				var start = 1;
				if( $scope.orderCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.orderTotalPage <= $scope.itemCount) {
					start = 1;
				}
				else {
					start = $scope.orderCurrentPage - Math.ceil($scope.itemCount/2) +1;
					if($scope.orderTotalPage -  start + 1 < $scope.itemCount ) {
						start = $scope.orderTotalPage - $scope.itemCount +1;
					}
				}
				for( var r = start ; r < start + $scope.itemCount; r ++ ) {
					if(r > $scope.orderTotalPage || $scope.orderTotalPage <= 1) {
						break;
					}
					else {
						var json = {};
						json.num = r;
						if(r === $scope.orderCurrentPage) {
							json.select = true;
						}
						else {
							json.select = false;
						}
						$scope.orderPages.push(json);
					}
				}
				if($scope.orderTotalPage <= 1) {
					$scope.orderShowPrev = false;
					$scope.orderShowNext = false;
				}
				else {
					$scope.orderShowPrev = true;
					$scope.orderShowNext = true;
				}
			}
			else {
				alert("获取数据失败");
			}
		})
	}
	$scope.cspManageOrderSelectChange = function(obj) {
		$scope.orderCurrentKind = obj;
	}

	$scope.cspManageorderLoopToFirst = function() {
		if($scope.orderCurrentPage === 1) {}
		else {
			var jsonorder = {};
			$scope.orderCurrentPage = 1;
			jsonorder.page = $scope.orderCurrentPage;
			jsonorder.pageCount = $scope.pageCount;
			jsonorder.stats = $scope.orderCurrentKind.osid;
			ManageService.cspManageGetAllOrder(jsonorder,function(res) {
				if(res.result === "succeed") {
					$scope.orderKinds = res.ostate;
					$scope.orders = res.data;
					for(var i = 0; i < $scope.orders.length; i++) {
						$scope.orders[i].edit = false;
						$scope.orders[i].editKind = {};
						$scope.orders[i].editmarks = $scope.orders[i].Remarks;
					}
					$scope.orderEditIndex = -1;
					//分页处理
					$scope.orderTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.orderPages = [];
					var start = 1;
					if( $scope.orderCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.orderTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.orderCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.orderTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.orderTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.orderTotalPage || $scope.orderTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.orderCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.orderPages.push(json);
						}
					}
					if($scope.orderTotalPage <= 1) {
						$scope.orderShowPrev = false;
						$scope.orderShowNext = false;
					}
					else {
						$scope.orderShowPrev = true;
						$scope.orderShowNext = true;
					}
				}
				else {
					alert("获取数据失败");
				}
			})
		}
	}

	$scope.cspManageorderLoopPrev = function() {
		if($scope.orderCurrentPage === 1) {}
		else {
			var jsonorder = {};
			$scope.orderCurrentPage = $scope.orderCurrentPage -1;
			jsonorder.page = $scope.orderCurrentPage;
			jsonorder.pageCount = $scope.pageCount;
			jsonorder.stats = $scope.orderCurrentKind.osid;
			ManageService.cspManageGetAllOrder(jsonorder,function(res) {
				if(res.result === "succeed") {
					$scope.orderKinds = res.ostate;
					$scope.orders = res.data;
					for(var i = 0; i < $scope.orders.length; i++) {
						$scope.orders[i].edit = false;
						$scope.orders[i].editKind = {};
						$scope.orders[i].editmarks = $scope.orders[i].Remarks;
					}
					$scope.orderEditIndex = -1;
					//分页处理
					$scope.orderTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.orderPages = [];
					var start = 1;
					if( $scope.orderCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.orderTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.orderCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.orderTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.orderTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.orderTotalPage || $scope.orderTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.orderCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.orderPages.push(json);
						}
					}
					if($scope.orderTotalPage <= 1) {
						$scope.orderShowPrev = false;
						$scope.orderShowNext = false;
					}
					else {
						$scope.orderShowPrev = true;
						$scope.orderShowNext = true;
					}
				}
				else {
					alert("获取数据失败");
				}
			})
		}
	}

	$scope.cspManageorderLoopToPage = function(page) {
		if(page.select === true) {}
		else {
			var jsonorder = {};
			$scope.orderCurrentPage = page.num;
			jsonorder.page = $scope.orderCurrentPage;
			jsonorder.pageCount = $scope.pageCount;
			jsonorder.stats = $scope.orderCurrentKind.osid;
			ManageService.cspManageGetAllOrder(jsonorder,function(res) {
				if(res.result === "succeed") {
					$scope.orderKinds = res.ostate;
					$scope.orders = res.data;
					for(var i = 0; i < $scope.orders.length; i++) {
						$scope.orders[i].edit = false;
						$scope.orders[i].editKind = {};
						$scope.orders[i].editmarks = $scope.orders[i].Remarks;
					}
					$scope.orderEditIndex = -1;
					//分页处理
					$scope.orderTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.orderPages = [];
					var start = 1;
					if( $scope.orderCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.orderTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.orderCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.orderTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.orderTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.orderTotalPage || $scope.orderTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.orderCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.orderPages.push(json);
						}
					}
					if($scope.orderTotalPage <= 1) {
						$scope.orderShowPrev = false;
						$scope.orderShowNext = false;
					}
					else {
						$scope.orderShowPrev = true;
						$scope.orderShowNext = true;
					}
				}
				else {
					alert("获取数据失败");
				}
			})
		}
	}

	$scope.cspManageorderLoopNext = function() {
		if($scope.orderCurrentPage === $scope.orderTotalPage) {}
		else {
			var jsonorder = {};
			$scope.orderCurrentPage = $scope.orderCurrentPage + 1;
			jsonorder.page = $scope.orderCurrentPage;
			jsonorder.pageCount = $scope.pageCount;
			jsonorder.stats = $scope.orderCurrentKind.osid;
			ManageService.cspManageGetAllOrder(jsonorder,function(res) {
				if(res.result === "succeed") {
					$scope.orderKinds = res.ostate;
					$scope.orders = res.data;
					for(var i = 0; i < $scope.orders.length; i++) {
						$scope.orders[i].edit = false;
						$scope.orders[i].editKind = {};
						$scope.orders[i].editmarks = $scope.orders[i].Remarks;
					}
					$scope.orderEditIndex = -1;
					//分页处理
					$scope.orderTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.orderPages = [];
					var start = 1;
					if( $scope.orderCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.orderTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.orderCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.orderTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.orderTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.orderTotalPage || $scope.orderTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.orderCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.orderPages.push(json);
						}
					}
					if($scope.orderTotalPage <= 1) {
						$scope.orderShowPrev = false;
						$scope.orderShowNext = false;
					}
					else {
						$scope.orderShowPrev = true;
						$scope.orderShowNext = true;
					}
				}
				else {
					alert("获取数据失败");
				}
			})
		}
	}

	$scope.cspManageorderLoopLast = function() {
		if($scope.orderCurrentPage === $scope.orderTotalPage) {}
		else {
			var jsonorder = {};
			$scope.orderCurrentPage = $scope.orderTotalPage;
			jsonorder.page = $scope.orderCurrentPage;
			jsonorder.pageCount = $scope.pageCount;
			jsonorder.stats = $scope.orderCurrentKind.osid;
			ManageService.cspManageGetAllOrder(jsonorder,function(res) {
				if(res.result === "succeed") {
					$scope.orderKinds = res.ostate;
					$scope.orders = res.data;
					for(var i = 0; i < $scope.orders.length; i++) {
						$scope.orders[i].edit = false;
						$scope.orders[i].editKind = {};
						$scope.orders[i].editmarks = $scope.orders[i].Remarks;
					}
					$scope.orderEditIndex = -1;
					//分页处理
					$scope.orderTotalPage = Math.ceil(res.count/$scope.pageCount) ;
					$scope.orderPages = [];
					var start = 1;
					if( $scope.orderCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.orderTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.orderCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.orderTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.orderTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.orderTotalPage || $scope.orderTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.orderCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.orderPages.push(json);
						}
					}
					if($scope.orderTotalPage <= 1) {
						$scope.orderShowPrev = false;
						$scope.orderShowNext = false;
					}
					else {
						$scope.orderShowPrev = true;
						$scope.orderShowNext = true;
					}
				}
				else {
					alert("获取数据失败");
				}
			})
		}
	}

	//导入现货数据
	$scope.cspManageLoadSpot = function() {
		if($scope.productType === 1) {
			//产品
			$scope.currentProduct.spotload = true;
			$scope.currentProduct.spotadd = false;
			$scope.currentProduct.loadspot = {};
			$scope.currentProduct.loadspot.loading = false;
			$scope.currentProduct.loadspot.fileRight = false;
			$scope.currentProduct.loadspot.fileError = false;
			$scope.currentProduct.loadspot.errorTip = "";
			$scope.currentProduct.loadspot.spots = [];
		}
		else {
			//模拟产品
			$scope.currentanalogProduct.spotload = true;
			$scope.currentanalogProduct.spotadd = false;
			$scope.currentanalogProduct.loadspot = {};
			$scope.currentanalogProduct.loadspot.loading = false;
			$scope.currentanalogProduct.loadspot.fileRight = false;
			$scope.currentanalogProduct.loadspot.fileError = false;
			$scope.currentanalogProduct.loadspot.errorTip = "";
			$scope.currentanalogProduct.loadspot.spots = [];
		}
		$scope.timePromise = undefined;
		var second = 1;
		$scope.timePromise = $interval(function(){
			if(second<=0){
			  $interval.cancel($scope.timePromise);
			  $scope.timePromise = undefined;
			  var height = document.getElementById('csp_manage_spot_load_data_div').offsetTop;
			  window.scrollTo(0,height - 300);
			}else{
			  second--;
			}
		},1,1000);
	}

	$scope.cspManageSpotLoadDataSelectFile = function() {
		if($scope.productType ===1) {
			$scope.currentProduct.loadspot.fileError = false;
			$scope.currentProduct.loadspot.errorTip = "";
			document.getElementById('csp_manage_spot_file_load_form').reset();
			document.getElementById('csp_manage_spot_file_load_input').click();
		}
		else {
			$scope.currentanalogProduct.loadspot.fileError = false;
			$scope.currentanalogProduct.loadspot.errorTip = "";
			document.getElementById('csp_manage_spot_file_load_form').reset();
			document.getElementById('csp_manage_spot_file_load_input').click();
		}
	}

	$scope.cspManageSpotLoadFileReady = function() {
		if($scope.productType === 1) {
			//产品
			$scope.currentProduct.loadspot.loading = true;
			var fd1 = new FormData();
	        var file1 = document.getElementById('csp_manage_spot_file_load_input').files[0];
	        fd1.append('file', file1);
			ManageService.cspManageSpotLoadFile(fd1,function(res1) {
				$scope.currentProduct.loadspot.loading = false;
				if(res1.result === "succeed") {
					if(res1.file === true) {
						$scope.currentProduct.loadspot.fileRight = true;
						for(var i = 0; i < res1.data.length; i ++) {
							$scope.currentProduct.loadspot.spots.push(res1.data[i]);
						}
					}
					else {
						$scope.currentProduct.loadspot.fileError = true;
						$scope.currentProduct.loadspot.errorTip = "文件内容格式错误";
					}
				}
				else {
					$scope.currentProduct.loadspot.fileError = true;
					$scope.currentProduct.loadspot.errorTip = "文件上传失败";
				}
			})
		}
		else {
			//模拟产品
			$scope.currentanalogProduct.loadspot.loading = true;
			var fd1 = new FormData();
	        var file1 = document.getElementById('csp_manage_spot_file_load_input').files[0];
	        fd1.append('file', file1);
			ManageService.cspManageSpotLoadFile(fd1,function(res1) {
				$scope.currentanalogProduct.loadspot.loading = false;
				if(res1.result === "succeed") {
					if(res1.file === true) {
						$scope.currentanalogProduct.loadspot.fileRight = true;
						for(var i = 0; i < res1.data.length; i ++) {
							$scope.currentanalogProduct.loadspot.spots.push(res1.data[i]);
						}
					}
					else {
						$scope.currentanalogProduct.loadspot.fileError = true;
						$scope.currentanalogProduct.loadspot.errorTip = "文件内容格式错误";
					}
				}
				else {
					$scope.currentanalogProduct.loadspot.fileError = true;
					$scope.currentanalogProduct.loadspot.errorTip = "文件上传失败";
				}
			})
		}
	}

	$scope.cspManageSpotFileError = function() {
		if($scope.productType === 1) {
			$scope.currentproduct.loadspot.fileError = true;
			$scope.currentproduct.loadspot.errorTip = "文件格式错误";
		}
		else {
			$scope.currentanalogProduct.loadspot.fileError = true;
			$scope.currentanalogProduct.loadspot.errorTip = "文件格式错误";
		}
	}

	$scope.cspManageSpotLoadDeleteData = function(index) {
		if($scope.productType === 1) {
			$scope.currentProduct.loadspot.spots.splice(index,1);
			if($scope.currentProduct.loadspot.spots.length === 0) {
				$scope.currentProduct.loadspot.fileRight = false;
			}
		}
		else {
			$scope.currentanalogProduct.loadspot.spots.splice(index,1);
			if($scope.currentanalogProduct.loadspot.spots.length === 0) {
				$scope.currentanalogProduct.loadspot.fileRight = false;
			}
		}
	}

	$scope.cspManageLoadSpotClearTable = function() {
		if($scope.productType === 1) {
			$scope.currentProduct.loadspot.spots = [];
			$scope.currentProduct.loadspot.fileRight = false;
		}
		else {
			$scope.currentanalogProduct.loadspot.spots = [];
			$scope.currentanalogProduct.loadspot.fileRight = false;
		}
	}

	$scope.cspManageLoadSpotLoadTable = function() {
		var err = false;
		//检查数据
		//验证浮点数
		var reg = /^(\d{1,14})+(\.\d+)?$/;
		//验证整数
		var reg2 = /^(\d{1,11})$/;
		//验证日期
		var reg1 = /^(\d{4})-(\d{1,2})-(\d{1,2})$/;
		var dateArr = [];
		var jsonload = {};
		if($scope.productType === 1) {
			var i = 0;
			for(i = 0 ; i < $scope.currentProduct.loadspot.spots.length ; i ++) {
				for(i = 0; i < $scope.currentProduct.loadspot.spots.length ; i++) {
					if($scope.currentProduct.loadspot.spots[i].date === undefined || !(reg1.test($scope.currentProduct.loadspot.spots[i].date))) {
						err = true;
						break;
					}
					else if($scope.currentProduct.loadspot.spots[i].code === undefined || $scope.currentProduct.loadspot.spots[i].code.length <= 0 || $scope.currentProduct.loadspot.spots[i].code.length >32 ) {
						err = true;
						break;
					}
					else if($scope.currentProduct.loadspot.spots[i].cname === undefined || $scope.currentProduct.loadspot.spots[i].cname.length <= 0 || $scope.currentProduct.loadspot.spots[i].cname.length > 50 ) {
						err = true;
						break;
					}
					else if($scope.currentProduct.loadspot.spots[i].volume === undefined || !(reg2.test($scope.currentProduct.loadspot.spots[i].volume))) {
						err = true;
						break;
					}
					else if($scope.currentProduct.loadspot.spots[i].volamt === undefined || !(reg.test($scope.currentProduct.loadspot.spots[i].volamt))) {
						err = true;
						break;
					}
					else if($scope.currentProduct.loadspot.spots[i].last === undefined || !(reg.test($scope.currentProduct.loadspot.spots[i].last))) {
						err = true;
						break;
					}
					else {
						// //将date添加到数组，并判断重复
						// var j = 0;
						// for(j = 0; j < dateArr.length; j++) {
						// 	if($scope.currentProduct.loadspot.spots[i].date === dateArr[j]) {
						// 		err = true;
						// 		break;
						// 	}
						// }
						// if( j >= dateArr.length) {
						// 	dateArr.push($scope.currentProduct.loadspot.spots[i].date);
						// }
					}
				}
			}
			jsonload.count = $scope.currentProduct.loadspot.spots.length;
			jsonload.spots = $scope.currentProduct.loadspot.spots;
			jsonload.proid = $scope.currentProduct.id;
		}
		else {
			var i = 0;
			for(i = 0 ; i < $scope.currentanalogProduct.loadspot.spots.length ; i ++) {
				for(i = 0; i < $scope.currentanalogProduct.loadspot.spots.length ; i++) {
					if($scope.currentanalogProduct.loadspot.spots[i].date === undefined || !(reg1.test($scope.currentanalogProduct.loadspot.spots[i].date))) {
						err = true;
						break;
					}
					else if($scope.currentanalogProduct.loadspot.spots[i].code === undefined || $scope.currentanalogProduct.loadspot.spots[i].code.length <= 0 || $scope.currentanalogProduct.loadspot.spots[i].code.length >32 ) {
						err = true;
						break;
					}
					else if($scope.currentanalogProduct.loadspot.spots[i].cname === undefined || $scope.currentanalogProduct.loadspot.spots[i].cname.length <= 0 || $scope.currentanalogProduct.loadspot.spots[i].cname.length > 50 ) {
						err = true;
						break;
					}
					else if($scope.currentanalogProduct.loadspot.spots[i].volume === undefined || !(reg2.test($scope.currentanalogProduct.loadspot.spots[i].volume))) {
						err = true;
						break;
					}
					else if($scope.currentanalogProduct.loadspot.spots[i].volamt === undefined || !(reg.test($scope.currentanalogProduct.loadspot.spots[i].volamt))) {
						err = true;
						break;
					}
					else if($scope.currentanalogProduct.loadspot.spots[i].last === undefined || !(reg.test($scope.currentanalogProduct.loadspot.spots[i].last))) {
						err = true;
						break;
					}
					else {
						// //将date添加到数组，并判断重复
						// var j = 0;
						// for(j = 0; j < dateArr.length; j++) {
						// 	if($scope.currentanalogProduct.loadspot.spots[i].date === dateArr[j]) {
						// 		err = true;
						// 		break;
						// 	}
						// }
						// if( j >= dateArr.length) {
						// 	dateArr.push($scope.currentanalogProduct.loadspot.spots[i].date);
						// }
					}
				}
			}
			jsonload.count = $scope.currentanalogProduct.loadspot.spots.length;
			jsonload.spots = $scope.currentanalogProduct.loadspot.spots;
			jsonload.proid = $scope.currentanalogProduct.id;
		}
		//提交到后台
		if(err === true) {
			if($scope.productType ===1) {
				$scope.currentProduct.loadspot.fileError = true;
				$scope.currentProduct.loadspot.errorTip = "请检查数据格式是否正确";
			}
			else {
				$scope.currentanalogProduct.loadspot.fileError = true;
				$scope.currentanalogProduct.loadspot.errorTip = "请检查数据格式是否正确";
			}
		}
		else {
			jsonload.protype = $scope.productType;
			ManageService.cspManageLoadSpotToDb(jsonload,function(loadres) {
				if(loadres.result === "succeed") {
					//获取期货数据
					var jsonspot = {};
					if($scope.productType === 1) {
						$scope.currentProduct.spotload = false;
						jsonspot.proid = $scope.currentProduct.id;
					}
					else {
						$scope.currentanalogProduct.spotload = false;
						jsonspot.proid = $scope.currentanalogProduct.id;
					}
					jsonspot.protype = $scope.productType;
					$scope.spotCurrentPage = 1;
					jsonspot.page = $scope.spotCurrentPage;
					jsonspot.pageCount = $scope.pageCount;
					ManageService.cspManageGetSpot(jsonspot,function(spotres) {
						if(spotres.result === "succeed") {
							if($scope.productType === 1) {
								$scope.currentProduct.spots = spotres.data;
								$scope.currentProduct.checkallspot = false;
								for(var m = 0; m < $scope.currentProduct.spots.length; m++) {
									$scope.currentProduct.spots[m].edit = false;
									$scope.currentProduct.spots[m].checked = false;
								}
								if(spotres.data.length === 0) {
									$scope.currentProduct.showLoadSpot = true;
								}
								else {
									$scope.currentProduct.showLoadSpot = false;
								}
							}
							else {
								$scope.currentanalogProduct.spots = spotres.data;
								$scope.currentanalogProduct.checkallspot = false;
								for(var m = 0; m < $scope.currentanalogProduct.spots.length; m++) {
									$scope.currentanalogProduct.spots[m].edit = false;
									$scope.currentanalogProduct.spots[m].checked = false;
								}
								if(spotres.data.length === 0) {
									$scope.currentanalogProduct.showLoadSpot = true;
								}
								else {
									$scope.currentanalogProduct.showLoadSpot = false;
								}
							}
							//设计分页
							console.log(spotres.count);
							$scope.spotTotalPage = Math.ceil(spotres.count/$scope.pageCount) ;
							$scope.spotPages = [];
							var start = 1;
							if( $scope.spotCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.spotTotalPage <= $scope.itemCount) {
								start = 1;
							}
							else {
								start = $scope.spotCurrentPage - Math.ceil($scope.itemCount/2) +1;
								if($scope.spotTotalPage -  start + 1 < $scope.itemCount ) {
									start = $scope.spotTotalPage - $scope.itemCount +1;
								}
							}
							for( var r = start ; r < start + $scope.itemCount; r ++ ) {
								if(r > $scope.spotTotalPage || $scope.spotTotalPage <= 1) {
									break;
								}
								else {
									var json = {};
									json.num = r;
									if(r === $scope.spotCurrentPage) {
										json.select = true;
									}
									else {
										json.select = false;
									}
									$scope.spotPages.push(json);
								}
							}
							if($scope.spotTotalPage <= 1) {
								$scope.spotShowPrev = false;
								$scope.spotShowNext = false;
							}
							else {
								$scope.spotShowPrev = true;
								$scope.spotShowNext = true;
							}
						}
						else {
							alert("获取数据失败");
						}
					})
				}
				else {
					alert("数据库异常");
				}
			})
		}
	}

	$scope.cspManageAddSpotSingleData = function() {
		var myDate = new Date();
		if($scope.productType === 1) {
			//产品
			$scope.currentProduct.spotadd = true;
			$scope.currentProduct.spotload = false;
			$scope.currentProduct.spotSingleData = {};
			$scope.currentProduct.spotSingleData.codeErr = false;
			$scope.currentProduct.spotSingleData.code = "";
			$scope.currentProduct.spotSingleData.nameErr = false;
			$scope.currentProduct.spotSingleData.cname = "";
			$scope.currentProduct.spotSingleData.volumeErr = false;
			$scope.currentProduct.spotSingleData.volume = "";
			$scope.currentProduct.spotSingleData.volamtErr = false;
			$scope.currentProduct.spotSingleData.volamt = "";
			$scope.currentProduct.spotSingleData.lastErr = false;
			$scope.currentProduct.spotSingleData.last = "";
			$scope.currentProduct.spotSingleData.dateErr = false;
			$scope.currentProduct.spotSingleData.date = myDate.toLocaleDateString().replace(/\//g,'-');;
		}
		else {
			//模拟产品
			$scope.currentanalogProduct.spotadd = true;
			$scope.currentanalogProduct.spotload = false;
			$scope.currentanalogProduct.spotSingleData = {};
			$scope.currentanalogProduct.spotSingleData.codeErr = false;
			$scope.currentanalogProduct.spotSingleData.code = "";
			$scope.currentanalogProduct.spotSingleData.nameErr = false;
			$scope.currentanalogProduct.spotSingleData.cname = "";
			$scope.currentanalogProduct.spotSingleData.volumeErr = false;
			$scope.currentanalogProduct.spotSingleData.volume = "";
			$scope.currentanalogProduct.spotSingleData.volamtErr = false;
			$scope.currentanalogProduct.spotSingleData.volamt = "";
			$scope.currentanalogProduct.spotSingleData.lastErr = false;
			$scope.currentanalogProduct.spotSingleData.last = "";
			$scope.currentanalogProduct.spotSingleData.dateErr = false;
			$scope.currentanalogProduct.spotSingleData.date = myDate.toLocaleDateString().replace(/\//g,'-');;
		}
		// $scope.timePromise = undefined;
		// var second = 1;
		// $scope.timePromise = $interval(function(){
		// 	if(second<=0){
		// 	  $interval.cancel($scope.timePromise);
		// 	  $scope.timePromise = undefined;
		// 	  var height = document.getElementById('csp_manage_product_spot_info_div').offsetTop;
		// 	  window.scrollTo(0,height - 300);
		// 	}else{
		// 	  second--;
		// 	}
		// },1,1000);
	}

	$scope.cspManageAddSpotDataCancel = function() {
		if($scope.productType === 1) {
			$scope.currentProduct.spotadd = false;
		}
		else {
			$scope.currentanalogProduct.spotadd = false;
		}
		// var height = document.getElementById('csp_manage_product_spot_info_div').offsetTop;
		// window.scrollTo(0,height );
	}
	$scope.cspManageAddSpotDataSure = function() {
		//验证浮点数
		var reg = /^(\d{1,14})+(\.\d+)?$/;
		//验证整数
		var reg2 = /^(\d{1,11})$/;
		//验证日期
		var reg1 = /^(\d{4})-(\d{1,2})-(\d{1,2})$/;
		var err =false;
		var jsonmit = {};
		if($scope.productType === 1) {
			console.log($scope.currentProduct.spotSingleData.cname,$scope.currentProduct.spotSingleData.volume);
			if($scope.currentProduct.spotSingleData.date === undefined || !(reg1.test($scope.currentProduct.spotSingleData.date))) {
				err = true;
				$scope.currentProduct.spotSingleData.dateErr = true;
			}
			if($scope.currentProduct.spotSingleData.code === undefined || $scope.currentProduct.spotSingleData.code === ""  ) {
				err = true;
				$scope.currentProduct.spotSingleData.codeErr = true;
			}
			if($scope.currentProduct.spotSingleData.cname === undefined || $scope.currentProduct.spotSingleData.cname === "") {
				err = true;
				$scope.currentProduct.spotSingleData.nameErr = true;
				console.log($scope.currentProduct.spotSingleData.nameErr);
			}
			if($scope.currentProduct.spotSingleData.volume === undefined || !(reg2.test($scope.currentProduct.spotSingleData.volume))) {
				err = true;
				$scope.currentProduct.spotSingleData.volumeErr = true;
			}
			if($scope.currentProduct.spotSingleData.volamt === undefined || !(reg.test($scope.currentProduct.spotSingleData.volamt))) {
				err = true;
				$scope.currentProduct.spotSingleData.volamtErr = true;
			}
			if($scope.currentProduct.spotSingleData.last === undefined || !(reg.test($scope.currentProduct.spotSingleData.last))) {
				err = true;
				$scope.currentProduct.spotSingleData.lastErr = true;
			}
			jsonmit.data = $scope.currentProduct.spotSingleData;
			jsonmit.proid = $scope.currentProduct.id;
		}
		else {
			if($scope.currentanalogProduct.spotSingleData.date === undefined || !(reg1.test($scope.currentanalogProduct.spotSingleData.date))) {
				err = true;
				$scope.currentanalogProduct.spotSingleData.dateErr = true;
			}
			if($scope.currentanalogProduct.spotSingleData.code === undefined || $scope.currentanalogProduct.spotSingleData.code === ""  ) {
				err = true;
				$scope.currentanalogProduct.spotSingleData.codeErr = true;
			}
			if($scope.currentanalogProduct.spotSingleData.cname === undefined || $scope.currentanalogProduct.spotSingleData.cname === "") {
				err = true;
				$scope.currentanalogProduct.spotSingleData.nameErr = true;
			}
			if($scope.currentanalogProduct.spotSingleData.volume === undefined || !(reg2.test($scope.currentanalogProduct.spotSingleData.volume))) {
				err = true;
				$scope.currentanalogProduct.spotSingleData.volumeErr = true;
			}
			if($scope.currentanalogProduct.spotSingleData.volamt === undefined || !(reg.test($scope.currentanalogProduct.spotSingleData.volamt))) {
				err = true;
				$scope.currentanalogProduct.spotSingleData.volamtErr = true;
			}
			if($scope.currentanalogProduct.spotSingleData.last === undefined || !(reg.test($scope.currentanalogProduct.spotSingleData.last))) {
				err = true;
				$scope.currentanalogProduct.spotSingleData.lastErr = true;
			}
			jsonmit.data = $scope.currentanalogProduct.spotSingleData;
			jsonmit.proid = $scope.currentanalogProduct.id;
		}
		if(err === false) {
			jsonmit.protype = $scope.productType;
			ManageService.cspManageSpotInsertSingleData(jsonmit,function(mitres) {
				if(mitres.result === "succeed") {
					//获取期货数据
					var jsonspot = {};
					if($scope.productType === 1) {
						$scope.currentProduct.spotadd = false;
						jsonspot.proid = $scope.currentProduct.id;
					}
					else {
						$scope.currentanalogProduct.spotadd = false;
						jsonspot.proid = $scope.currentanalogProduct.id;
					}
					jsonspot.protype = $scope.productType;
					$scope.spotCurrentPage = 1;
					jsonspot.page = $scope.spotCurrentPage;
					jsonspot.pageCount = $scope.pageCount;
					ManageService.cspManageGetSpot(jsonspot,function(spotres) {
						if(spotres.result === "succeed") {
							if($scope.productType === 1) {
								$scope.currentProduct.spots = spotres.data;
								$scope.currentProduct.checkallspot = false;
								for(var m = 0; m < $scope.currentProduct.spots.length; m++) {
									$scope.currentProduct.spots[m].edit = false;
									$scope.currentProduct.spots[m].checked = false;
								}
								if(spotres.data.length === 0) {
									$scope.currentProduct.showLoadSpot = true;
								}
								else {
									$scope.currentProduct.showLoadSpot = false;
								}
							}
							else {
								$scope.currentanalogProduct.spots = spotres.data;
								$scope.currentanalogProduct.checkallspot = false;
								for(var m = 0; m < $scope.currentanalogProduct.spots.length; m++) {
									$scope.currentanalogProduct.spots[m].edit = false;
									$scope.currentanalogProduct.spots[m].checked = false;
								}
								if(spotres.data.length === 0) {
									$scope.currentanalogProduct.showLoadSpot = true;
								}
								else {
									$scope.currentanalogProduct.showLoadSpot = false;
								}
							}
							//设计分页
							console.log(spotres.count);
							$scope.spotTotalPage = Math.ceil(spotres.count/$scope.pageCount) ;
							$scope.spotPages = [];
							var start = 1;
							if( $scope.spotCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.spotTotalPage <= $scope.itemCount) {
								start = 1;
							}
							else {
								start = $scope.spotCurrentPage - Math.ceil($scope.itemCount/2) +1;
								if($scope.spotTotalPage -  start + 1 < $scope.itemCount ) {
									start = $scope.spotTotalPage - $scope.itemCount +1;
								}
							}
							for( var r = start ; r < start + $scope.itemCount; r ++ ) {
								if(r > $scope.spotTotalPage || $scope.spotTotalPage <= 1) {
									break;
								}
								else {
									var json = {};
									json.num = r;
									if(r === $scope.spotCurrentPage) {
										json.select = true;
									}
									else {
										json.select = false;
									}
									$scope.spotPages.push(json);
								}
							}
							if($scope.spotTotalPage <= 1) {
								$scope.spotShowPrev = false;
								$scope.spotShowNext = false;
							}
							else {
								$scope.spotShowPrev = true;
								$scope.spotShowNext = true;
							}
						}
						else {
							alert("获取数据失败");
						}
					})
				}
				else {
					alert("数据库异常");
				}
			})
		}
	}

	$scope.cspManageHideSpotError = function() {
		if($scope.productType === 1) {
			if($scope.currentProduct.spotSingleData.code !== "") {
				$scope.currentProduct.spotSingleData.codeErr = false;
			}
			if($scope.currentProduct.spotSingleData.cname !== "") {
				$scope.currentProduct.spotSingleData.nameErr = false;
			}
			if($scope.currentProduct.spotSingleData.volume !== "") {
				$scope.currentProduct.spotSingleData.volumeErr = false;
			}
			if($scope.currentProduct.spotSingleData.volamt !== "") {
				$scope.currentProduct.spotSingleData.volamtErr = false;
			}
			if($scope.currentProduct.spotSingleData.last !== "") {
				$scope.currentProduct.spotSingleData.lastErr = false;
			}
			if($scope.currentProduct.spotSingleData.date !== "") {
				$scope.currentProduct.spotSingleData.dateErr = false;
			}
		}
		else {
			if($scope.currentanalogProduct.spotSingleData.code !== "") {
				$scope.currentanalogProduct.spotSingleData.codeErr = false;
			}
			if($scope.currentanalogProduct.spotSingleData.cname !== "") {
				$scope.currentanalogProduct.spotSingleData.nameErr = false;
			}
			if($scope.currentanalogProduct.spotSingleData.volume !== "") {
				$scope.currentanalogProduct.spotSingleData.volumeErr = false;
			}
			if($scope.currentanalogProduct.spotSingleData.volamt !== "") {
				$scope.currentanalogProduct.spotSingleData.volamtErr = false;
			}
			if($scope.currentanalogProduct.spotSingleData.last !== "") {
				$scope.currentanalogProduct.spotSingleData.lastErr = false;
			}
			if($scope.currentanalogProduct.spotSingleData.date !== "") {
				$scope.currentanalogProduct.spotSingleData.dateErr = false;
			}
		}
	}

	$scope.cspManageCheckAllSpots = function() {
		if($scope.productType === 1) {
			if ($scope.currentProduct.spotcheckall === false) {
				$scope.currentProduct.spotcheckall = true;
				for(var i = 0; i < $scope.currentProduct.spots.length; i++) {
					$scope.currentProduct.spots[i].checked = true;
				}
			}
			else {
				$scope.currentProduct.spotcheckall = false;
				for(var j = 0; j < $scope.currentProduct.spots.length; j++) {
					$scope.currentProduct.spots[j].checked = false;
				}
			}
		}
		else {
			if ($scope.currentanalogProduct.spotcheckall === false) {
				$scope.currentanalogProduct.spotcheckall = true;
				for(var i = 0; i < $scope.currentanalogProduct.spots.length; i++) {
					$scope.currentanalogProduct.spots[i].checked = true;
				}
			}
			else {
				$scope.currentanalogProduct.spotcheckall = false;
				for(var j = 0; j < $scope.currentanalogProduct.spots.length; j++) {
					$scope.currentanalogProduct.spots[j].checked = false;
				}
			}
		}
	}
	$scope.cspManageMultipleDeleteSpots = function() {
		var jsondelete = {};
		var idarr = [];
		if($scope.productType === 1) {
			for(var i = 0; i < $scope.currentProduct.spots.length; i++) {
				if($scope.currentProduct.spots[i].checked === true) {
					idarr.push($scope.currentProduct.spots[i].ID);
				}
			}
		}
		else {
			for(var i = 0; i < $scope.currentanalogProduct.spots.length; i++) {
				if($scope.currentanalogProduct.spots[i].checked === true) {
					idarr.push($scope.currentanalogProduct.spots[i].ID);
				}
			}
		}
		if(idarr.length > 0) {
			jsondelete.count = idarr.length;
			jsondelete.data = idarr;
			ManageService.cspManageMultipleDeleteSpots(jsondelete,function(delres) {
				if(delres.result === "succeed") {
					//获取期货数据
					var jsonspot = {};
					if($scope.productType === 1) {
						jsonspot.proid = $scope.currentProduct.id;
						jsonspot.protype = $scope.productType;
					}
					else {
						jsonspot.proid = $scope.currentanalogProduct.id;
						jsonspot.protype = $scope.productType;
					}
					$scope.spotCurrentPage = 1;
					jsonspot.page = $scope.spotCurrentPage;
					jsonspot.pageCount = $scope.pageCount;
					ManageService.cspManageGetSpot(jsonspot,function(spotres) {
						if(spotres.result === "succeed") {
							if($scope.productType === 1) {
								$scope.currentProduct.spots = spotres.data;
								$scope.currentProduct.checkallspot = false;
								for(var m = 0; m < $scope.currentProduct.spots.length; m++) {
									$scope.currentProduct.spots[m].edit = false;
									$scope.currentProduct.spots[m].checked = false;
								}
								if(spotres.data.length === 0) {
									$scope.currentProduct.showLoadSpot = true;
								}
								else {
									$scope.currentProduct.showLoadSpot = false;
								}
							}
							else {
								$scope.currentanalogProduct.spots = spotres.data;
								$scope.currentanalogProduct.checkallspot = false;
								for(var m = 0; m < $scope.currentanalogProduct.spots.length; m++) {
									$scope.currentanalogProduct.spots[m].edit = false;
									$scope.currentanalogProduct.spots[m].checked = false;
								}
								if(spotres.data.length === 0) {
									$scope.currentanalogProduct.showLoadSpot = true;
								}
								else {
									$scope.currentanalogProduct.showLoadSpot = false;
								}
							}
							//设计分页
							console.log(spotres.count);
							$scope.spotTotalPage = Math.ceil(spotres.count/$scope.pageCount) ;
							$scope.spotPages = [];
							var start = 1;
							if( $scope.spotCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.spotTotalPage <= $scope.itemCount) {
								start = 1;
							}
							else {
								start = $scope.spotCurrentPage - Math.ceil($scope.itemCount/2) +1;
								if($scope.spotTotalPage -  start + 1 < $scope.itemCount ) {
									start = $scope.spotTotalPage - $scope.itemCount +1;
								}
							}
							for( var r = start ; r < start + $scope.itemCount; r ++ ) {
								if(r > $scope.spotTotalPage || $scope.spotTotalPage <= 1) {
									break;
								}
								else {
									var json = {};
									json.num = r;
									if(r === $scope.spotCurrentPage) {
										json.select = true;
									}
									else {
										json.select = false;
									}
									$scope.spotPages.push(json);
								}
							}
							if($scope.spotTotalPage <= 1) {
								$scope.spotShowPrev = false;
								$scope.spotShowNext = false;
							}
							else {
								$scope.spotShowPrev = true;
								$scope.spotShowNext = true;
							}
						}
						else {
							alert("获取数据失败");
						}
					})
				}
				else {
					alert("删除失败");
				}
			})
		}
	}
	$scope.cspManageDeleteSpotDate = function(index) {
		var jsondelete = {};
		var idarr = [];
		if($scope.productType === 1) {
			idarr.push($scope.currentProduct.spots[index].ID);
		}
		else {
			idarr.push($scope.currentanalogProduct.spots[index].ID);
		}
		jsondelete.count = 1;
		jsondelete.data = idarr;
		ManageService.cspManageMultipleDeleteSpots(jsondelete,function(delres) {
			if(delres.result === "succeed") {
				//获取期货数据
				var jsonspot = {};
				if($scope.productType === 1) {
					jsonspot.proid = $scope.currentProduct.id;
					jsonspot.protype = $scope.productType;
				}
				else {
					jsonspot.proid = $scope.currentanalogProduct.id;
					jsonspot.protype = $scope.productType;
				}
				$scope.spotCurrentPage = 1;
				jsonspot.page = $scope.spotCurrentPage;
				jsonspot.pageCount = $scope.pageCount;
				ManageService.cspManageGetSpot(jsonspot,function(spotres) {
					if(spotres.result === "succeed") {
						if($scope.productType === 1) {
							$scope.currentProduct.spots = spotres.data;
							$scope.currentProduct.checkallspot = false;
							for(var m = 0; m < $scope.currentProduct.spots.length; m++) {
								$scope.currentProduct.spots[m].edit = false;
								$scope.currentProduct.spots[m].checked = false;
							}
							if(spotres.data.length === 0) {
								$scope.currentProduct.showLoadSpot = true;
							}
							else {
								$scope.currentProduct.showLoadSpot = false;
							}
						}
						else {
							$scope.currentanalogProduct.spots = spotres.data;
							$scope.currentanalogProduct.checkallspot = false;
							for(var m = 0; m < $scope.currentanalogProduct.spots.length; m++) {
								$scope.currentanalogProduct.spots[m].edit = false;
								$scope.currentanalogProduct.spots[m].checked = false;
							}
							if(spotres.data.length === 0) {
								$scope.currentanalogProduct.showLoadSpot = true;
							}
							else {
								$scope.currentanalogProduct.showLoadSpot = false;
							}
						}
						//设计分页
						console.log(spotres.count);
						$scope.spotTotalPage = Math.ceil(spotres.count/$scope.pageCount) ;
						$scope.spotPages = [];
						var start = 1;
						if( $scope.spotCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.spotTotalPage <= $scope.itemCount) {
							start = 1;
						}
						else {
							start = $scope.spotCurrentPage - Math.ceil($scope.itemCount/2) +1;
							if($scope.spotTotalPage -  start + 1 < $scope.itemCount ) {
								start = $scope.spotTotalPage - $scope.itemCount +1;
							}
						}
						for( var r = start ; r < start + $scope.itemCount; r ++ ) {
							if(r > $scope.spotTotalPage || $scope.spotTotalPage <= 1) {
								break;
							}
							else {
								var json = {};
								json.num = r;
								if(r === $scope.spotCurrentPage) {
									json.select = true;
								}
								else {
									json.select = false;
								}
								$scope.spotPages.push(json);
							}
						}
						if($scope.spotTotalPage <= 1) {
							$scope.spotShowPrev = false;
							$scope.spotShowNext = false;
						}
						else {
							$scope.spotShowPrev = true;
							$scope.spotShowNext = true;
						}
					}
					else {
						alert("获取数据失败");
					}
				})
			}
			else {
				alert("删除失败");
			}
		})
	}
	$scope.cspManageSpotCheckClick = function() {
		if($scope.productType === 1) {
			$scope.currentProduct.spotcheckall = true;
			for(var i = 0; i < $scope.currentProduct.spots.length; i++) {
				if($scope.currentProduct.spots[i].checked === false) {
					$scope.currentProduct.spotcheckall = false;
				}
			}
		}
		else {
			$scope.currentanalogProduct.spotcheckall = true;
			for(var i = 0; i < $scope.currentanalogProduct.spots.length; i++) {
				if($scope.currentanalogProduct.spots[i].checked === false) {
					$scope.currentanalogProduct.spotcheckall = false;
				}
			}
		}
	}
	$scope.cspManageEditSpotDate = function(index) {
		if($scope.productType === 1) {
			$scope.currentProduct.spots[index].edit = true;
			$scope.currentProduct.spots[index].editspot = {};
			$scope.currentProduct.spots[index].editspot.ID = $scope.currentProduct.spots[index].ID;
			$scope.currentProduct.spots[index].editspot.date = $scope.currentProduct.spots[index].time;
			$scope.currentProduct.spots[index].editspot.code = $scope.currentProduct.spots[index].code;
			$scope.currentProduct.spots[index].editspot.cname = $scope.currentProduct.spots[index].cname;
			$scope.currentProduct.spots[index].editspot.volume = $scope.currentProduct.spots[index].volume;
			$scope.currentProduct.spots[index].editspot.volamt = $scope.currentProduct.spots[index].volamt;
			$scope.currentProduct.spots[index].editspot.last = $scope.currentProduct.spots[index].last;
		}
		else {
			$scope.currentanalogProduct.spots[index].edit = true;
			$scope.currentanalogProduct.spots[index].editspot = {};
			$scope.currentanalogProduct.spots[index].editspot.ID = $scope.currentanalogProduct.spots[index].ID;
			$scope.currentanalogProduct.spots[index].editspot.date = $scope.currentanalogProduct.spots[index].time;
			$scope.currentanalogProduct.spots[index].editspot.code = $scope.currentanalogProduct.spots[index].code;
			$scope.currentanalogProduct.spots[index].editspot.cname = $scope.currentanalogProduct.spots[index].cname;
			$scope.currentanalogProduct.spots[index].editspot.volume = $scope.currentanalogProduct.spots[index].volume;
			$scope.currentanalogProduct.spots[index].editspot.volamt = $scope.currentanalogProduct.spots[index].volamt;
			$scope.currentanalogProduct.spots[index].editspot.last = $scope.currentanalogProduct.spots[index].last;
		}
	}

	$scope.cspManageEditSpotDateSave = function(index) {
		var reg = /^(\d{1,14})+(\.\d+)?$/;
		//验证整数
		var reg2 = /^(\d{1,11})$/;
		//验证日期
		var reg1 = /^(\d{4})-(\d{1,2})-(\d{1,2})$/;
		var err =false;
		var jsonmit = {};
		if($scope.productType === 1) {
			if($scope.currentProduct.spots[index].editspot.date === undefined || !(reg1.test($scope.currentProduct.spots[index].editspot.date))) {
				err = true;
			}
			if($scope.currentProduct.spots[index].editspot.code === undefined || $scope.currentProduct.spots[index].editspot.code === ""  ) {
				err = true;
			}
			if($scope.currentProduct.spots[index].editspot.cname === undefined || $scope.currentProduct.spots[index].editspot.cname === "") {
				err = true;
			}
			if($scope.currentProduct.spots[index].editspot.volume === undefined || !(reg2.test($scope.currentProduct.spots[index].editspot.volume))) {
				err = true;
			}
			if($scope.currentProduct.spots[index].editspot.volamt === undefined || !(reg.test($scope.currentProduct.spots[index].editspot.volamt))) {
				err = true;
			}
			if($scope.currentProduct.spots[index].editspot.last === undefined || !(reg.test($scope.currentProduct.spots[index].last))) {
				err = true;
			}
			jsonmit = $scope.currentProduct.spots[index].editspot;
		}
		else {
			if($scope.currentanalogProduct.spots[index].editspot.date === undefined || !(reg1.test($scope.currentanalogProduct.spots[index].editspot.date))) {
				err = true;
			}
			if($scope.currentanalogProduct.spots[index].editspot.code === undefined || $scope.currentanalogProduct.spots[index].editspot.code === ""  ) {
				err = true;
			}
			if($scope.currentanalogProduct.spots[index].editspot.cname === undefined || $scope.currentanalogProduct.spots[index].editspot.cname === "") {
				err = true;
			}
			if($scope.currentanalogProduct.spots[index].editspot.volume === undefined || !(reg2.test($scope.currentanalogProduct.spots[index].editspot.volume))) {
				err = true;
			}
			if($scope.currentanalogProduct.spots[index].editspot.volamt === undefined || !(reg.test($scope.currentanalogProduct.spots[index].editspot.volamt))) {
				err = true;
			}
			if($scope.currentanalogProduct.spots[index].editspot.last === undefined || !(reg.test($scope.currentanalogProduct.spots[index].last))) {
				err = true;
			}
			jsonmit = $scope.currentanalogProduct.spots[index].editspot;
		}
		if(err === true) {
			alert("数据格式错误！");
		}
		else {
			ManageService.cspManageUpdateSpot(jsonmit,function(upres) {
				if(upres.result === "succeed") {
					//获取期货数据
					var jsonspot = {};
					if($scope.productType === 1) {
						jsonspot.proid = $scope.currentProduct.id;
						jsonspot.protype = $scope.productType;
					}
					else {
						jsonspot.proid = $scope.currentanalogProduct.id;
						jsonspot.protype = $scope.productType;
					}
					$scope.spotCurrentPage = 1;
					jsonspot.page = $scope.spotCurrentPage;
					jsonspot.pageCount = $scope.pageCount;
					ManageService.cspManageGetSpot(jsonspot,function(spotres) {
						if(spotres.result === "succeed") {
							if($scope.productType === 1) {
								$scope.currentProduct.spots = spotres.data;
								$scope.currentProduct.checkallspot = false;
								for(var m = 0; m < $scope.currentProduct.spots.length; m++) {
									$scope.currentProduct.spots[m].edit = false;
									$scope.currentProduct.spots[m].checked = false;
								}
								if(spotres.data.length === 0) {
									$scope.currentProduct.showLoadSpot = true;
								}
								else {
									$scope.currentProduct.showLoadSpot = false;
								}
							}
							else {
								$scope.currentanalogProduct.spots = spotres.data;
								$scope.currentanalogProduct.checkallspot = false;
								for(var m = 0; m < $scope.currentanalogProduct.spots.length; m++) {
									$scope.currentanalogProduct.spots[m].edit = false;
									$scope.currentanalogProduct.spots[m].checked = false;
								}
								if(spotres.data.length === 0) {
									$scope.currentanalogProduct.showLoadSpot = true;
								}
								else {
									$scope.currentanalogProduct.showLoadSpot = false;
								}
							}
							//设计分页
							console.log(spotres.count);
							$scope.spotTotalPage = Math.ceil(spotres.count/$scope.pageCount) ;
							$scope.spotPages = [];
							var start = 1;
							if( $scope.spotCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.spotTotalPage <= $scope.itemCount) {
								start = 1;
							}
							else {
								start = $scope.spotCurrentPage - Math.ceil($scope.itemCount/2) +1;
								if($scope.spotTotalPage -  start + 1 < $scope.itemCount ) {
									start = $scope.spotTotalPage - $scope.itemCount +1;
								}
							}
							for( var r = start ; r < start + $scope.itemCount; r ++ ) {
								if(r > $scope.spotTotalPage || $scope.spotTotalPage <= 1) {
									break;
								}
								else {
									var json = {};
									json.num = r;
									if(r === $scope.spotCurrentPage) {
										json.select = true;
									}
									else {
										json.select = false;
									}
									$scope.spotPages.push(json);
								}
							}
							if($scope.spotTotalPage <= 1) {
								$scope.spotShowPrev = false;
								$scope.spotShowNext = false;
							}
							else {
								$scope.spotShowPrev = true;
								$scope.spotShowNext = true;
							}
						}
						else {
							alert("获取数据失败");
						}
					})
				}
				else {
					alert("数据库异常");
				}
			})
		}
	}
	$scope.cspManageEditSpotDateCancel = function(index) {
		if($scope.productType === 1) {
			$scope.currentProduct.spots[index].edit = false;
		}
		else {
			$scope.currentanalogProduct.spots[index].edit = false;
		}
	}

	$scope.cspManagespotLoopToFirst = function() {
		if($scope.spotCurrentPage === 1) {}
		else {
			$scope.spotCurrentPage = 1;
			//获取期货数据
			var jsonspot = {};
			if($scope.productType === 1) {
				jsonspot.proid = $scope.currentProduct.id;
				jsonspot.protype = $scope.productType;
			}
			else {
				jsonspot.proid = $scope.currentanalogProduct.id;
				jsonspot.protype = $scope.productType;
			}
			jsonspot.page = $scope.spotCurrentPage;
			jsonspot.pageCount = $scope.pageCount;
			ManageService.cspManageGetSpot(jsonspot,function(spotres) {
				if(spotres.result === "succeed") {
					if($scope.productType === 1) {
						$scope.currentProduct.spots = spotres.data;
						$scope.currentProduct.checkallspot = false;
						for(var m = 0; m < $scope.currentProduct.spots.length; m++) {
							$scope.currentProduct.spots[m].edit = false;
							$scope.currentProduct.spots[m].checked = false;
						}
						if(spotres.data.length === 0) {
							$scope.currentProduct.showLoadSpot = true;
						}
						else {
							$scope.currentProduct.showLoadSpot = false;
						}
					}
					else {
						$scope.currentanalogProduct.spots = spotres.data;
						$scope.currentanalogProduct.checkallspot = false;
						for(var m = 0; m < $scope.currentanalogProduct.spots.length; m++) {
							$scope.currentanalogProduct.spots[m].edit = false;
							$scope.currentanalogProduct.spots[m].checked = false;
						}
						if(spotres.data.length === 0) {
							$scope.currentanalogProduct.showLoadSpot = true;
						}
						else {
							$scope.currentanalogProduct.showLoadSpot = false;
						}
					}
					//设计分页
					console.log(spotres.count);
					$scope.spotTotalPage = Math.ceil(spotres.count/$scope.pageCount) ;
					$scope.spotPages = [];
					var start = 1;
					if( $scope.spotCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.spotTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.spotCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.spotTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.spotTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.spotTotalPage || $scope.spotTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.spotCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.spotPages.push(json);
						}
					}
					if($scope.spotTotalPage <= 1) {
						$scope.spotShowPrev = false;
						$scope.spotShowNext = false;
					}
					else {
						$scope.spotShowPrev = true;
						$scope.spotShowNext = true;
					}
				}
				else {
					alert("获取数据失败");
				}
			})
		}
	}
	$scope.cspManagespotLoopPrev = function() {
		if($scope.spotCurrentPage === 1) {}
		else {
			$scope.spotCurrentPage = $scope.spotCurrentPage -1;
			//获取期货数据
			var jsonspot = {};
			if($scope.productType === 1) {
				jsonspot.proid = $scope.currentProduct.id;
				jsonspot.protype = $scope.productType;
			}
			else {
				jsonspot.proid = $scope.currentanalogProduct.id;
				jsonspot.protype = $scope.productType;
			}
			jsonspot.page = $scope.spotCurrentPage;
			jsonspot.pageCount = $scope.pageCount;
			ManageService.cspManageGetSpot(jsonspot,function(spotres) {
				if(spotres.result === "succeed") {
					if($scope.productType === 1) {
						$scope.currentProduct.spots = spotres.data;
						$scope.currentProduct.checkallspot = false;
						for(var m = 0; m < $scope.currentProduct.spots.length; m++) {
							$scope.currentProduct.spots[m].edit = false;
							$scope.currentProduct.spots[m].checked = false;
						}
						if(spotres.data.length === 0) {
							$scope.currentProduct.showLoadSpot = true;
						}
						else {
							$scope.currentProduct.showLoadSpot = false;
						}
					}
					else {
						$scope.currentanalogProduct.spots = spotres.data;
						$scope.currentanalogProduct.checkallspot = false;
						for(var m = 0; m < $scope.currentanalogProduct.spots.length; m++) {
							$scope.currentanalogProduct.spots[m].edit = false;
							$scope.currentanalogProduct.spots[m].checked = false;
						}
						if(spotres.data.length === 0) {
							$scope.currentanalogProduct.showLoadSpot = true;
						}
						else {
							$scope.currentanalogProduct.showLoadSpot = false;
						}
					}
					//设计分页
					console.log(spotres.count);
					$scope.spotTotalPage = Math.ceil(spotres.count/$scope.pageCount) ;
					$scope.spotPages = [];
					var start = 1;
					if( $scope.spotCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.spotTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.spotCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.spotTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.spotTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.spotTotalPage || $scope.spotTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.spotCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.spotPages.push(json);
						}
					}
					if($scope.spotTotalPage <= 1) {
						$scope.spotShowPrev = false;
						$scope.spotShowNext = false;
					}
					else {
						$scope.spotShowPrev = true;
						$scope.spotShowNext = true;
					}
				}
				else {
					alert("获取数据失败");
				}
			})
		}
	}
	$scope.cspManagespotLoopToPage = function(page) {
		if(page === $scope.spotCurrentPage) {}
		else {
			$scope.spotCurrentPage = page.num;
			//获取期货数据
			var jsonspot = {};
			if($scope.productType === 1) {
				jsonspot.proid = $scope.currentProduct.id;
				jsonspot.protype = $scope.productType;
			}
			else {
				jsonspot.proid = $scope.currentanalogProduct.id;
				jsonspot.protype = $scope.productType;
			}
			jsonspot.page = $scope.spotCurrentPage;
			jsonspot.pageCount = $scope.pageCount;
			ManageService.cspManageGetSpot(jsonspot,function(spotres) {
				if(spotres.result === "succeed") {
					if($scope.productType === 1) {
						$scope.currentProduct.spots = spotres.data;
						$scope.currentProduct.checkallspot = false;
						for(var m = 0; m < $scope.currentProduct.spots.length; m++) {
							$scope.currentProduct.spots[m].edit = false;
							$scope.currentProduct.spots[m].checked = false;
						}
						if(spotres.data.length === 0) {
							$scope.currentProduct.showLoadSpot = true;
						}
						else {
							$scope.currentProduct.showLoadSpot = false;
						}
					}
					else {
						$scope.currentanalogProduct.spots = spotres.data;
						$scope.currentanalogProduct.checkallspot = false;
						for(var m = 0; m < $scope.currentanalogProduct.spots.length; m++) {
							$scope.currentanalogProduct.spots[m].edit = false;
							$scope.currentanalogProduct.spots[m].checked = false;
						}
						if(spotres.data.length === 0) {
							$scope.currentanalogProduct.showLoadSpot = true;
						}
						else {
							$scope.currentanalogProduct.showLoadSpot = false;
						}
					}
					//设计分页
					console.log(spotres.count);
					$scope.spotTotalPage = Math.ceil(spotres.count/$scope.pageCount) ;
					$scope.spotPages = [];
					var start = 1;
					if( $scope.spotCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.spotTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.spotCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.spotTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.spotTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.spotTotalPage || $scope.spotTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.spotCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.spotPages.push(json);
						}
					}
					if($scope.spotTotalPage <= 1) {
						$scope.spotShowPrev = false;
						$scope.spotShowNext = false;
					}
					else {
						$scope.spotShowPrev = true;
						$scope.spotShowNext = true;
					}
				}
				else {
					alert("获取数据失败");
				}
			})
		}
	}
	$scope.cspManagespotLoopNext = function() {
		if($scope.spotCurrentPage === $scope.spotTotalPage) {}
		else {
			$scope.spotCurrentPage = $scope.spotCurrentPage + 1;
			//获取期货数据
			var jsonspot = {};
			if($scope.productType === 1) {
				jsonspot.proid = $scope.currentProduct.id;
				jsonspot.protype = $scope.productType;
			}
			else {
				jsonspot.proid = $scope.currentanalogProduct.id;
				jsonspot.protype = $scope.productType;
			}
			jsonspot.page = $scope.spotCurrentPage;
			jsonspot.pageCount = $scope.pageCount;
			ManageService.cspManageGetSpot(jsonspot,function(spotres) {
				if(spotres.result === "succeed") {
					if($scope.productType === 1) {
						$scope.currentProduct.spots = spotres.data;
						$scope.currentProduct.checkallspot = false;
						for(var m = 0; m < $scope.currentProduct.spots.length; m++) {
							$scope.currentProduct.spots[m].edit = false;
							$scope.currentProduct.spots[m].checked = false;
						}
						if(spotres.data.length === 0) {
							$scope.currentProduct.showLoadSpot = true;
						}
						else {
							$scope.currentProduct.showLoadSpot = false;
						}
					}
					else {
						$scope.currentanalogProduct.spots = spotres.data;
						$scope.currentanalogProduct.checkallspot = false;
						for(var m = 0; m < $scope.currentanalogProduct.spots.length; m++) {
							$scope.currentanalogProduct.spots[m].edit = false;
							$scope.currentanalogProduct.spots[m].checked = false;
						}
						if(spotres.data.length === 0) {
							$scope.currentanalogProduct.showLoadSpot = true;
						}
						else {
							$scope.currentanalogProduct.showLoadSpot = false;
						}
					}
					//设计分页
					console.log(spotres.count);
					$scope.spotTotalPage = Math.ceil(spotres.count/$scope.pageCount) ;
					$scope.spotPages = [];
					var start = 1;
					if( $scope.spotCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.spotTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.spotCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.spotTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.spotTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.spotTotalPage || $scope.spotTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.spotCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.spotPages.push(json);
						}
					}
					if($scope.spotTotalPage <= 1) {
						$scope.spotShowPrev = false;
						$scope.spotShowNext = false;
					}
					else {
						$scope.spotShowPrev = true;
						$scope.spotShowNext = true;
					}
				}
				else {
					alert("获取数据失败");
				}
			})
		}
	}
	$scope.cspManagespotLoopLast = function() {
		if($scope.spotCurrentPage === $scope.spotTotalPage) {}
		else {
			$scope.spotCurrentPage = $scope.spotTotalPage;
			//获取期货数据
			var jsonspot = {};
			if($scope.productType === 1) {
				jsonspot.proid = $scope.currentProduct.id;
				jsonspot.protype = $scope.productType;
			}
			else {
				jsonspot.proid = $scope.currentanalogProduct.id;
				jsonspot.protype = $scope.productType;
			}
			jsonspot.page = $scope.spotCurrentPage;
			jsonspot.pageCount = $scope.pageCount;
			ManageService.cspManageGetSpot(jsonspot,function(spotres) {
				if(spotres.result === "succeed") {
					if($scope.productType === 1) {
						$scope.currentProduct.spots = spotres.data;
						$scope.currentProduct.checkallspot = false;
						for(var m = 0; m < $scope.currentProduct.spots.length; m++) {
							$scope.currentProduct.spots[m].edit = false;
							$scope.currentProduct.spots[m].checked = false;
						}
						if(spotres.data.length === 0) {
							$scope.currentProduct.showLoadSpot = true;
						}
						else {
							$scope.currentProduct.showLoadSpot = false;
						}
					}
					else {
						$scope.currentanalogProduct.spots = spotres.data;
						$scope.currentanalogProduct.checkallspot = false;
						for(var m = 0; m < $scope.currentanalogProduct.spots.length; m++) {
							$scope.currentanalogProduct.spots[m].edit = false;
							$scope.currentanalogProduct.spots[m].checked = false;
						}
						if(spotres.data.length === 0) {
							$scope.currentanalogProduct.showLoadSpot = true;
						}
						else {
							$scope.currentanalogProduct.showLoadSpot = false;
						}
					}
					//设计分页
					console.log(spotres.count);
					$scope.spotTotalPage = Math.ceil(spotres.count/$scope.pageCount) ;
					$scope.spotPages = [];
					var start = 1;
					if( $scope.spotCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.spotTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.spotCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.spotTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.spotTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.spotTotalPage || $scope.spotTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.spotCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.spotPages.push(json);
						}
					}
					if($scope.spotTotalPage <= 1) {
						$scope.spotShowPrev = false;
						$scope.spotShowNext = false;
					}
					else {
						$scope.spotShowPrev = true;
						$scope.spotShowNext = true;
					}
				}
				else {
					alert("获取数据失败");
				}
			})
		}
	}

	$scope.cspManageLoadNetCancel = function() {
		$scope.currentProduct.importNet = false;
		var height = document.getElementById('csp_manage_product_net_info_div').offsetTop;
		window.scrollTo(0,height);
	}

	$scope.cspManageLoadanalogNetCancel = function() {
		$scope.currentanalogProduct.importanalogNet = false;
		var height = document.getElementById('csp_manage_analogProduct_import_analogNet_div').offsetTop;
		window.scrollTo(0,height);
	}

	$scope.cspManageLoadSpotCancel = function() {
		if($scope.productType === 1) {
			$scope.currentProduct.spotload = false;
		}
		else {
			$scope.currentanalogProduct.spotload = false;
		}
		var height = document.getElementById('csp_manage_spot_load_data_div').offsetTop;
		window.scrollTo(0,height);
	}
	//添加单条期货数据
	$scope.cspManageAddFuturesSingleData = function() {
		var myDate = new Date();
		if($scope.productType === 1) {
			//产品
			$scope.currentProduct.futuresadd = true;
			$scope.currentProduct.futuresload = false;
			$scope.currentProduct.futuresSingleData = {};
			$scope.currentProduct.futuresSingleData.codeErr = false;
			$scope.currentProduct.futuresSingleData.code = "";
			$scope.currentProduct.futuresSingleData.nameErr = false;
			$scope.currentProduct.futuresSingleData.fname = "";
			$scope.currentProduct.futuresSingleData.volumeErr = false;
			$scope.currentProduct.futuresSingleData.dealtypejson = $scope.futuresDealTypes[0];
			$scope.currentProduct.futuresSingleData.volume = "";
			$scope.currentProduct.futuresSingleData.volamtErr = false;
			$scope.currentProduct.futuresSingleData.volamt = "";
			$scope.currentProduct.futuresSingleData.lastErr = false;
			$scope.currentProduct.futuresSingleData.last = "";
			$scope.currentProduct.futuresSingleData.dateErr = false;
			$scope.currentProduct.futuresSingleData.date = myDate.toLocaleDateString().replace(/\//g,'-');;
		}
		else {
			//模拟产品
			$scope.currentanalogProduct.futuresadd = true;
			$scope.currentanalogProduct.futuresload = false;
			$scope.currentanalogProduct.futuresSingleData = {};
			$scope.currentanalogProduct.futuresSingleData.codeErr = false;
			$scope.currentanalogProduct.futuresSingleData.code = "";
			$scope.currentanalogProduct.futuresSingleData.nameErr = false;
			$scope.currentanalogProduct.futuresSingleData.fname = "";
			$scope.currentanalogProduct.futuresSingleData.volumeErr = false;
			$scope.currentanalogProduct.futuresSingleData.dealtypejson = $scope.futuresDealTypes[0];
			$scope.currentanalogProduct.futuresSingleData.volume = "";
			$scope.currentanalogProduct.futuresSingleData.volamtErr = false;
			$scope.currentanalogProduct.futuresSingleData.volamt = "";
			$scope.currentanalogProduct.futuresSingleData.lastErr = false;
			$scope.currentanalogProduct.futuresSingleData.last = "";
			$scope.currentanalogProduct.futuresSingleData.dateErr = false;
			$scope.currentanalogProduct.futuresSingleData.date = myDate.toLocaleDateString().replace(/\//g,'-');;
		}
		// $scope.timePromise = undefined;
		// var second = 1;
		// $scope.timePromise = $interval(function(){
		// 	if(second<=0){
		// 	  $interval.cancel($scope.timePromise);
		// 	  $scope.timePromise = undefined;
		// 	  var height = document.getElementById('csp_manage_product_futures_add_div').offsetTop;
		// 	  window.scrollTo(0,height - 300);
		// 	}else{
		// 	  second--;
		// 	}
		// },1,1000);
	}

	$scope.cspManageAddFuturesDataCancel = function() {
		if($scope.productType === 1) {
			$scope.currentProduct.futuresadd = false;
		}
		else {
			$scope.currentanalogProduct.futuresadd = false;
		}
		// var height = document.getElementById('csp_manage_product_futures_info_div').offsetTop;
		// window.scrollTo(0,height );
	}

	$scope.cspManageAddFuturesDataSure = function() {
		//验证浮点数
		var reg = /^(\d{1,14})+(\.\d+)?$/;
		//验证整数
		var reg2 = /^(\d{1,11})$/;
		//验证日期
		var reg1 = /^(\d{4})-(\d{1,2})-(\d{1,2})$/;
		var err =false;
		var jsonmit = {};
		if($scope.productType === 1) {
			console.log($scope.currentProduct.futuresSingleData.fname,$scope.currentProduct.futuresSingleData.volume);
			if($scope.currentProduct.futuresSingleData.date === undefined || !(reg1.test($scope.currentProduct.futuresSingleData.date))) {
				err = true;
				$scope.currentProduct.futuresSingleData.dateErr = true;
			}
			if($scope.currentProduct.futuresSingleData.code === undefined || $scope.currentProduct.futuresSingleData.code === ""  ) {
				err = true;
				$scope.currentProduct.futuresSingleData.codeErr = true;
			}
			if($scope.currentProduct.futuresSingleData.fname === undefined || $scope.currentProduct.futuresSingleData.fname === "") {
				err = true;
				$scope.currentProduct.futuresSingleData.nameErr = true;
				console.log($scope.currentProduct.futuresSingleData.nameErr);
			}
			if($scope.currentProduct.futuresSingleData.volume === undefined || !(reg2.test($scope.currentProduct.futuresSingleData.volume))) {
				err = true;
				$scope.currentProduct.futuresSingleData.volumeErr = true;
			}
			if($scope.currentProduct.futuresSingleData.volamt === undefined || !(reg.test($scope.currentProduct.futuresSingleData.volamt))) {
				err = true;
				$scope.currentProduct.futuresSingleData.volamtErr = true;
			}
			if($scope.currentProduct.futuresSingleData.last === undefined || !(reg.test($scope.currentProduct.futuresSingleData.last))) {
				err = true;
				$scope.currentProduct.futuresSingleData.lastErr = true;
			}
			if($scope.currentProduct.futuresSingleData.deposit === undefined || !(reg.test($scope.currentProduct.futuresSingleData.deposit))) {
				err = true;
				$scope.currentProduct.futuresSingleData.depositErr = true;
			}
			jsonmit.data = $scope.currentProduct.futuresSingleData;
			jsonmit.proid = $scope.currentProduct.id;
		}
		else {
			if($scope.currentanalogProduct.futuresSingleData.date === undefined || !(reg1.test($scope.currentanalogProduct.futuresSingleData.date))) {
				err = true;
				$scope.currentanalogProduct.futuresSingleData.dateErr = true;
			}
			if($scope.currentanalogProduct.futuresSingleData.code === undefined || $scope.currentanalogProduct.futuresSingleData.code === ""  ) {
				err = true;
				$scope.currentanalogProduct.futuresSingleData.codeErr = true;
			}
			if($scope.currentanalogProduct.futuresSingleData.fname === undefined || $scope.currentanalogProduct.futuresSingleData.fname === "") {
				err = true;
				$scope.currentanalogProduct.futuresSingleData.nameErr = true;
			}
			if($scope.currentanalogProduct.futuresSingleData.volume === undefined || !(reg2.test($scope.currentanalogProduct.futuresSingleData.volume))) {
				err = true;
				$scope.currentanalogProduct.futuresSingleData.volumeErr = true;
			}
			if($scope.currentanalogProduct.futuresSingleData.volamt === undefined || !(reg.test($scope.currentanalogProduct.futuresSingleData.volamt))) {
				err = true;
				$scope.currentanalogProduct.futuresSingleData.volamtErr = true;
			}
			if($scope.currentanalogProduct.futuresSingleData.last === undefined || !(reg.test($scope.currentanalogProduct.futuresSingleData.last))) {
				err = true;
				$scope.currentanalogProduct.futuresSingleData.lastErr = true;
			}
			if($scope.currentanalogProduct.futuresSingleData.deposit === undefined || !(reg.test($scope.currentanalogProduct.futuresSingleData.deposit))) {
				err = true;
				$scope.currentanalogProduct.futuresSingleData.depositErr = true;
			}
			jsonmit.data = $scope.currentanalogProduct.futuresSingleData;
			jsonmit.proid = $scope.currentanalogProduct.id;
		}
		if(err === false) {
			//添加数据
			jsonmit.protype = $scope.productType;
			ManageService.cspManageFuturesInsertSingleData(jsonmit,function(mitres) {
				if(mitres.result === "succeed") {
					//获取期货数据
					var jsonfutures = {};
					if($scope.productType === 1) {
						$scope.currentProduct.futuresadd = false;
						jsonfutures.proid = $scope.currentProduct.id;
					}
					else {
						$scope.currentanalogProduct.futuresadd = false;
						jsonfutures.proid = $scope.currentanalogProduct.id;
					}
					// var height = document.getElementById('csp_manage_product_futures_info_div').offsetTop;
					// window.scrollTo(0,height );
					jsonfutures.protype = $scope.productType;
					$scope.futuresCurrentPage = 1;
					jsonfutures.page = $scope.futuresCurrentPage;
					jsonfutures.pageCount = $scope.pageCount;
					ManageService.cspManageGetFutures(jsonfutures,function(futuresres) {
						if(futuresres.result === "succeed") {
							if($scope.productType === 1) {
								$scope.currentProduct.futureses = futuresres.data;
								$scope.currentProduct.checkallfutures = false;
								for(var m = 0; m < $scope.currentProduct.futureses.length; m++) {
									$scope.currentProduct.futureses[m].edit = false;
									$scope.currentProduct.futureses[m].checked = false;
									$scope.currentProduct.futureses[m].dealtypejson = {};
									if($scope.currentProduct.futureses[m].dealtype == 0) {
										$scope.currentProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[0];
									}
									else {
										$scope.currentProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[1];
									}
								}
								if(futuresres.data.length === 0) {
									$scope.currentProduct.showLoadFutures = true;
								}
								else {
									$scope.currentProduct.showLoadFutures = false;
								}
							}
							else {
								$scope.currentanalogProduct.futureses = futuresres.data;
								$scope.currentanalogProduct.checkallfutures = false;
								for(var m = 0; m < $scope.currentanalogProduct.futureses.length; m++) {
									$scope.currentanalogProduct.futureses[m].edit = false;
									$scope.currentanalogProduct.futureses[m].checked = false;
									$scope.currentanalogProduct.futureses[m].dealtypejson = {};
									if($scope.currentanalogProduct.futureses[m].dealtype == 0) {
										$scope.currentanalogProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[0];
									}
									else {
										$scope.currentanalogProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[1];
									}
								}
								if(futuresres.data.length === 0) {
									$scope.currentanalogProduct.showLoadFutures = true;
								}
								else {
									$scope.currentanalogProduct.showLoadFutures = false;
								}
							}
							//设计分页
							console.log(futuresres.count);
							$scope.futuresTotalPage = Math.ceil(futuresres.count/$scope.pageCount) ;
							$scope.futuresPages = [];
							var start = 1;
							if( $scope.futuresCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.futuresTotalPage <= $scope.itemCount) {
								start = 1;
							}
							else {
								start = $scope.futuresCurrentPage - Math.ceil($scope.itemCount/2) +1;
								if($scope.futuresTotalPage -  start + 1 < $scope.itemCount ) {
									start = $scope.futuresTotalPage - $scope.itemCount +1;
								}
							}
							for( var r = start ; r < start + $scope.itemCount; r ++ ) {
								if(r > $scope.futuresTotalPage || $scope.futuresTotalPage <= 1) {
									break;
								}
								else {
									var json = {};
									json.num = r;
									if(r === $scope.futuresCurrentPage) {
										json.select = true;
									}
									else {
										json.select = false;
									}
									$scope.futuresPages.push(json);
								}
							}
							if($scope.futuresTotalPage <= 1) {
								$scope.futuresShowPrev = false;
								$scope.futuresShowNext = false;
							}
							else {
								$scope.futuresShowPrev = true;
								$scope.futuresShowNext = true;
							}
						}
						else {
							alert("获取数据失败");
						}
					})
				}
				else {
					alert("数据库异常");
				}
			})
		}
	}

	$scope.cspManageHideFuturesError = function() {
		if($scope.productType === 1) {
			if($scope.currentProduct.futuresSingleData.code !== "") {
				$scope.currentProduct.futuresSingleData.codeErr = false;
			}
			if($scope.currentProduct.futuresSingleData.fname !== "") {
				$scope.currentProduct.futuresSingleData.nameErr = false;
			}
			if($scope.currentProduct.futuresSingleData.volume !== "") {
				$scope.currentProduct.futuresSingleData.volumeErr = false;
			}
			if($scope.currentProduct.futuresSingleData.volamt !== "") {
				$scope.currentProduct.futuresSingleData.volamtErr = false;
			}
			if($scope.currentProduct.futuresSingleData.last !== "") {
				$scope.currentProduct.futuresSingleData.lastErr = false;
			}
			if($scope.currentProduct.futuresSingleData.deposit !== "") {
				$scope.currentProduct.futuresSingleData.depositErr = false;
			}
			if($scope.currentProduct.futuresSingleData.date !== "") {
				$scope.currentProduct.futuresSingleData.dateErr = false;
			}
		}
		else {
			if($scope.currentanalogProduct.futuresSingleData.code !== "") {
				$scope.currentanalogProduct.futuresSingleData.codeErr = false;
			}
			if($scope.currentanalogProduct.futuresSingleData.fname !== "") {
				$scope.currentanalogProduct.futuresSingleData.nameErr = false;
			}
			if($scope.currentanalogProduct.futuresSingleData.volume !== "") {
				$scope.currentanalogProduct.futuresSingleData.volumeErr = false;
			}
			if($scope.currentanalogProduct.futuresSingleData.volamt !== "") {
				$scope.currentanalogProduct.futuresSingleData.volamtErr = false;
			}
			if($scope.currentanalogProduct.futuresSingleData.last !== "") {
				$scope.currentanalogProduct.futuresSingleData.lastErr = false;
			}
			if($scope.currentanalogProduct.futuresSingleData.deposit !== "") {
				$scope.currentanalogProduct.futuresSingleData.depositErr = false;
			}
			if($scope.currentanalogProduct.futuresSingleData.date !== "") {
				$scope.currentanalogProduct.futuresSingleData.dateErr = false;
			}
		}
	}

	$scope.cspManageLoadFutures = function() {
		if($scope.productType === 1) {
			//产品
			$scope.currentProduct.futuresload = true;
			$scope.currentProduct.futuresadd = false;
			$scope.currentProduct.loadfutures = {};
			$scope.currentProduct.loadfutures.loading = false;
			$scope.currentProduct.loadfutures.fileRight = false;
			$scope.currentProduct.loadfutures.fileError = false;
			$scope.currentProduct.loadfutures.errorTip = "";
			$scope.currentProduct.loadfutures.futureses = [];
		}
		else {
			//模拟产品
			$scope.currentanalogProduct.futuresload = true;
			$scope.currentanalogProduct.futuresadd = false;
			$scope.currentanalogProduct.loadfutures = {};
			$scope.currentanalogProduct.loadfutures.loading = false;
			$scope.currentanalogProduct.loadfutures.fileRight = false;
			$scope.currentanalogProduct.loadfutures.fileError = false;
			$scope.currentanalogProduct.loadfutures.errorTip = "";
			$scope.currentanalogProduct.loadfutures.futureses = [];
		}
		$scope.timePromise = undefined;
		var second = 1;
		$scope.timePromise = $interval(function(){
			if(second<=0){
			  $interval.cancel($scope.timePromise);
			  $scope.timePromise = undefined;
			  var height = document.getElementById('csp_manage_product_futures_load_div').offsetTop;
			  window.scrollTo(0,height - 300);
			}else{
			  second--;
			}
		},1,1000);
	}

	$scope.cspManageLoadFuturesCancel = function() {
		if($scope.productType === 1) {
			$scope.currentProduct.futuresload = false;
		}
		else {
			$scope.currentanalogProduct.futuresload = false;
		}
		var height = document.getElementById('csp_manage_product_futures_info_div').offsetTop;
		window.scrollTo(0,height);
	}

	$scope.cspManageEditFuturesDate = function(index) {
		if($scope.productType === 1) {
			$scope.currentProduct.futureses[index].edit = true;
			$scope.currentProduct.futureses[index].editfutures = {};
			$scope.currentProduct.futureses[index].editfutures.fid = $scope.currentProduct.futureses[index].fid;
			$scope.currentProduct.futureses[index].editfutures.date = $scope.currentProduct.futureses[index].time;
			$scope.currentProduct.futureses[index].editfutures.code = $scope.currentProduct.futureses[index].code;
			$scope.currentProduct.futureses[index].editfutures.fname = $scope.currentProduct.futureses[index].fname;
			$scope.currentProduct.futureses[index].editfutures.dealtypejson = $scope.currentProduct.futureses[index].dealtypejson;
			$scope.currentProduct.futureses[index].editfutures.volume = $scope.currentProduct.futureses[index].volume;
			$scope.currentProduct.futureses[index].editfutures.volamt = $scope.currentProduct.futureses[index].volamt;
			$scope.currentProduct.futureses[index].editfutures.last = $scope.currentProduct.futureses[index].last;
			$scope.currentProduct.futureses[index].editfutures.deposit = $scope.currentProduct.futureses[index].deposit;
		}
		else {
			$scope.currentanalogProduct.futureses[index].edit = true;
			$scope.currentanalogProduct.futureses[index].editfutures = {};
			$scope.currentanalogProduct.futureses[index].editfutures.fid = $scope.currentanalogProduct.futureses[index].fid;
			$scope.currentanalogProduct.futureses[index].editfutures.date = $scope.currentanalogProduct.futureses[index].time;
			$scope.currentanalogProduct.futureses[index].editfutures.code = $scope.currentanalogProduct.futureses[index].code;
			$scope.currentanalogProduct.futureses[index].editfutures.fname = $scope.currentanalogProduct.futureses[index].fname;
			$scope.currentanalogProduct.futureses[index].editfutures.dealtypejson = $scope.currentanalogProduct.futureses[index].dealtypejson;
			$scope.currentanalogProduct.futureses[index].editfutures.volume = $scope.currentanalogProduct.futureses[index].volume;
			$scope.currentanalogProduct.futureses[index].editfutures.volamt = $scope.currentanalogProduct.futureses[index].volamt;
			$scope.currentanalogProduct.futureses[index].editfutures.last = $scope.currentanalogProduct.futureses[index].last;
			$scope.currentanalogProduct.futureses[index].editfutures.deposit = $scope.currentanalogProduct.futureses[index].deposit;
		}
	}

	$scope.cspManageEditFuturesDateSave = function(index) {
		console.log(index);
		//验证浮点数
		var reg = /^(\d{1,14})+(\.\d+)?$/;
		//验证整数
		var reg2 = /^(\d{1,11})$/;
		//验证日期
		var reg1 = /^(\d{4})-(\d{1,2})-(\d{1,2})$/;
		var err =false;
		var jsonmit = {};
		if($scope.productType === 1) {
			if($scope.currentProduct.futureses[index].editfutures.date === undefined || !(reg1.test($scope.currentProduct.futureses[index].editfutures.date))) {
				err = true;
			}
			if($scope.currentProduct.futureses[index].editfutures.code === undefined || $scope.currentProduct.futureses[index].editfutures.code === ""  ) {
				err = true;
			}
			if($scope.currentProduct.futureses[index].editfutures.fname === undefined || $scope.currentProduct.futureses[index].editfutures.fname === "") {
				err = true;
			}
			if($scope.currentProduct.futureses[index].editfutures.volume === undefined || !(reg2.test($scope.currentProduct.futureses[index].editfutures.volume))) {
				err = true;
			}
			if($scope.currentProduct.futureses[index].editfutures.volamt === undefined || !(reg.test($scope.currentProduct.futureses[index].editfutures.volamt))) {
				err = true;
			}
			if($scope.currentProduct.futureses[index].editfutures.last === undefined || !(reg.test($scope.currentProduct.futureses[index].editfutures.last))) {
				err = true;
			}
			if($scope.currentProduct.futureses[index].editfutures.deposit === undefined || !(reg.test($scope.currentProduct.futureses[index].editfutures.deposit))) {
				err = true;
			}
			jsonmit = $scope.currentProduct.futureses[index].editfutures;
		}
		else {
			if($scope.currentanalogProduct.futureses[index].editfutures.date === undefined || !(reg1.test($scope.currentanalogProduct.futureses[index].editfutures.date))) {
				err = true;
			}
			if($scope.currentanalogProduct.futureses[index].editfutures.code === undefined || $scope.currentanalogProduct.futureses[index].editfutures.code === ""  ) {
				err = true;
			}
			if($scope.currentanalogProduct.futureses[index].editfutures.fname === undefined || $scope.currentanalogProduct.futureses[index].editfutures.fname === "") {
				err = true;
			}
			if($scope.currentanalogProduct.futureses[index].editfutures.volume === undefined || !(reg2.test($scope.currentanalogProduct.futureses[index].editfutures.volume))) {
				err = true;
			}
			if($scope.currentanalogProduct.futureses[index].editfutures.volamt === undefined || !(reg.test($scope.currentanalogProduct.futureses[index].editfutures.volamt))) {
				err = true;
			}
			if($scope.currentanalogProduct.futureses[index].editfutures.last === undefined || !(reg.test($scope.currentanalogProduct.futureses[index].editfutures.last))) {
				err = true;
			}
			if($scope.currentanalogProduct.futureses[index].editfutures.deposit === undefined || !(reg.test($scope.currentanalogProduct.futureses[index].editfutures.deposit))) {
				err = true;
			}
			jsonmit = $scope.currentanalogProduct.futureses[index].editfutures;
		}
		console.log(err);
		if(err === false) {
			ManageService.cspManageUpdateFutures(jsonmit,function(mitres) {
				if(mitres.result === "succeed") {
					var jsonfutures = {};
					if($scope.productType === 1) {
						$scope.currentProduct.futureses[index].edit = false;
						jsonfutures.proid = $scope.currentProduct.id;
					}
					else {
						$scope.currentanalogProduct.futureses[index].edit = false;
						jsonfutures.proid = $scope.currentanalogProduct.id;
					}
					jsonfutures.protype = $scope.productType;
					jsonfutures.page = $scope.futuresCurrentPage;
					jsonfutures.pageCount = $scope.pageCount;
					ManageService.cspManageGetFutures(jsonfutures,function(futuresres) {
						if(futuresres.result === "succeed") {
							if($scope.productType === 1) {
								$scope.currentProduct.futureses = futuresres.data;
								$scope.currentProduct.checkallfutures = false;
								for(var m = 0; m < $scope.currentProduct.futureses.length; m++) {
									$scope.currentProduct.futureses[m].edit = false;
									$scope.currentProduct.futureses[m].checked = false;
									$scope.currentProduct.futureses[m].dealtypejson = {};
									if($scope.currentProduct.futureses[m].dealtype == 0) {
										$scope.currentProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[0];
									}
									else {
										$scope.currentProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[1];
									}
								}
								if(futuresres.data.length === 0) {
									$scope.currentProduct.showLoadFutures = true;
								}
								else {
									$scope.currentProduct.showLoadFutures = false;
								}
							}
							else {
								$scope.currentanalogProduct.futureses = futuresres.data;
								$scope.currentanalogProduct.checkallfutures = false;
								for(var m = 0; m < $scope.currentanalogProduct.futureses.length; m++) {
									$scope.currentanalogProduct.futureses[m].edit = false;
									$scope.currentanalogProduct.futureses[m].checked = false;
									$scope.currentanalogProduct.futureses[m].dealtypejson = {};
									if($scope.currentanalogProduct.futureses[m].dealtype == 0) {
										$scope.currentanalogProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[0];
									}
									else {
										$scope.currentanalogProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[1];
									}
								}
								if(futuresres.data.length === 0) {
									$scope.currentanalogProduct.showLoadFutures = true;
								}
								else {
									$scope.currentanalogProduct.showLoadFutures = false;
								}
							}
							//设计分页
							console.log(futuresres.count);
							$scope.futuresTotalPage = Math.ceil(futuresres.count/$scope.pageCount) ;
							$scope.futuresPages = [];
							var start = 1;
							if( $scope.futuresCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.futuresTotalPage <= $scope.itemCount) {
								start = 1;
							}
							else {
								start = $scope.futuresCurrentPage - Math.ceil($scope.itemCount/2) +1;
								if($scope.futuresTotalPage -  start + 1 < $scope.itemCount ) {
									start = $scope.futuresTotalPage - $scope.itemCount +1;
								}
							}
							for( var r = start ; r < start + $scope.itemCount; r ++ ) {
								if(r > $scope.futuresTotalPage || $scope.futuresTotalPage <= 1) {
									break;
								}
								else {
									var json = {};
									json.num = r;
									if(r === $scope.futuresCurrentPage) {
										json.select = true;
									}
									else {
										json.select = false;
									}
									$scope.futuresPages.push(json);
								}
							}
							if($scope.futuresTotalPage <= 1) {
								$scope.futuresShowPrev = false;
								$scope.futuresShowNext = false;
							}
							else {
								$scope.futuresShowPrev = true;
								$scope.futuresShowNext = true;
							}
						}
						else {
							alert("获取数据失败");
						}
					})
				}
				else {
					alert("数据库异常");
				}
			})
		}
	}

	$scope.cspManageEditFuturesDateCancel = function(index) {
		if($scope.productType === 1) {
			$scope.currentProduct.futureses[index].edit = false;
		}
		else {
			$scope.currentanalogProduct.futureses[index].edit = false;
		}
	}

	$scope.cspManageDeleteFuturesDate = function(index) {
		var jsondelete = {};
		jsondelete.count = 1;
		if($scope.productType === 1) {
			jsondelete.data = $scope.currentProduct.futureses[index].fid;
		}
		else {
			jsondelete.data = $scope.currentanalogProduct.futureses[index].fid;
		}
		ManageService.cspManageMultipleDeleteFutureses(jsondelete,function(delres) {
			if(delres.result === "succeed") {
				//获取期货数据
				var jsonfutures = {};
				if($scope.productType === 1) {
					jsonfutures.proid = $scope.currentProduct.id;
				}
				else {
					jsonfutures.proid = $scope.currentanalogProduct.id;
				}
				jsonfutures.protype = $scope.productType;
				$scope.futuresCurrentPage = 1;
				jsonfutures.page = $scope.futuresCurrentPage;
				jsonfutures.pageCount = $scope.pageCount;
				ManageService.cspManageGetFutures(jsonfutures,function(futuresres) {
					if(futuresres.result === "succeed") {
						if($scope.productType === 1) {
							$scope.currentProduct.futureses = futuresres.data;
							$scope.currentProduct.checkallfutures = false;
							for(var m = 0; m < $scope.currentProduct.futureses.length; m++) {
								$scope.currentProduct.futureses[m].edit = false;
								$scope.currentProduct.futureses[m].checked = false;
								$scope.currentProduct.futureses[m].dealtypejson = {};
								if($scope.currentProduct.futureses[m].dealtype == 0) {
									$scope.currentProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[0];
								}
								else {
									$scope.currentProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[1];
								}
							}
							if(futuresres.data.length === 0) {
								$scope.currentProduct.showLoadFutures = true;
							}
							else {
								$scope.currentProduct.showLoadFutures = false;
							}
						}
						else {
							$scope.currentanalogProduct.futureses = futuresres.data;
							$scope.currentanalogProduct.checkallfutures = false;
							for(var m = 0; m < $scope.currentanalogProduct.futureses.length; m++) {
								$scope.currentanalogProduct.futureses[m].edit = false;
								$scope.currentanalogProduct.futureses[m].checked = false;
								$scope.currentanalogProduct.futureses[m].dealtypejson = {};
								if($scope.currentanalogProduct.futureses[m].dealtype == 0) {
									$scope.currentanalogProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[0];
								}
								else {
									$scope.currentanalogProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[1];
								}
							}
							if(futuresres.data.length === 0) {
								$scope.currentanalogProduct.showLoadFutures = true;
							}
							else {
								$scope.currentanalogProduct.showLoadFutures = false;
							}
						}
						//设计分页
						console.log(futuresres.count);
						$scope.futuresTotalPage = Math.ceil(futuresres.count/$scope.pageCount) ;
						$scope.futuresPages = [];
						var start = 1;
						if( $scope.futuresCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.futuresTotalPage <= $scope.itemCount) {
							start = 1;
						}
						else {
							start = $scope.futuresCurrentPage - Math.ceil($scope.itemCount/2) +1;
							if($scope.futuresTotalPage -  start + 1 < $scope.itemCount ) {
								start = $scope.futuresTotalPage - $scope.itemCount +1;
							}
						}
						for( var r = start ; r < start + $scope.itemCount; r ++ ) {
							if(r > $scope.futuresTotalPage || $scope.futuresTotalPage <= 1) {
								break;
							}
							else {
								var json = {};
								json.num = r;
								if(r === $scope.futuresCurrentPage) {
									json.select = true;
								}
								else {
									json.select = false;
								}
								$scope.futuresPages.push(json);
							}
						}
						if($scope.futuresTotalPage <= 1) {
							$scope.futuresShowPrev = false;
							$scope.futuresShowNext = false;
						}
						else {
							$scope.futuresShowPrev = true;
							$scope.futuresShowNext = true;
						}
					}
					else {
						alert("获取数据失败");
					}
				})
			}
			else {
				alert("删除失败");
			}
		})
	}

	$scope.cspManageCheckAllFutureses = function() {
		if($scope.productType === 1) {
			if ($scope.currentProduct.checkallfutures === false) {
				$scope.currentProduct.checkallfutures = true;
				for(var i = 0; i < $scope.currentProduct.futureses.length; i++) {
					$scope.currentProduct.futureses[i].checked = true;
				}
			}
			else {
				$scope.currentProduct.checkallfutures = false;
				for(var j = 0; j < $scope.currentProduct.futureses.length; j++) {
					$scope.currentProduct.futureses[j].checked = false;
				}
			}
		}
		else {
			if ($scope.currentanalogProduct.checkallfutures === false) {
				$scope.currentanalogProduct.checkallfutures = true;
				for(var i = 0; i < $scope.currentanalogProduct.futureses.length; i++) {
					$scope.currentanalogProduct.futureses[i].checked = true;
				}
			}
			else {
				$scope.currentanalogProduct.checkallfutures = false;
				for(var j = 0; j < $scope.currentanalogProduct.futureses.length; j++) {
					$scope.currentanalogProduct.futureses[j].checked = false;
				}
			}
		}
	}

    $scope.cspManageFuturesCheckClick = function() {
		if($scope.productType === 1) {
			$scope.currentProduct.checkallfutures = true;
			for(var i = 0; i < $scope.currentProduct.futureses.length; i++) {
				if($scope.currentProduct.futureses[i].checked === false) {
					$scope.currentProduct.checkallfutures = false;
				}
			}
		}
		else {
			$scope.currentanalogProduct.checkallfutures = true;
			for(var i = 0; i < $scope.currentanalogProduct.futureses.length; i++) {
				if($scope.currentanalogProduct.futureses[i].checked === false) {
					$scope.currentanalogProduct.checkallfutures = false;
				}
			}
		}
	}

	$scope.cspManageMultipleDeleteFutureses = function() {
		var jsondelete = {};
		var idarr = [];
		if($scope.productType === 1) {
			for(var i = 0; i < $scope.currentProduct.futureses.length; i++) {
				if($scope.currentProduct.futureses[i].checked === true) {
					idarr.push($scope.currentProduct.futureses[i].fid);
				}
			}
		}
		else {
			for(var i = 0; i < $scope.currentanalogProduct.futureses.length; i++) {
				if($scope.currentanalogProduct.futureses[i].checked === true) {
					idarr.push($scope.currentanalogProduct.futureses[i].fid);
				}
			}
		}
		if(idarr.length > 0) {
			jsondelete.count = idarr.length;
			jsondelete.data = idarr;
			ManageService.cspManageMultipleDeleteFutureses(jsondelete,function(delres) {
				if(delres.result === "succeed") {
					//获取期货数据
					var jsonfutures = {};
					if($scope.productType === 1) {
						jsonfutures.proid = $scope.currentProduct.id;
					}
					else {
						jsonfutures.proid = $scope.currentanalogProduct.id;
					}
					jsonfutures.protype = $scope.productType;
					$scope.futuresCurrentPage = 1;
					jsonfutures.page = $scope.futuresCurrentPage;
					jsonfutures.pageCount = $scope.pageCount;
					ManageService.cspManageGetFutures(jsonfutures,function(futuresres) {
						if(futuresres.result === "succeed") {
							if($scope.productType === 1) {
								$scope.currentProduct.futureses = futuresres.data;
								$scope.currentProduct.checkallfutures = false;
								for(var m = 0; m < $scope.currentProduct.futureses.length; m++) {
									$scope.currentProduct.futureses[m].edit = false;
									$scope.currentProduct.futureses[m].checked = false;
									$scope.currentProduct.futureses[m].dealtypejson = {};
									if($scope.currentProduct.futureses[m].dealtype == 0) {
										$scope.currentProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[0];
									}
									else {
										$scope.currentProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[1];
									}
								}
								if(futuresres.data.length === 0) {
									$scope.currentProduct.showLoadFutures = true;
								}
								else {
									$scope.currentProduct.showLoadFutures = false;
								}
							}
							else {
								$scope.currentanalogProduct.futureses = futuresres.data;
								$scope.currentanalogProduct.checkallfutures = false;
								for(var m = 0; m < $scope.currentanalogProduct.futureses.length; m++) {
									$scope.currentanalogProduct.futureses[m].edit = false;
									$scope.currentanalogProduct.futureses[m].checked = false;
									$scope.currentanalogProduct.futureses[m].dealtypejson = {};
									if($scope.currentanalogProduct.futureses[m].dealtype == 0) {
										$scope.currentanalogProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[0];
									}
									else {
										$scope.currentanalogProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[1];
									}
								}
								if(futuresres.data.length === 0) {
									$scope.currentanalogProduct.showLoadFutures = true;
								}
								else {
									$scope.currentanalogProduct.showLoadFutures = false;
								}
							}
							//设计分页
							console.log(futuresres.count);
							$scope.futuresTotalPage = Math.ceil(futuresres.count/$scope.pageCount) ;
							$scope.futuresPages = [];
							var start = 1;
							if( $scope.futuresCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.futuresTotalPage <= $scope.itemCount) {
								start = 1;
							}
							else {
								start = $scope.futuresCurrentPage - Math.ceil($scope.itemCount/2) +1;
								if($scope.futuresTotalPage -  start + 1 < $scope.itemCount ) {
									start = $scope.futuresTotalPage - $scope.itemCount +1;
								}
							}
							for( var r = start ; r < start + $scope.itemCount; r ++ ) {
								if(r > $scope.futuresTotalPage || $scope.futuresTotalPage <= 1) {
									break;
								}
								else {
									var json = {};
									json.num = r;
									if(r === $scope.futuresCurrentPage) {
										json.select = true;
									}
									else {
										json.select = false;
									}
									$scope.futuresPages.push(json);
								}
							}
							if($scope.futuresTotalPage <= 1) {
								$scope.futuresShowPrev = false;
								$scope.futuresShowNext = false;
							}
							else {
								$scope.futuresShowPrev = true;
								$scope.futuresShowNext = true;
							}
						}
						else {
							alert("获取数据失败");
						}
					})
				}
				else {
					alert("删除失败");
				}
			})
		}
	}

	$scope.cspManageFuturesLoadDataSelectFile = function() {
		if($scope.productType ===1) {
			$scope.currentProduct.loadfutures.fileError = false;
			$scope.currentProduct.loadfutures.errorTip = "";
			document.getElementById('csp_manage_futures_file_load_form').reset();
			document.getElementById('csp_manage_futures_file_load_input').click();
		}
		else {
			$scope.currentanalogProduct.loadfutures.fileError = false;
			$scope.currentanalogProduct.loadfutures.errorTip = "";
			document.getElementById('csp_manage_futures_file_load_form').reset();
			document.getElementById('csp_manage_futures_file_load_input').click();
		}
	}

	$scope.cspManageFuturesFileError = function() {
		if($scope.productType === 1) {
			$scope.currentproduct.loadfutures.fileError = true;
			$scope.currentproduct.loadfutures.errorTip = "文件格式错误";
		}
		else {
			$scope.currentanalogProduct.loadfutures.fileError = true;
			$scope.currentanalogProduct.loadfutures.errorTip = "文件格式错误";
		}
	}

	$scope.cspManageFuturesLoadFileReady = function() {
		if($scope.productType === 1) {
			//产品
			$scope.currentProduct.loadfutures.loading = true;
			var fd1 = new FormData();
	        var file1 = document.getElementById('csp_manage_futures_file_load_input').files[0];
	        fd1.append('file', file1);
			ManageService.cspManageFuturesLoadFile(fd1,function(res1) {
				$scope.currentProduct.loadfutures.loading = false;
				if(res1.result === "succeed") {
					if(res1.file === true) {
						$scope.currentProduct.loadfutures.fileRight = true;
						for(var i = 0; i < res1.data.length; i ++) {
							$scope.currentProduct.loadfutures.futureses.push(res1.data[i]);
						}
					}
					else {
						$scope.currentProduct.loadfutures.fileError = true;
						$scope.currentProduct.loadfutures.errorTip = "文件内容格式错误";
					}
				}
				else {
					$scope.currentProduct.loadfutures.fileError = true;
					$scope.currentProduct.loadfutures.errorTip = "文件上传失败";
				}
			})
		}
		else {
			//模拟产品
			$scope.currentanalogProduct.loadfutures.loading = true;
			var fd1 = new FormData();
	        var file1 = document.getElementById('csp_manage_futures_file_load_input').files[0];
	        fd1.append('file', file1);
			ManageService.cspManageFuturesLoadFile(fd1,function(res1) {
				$scope.currentanalogProduct.loadfutures.loading = false;
				if(res1.result === "succeed") {
					if(res1.file === true) {
						$scope.currentanalogProduct.loadfutures.fileRight = true;
						for(var i = 0; i < res1.data.length; i ++) {
							$scope.currentanalogProduct.loadfutures.futureses.push(res1.data[i]);
						}
					}
					else {
						$scope.currentanalogProduct.loadfutures.fileError = true;
						$scope.currentanalogProduct.loadfutures.errorTip = "文件内容格式错误";
					}
				}
				else {
					$scope.currentanalogProduct.loadfutures.fileError = true;
					$scope.currentanalogProduct.loadfutures.errorTip = "文件上传失败";
				}
			})
		}
	}

	$scope.cspManageLoadFuturesClearTable = function() {
		if($scope.productType === 1) {
			$scope.currentProduct.loadfutures.fileRight = false;
			$scope.currentProduct.loadfutures.futureses = [];
		}
		else {
			$scope.currentanalogProduct.loadfutures.fileRight = false;
			$scope.currentanalogProduct.loadfutures.futureses = [];
		}
	}

	$scope.cspManageFuturesLoadDeleteData = function(index) {
		if($scope.productType === 1) {
			$scope.currentProduct.loadfutures.futureses.splice(index,1);
			if($scope.currentProduct.loadfutures.futureses.length === 0) {
				$scope.currentProduct.loadfutures.fileRight = false;
			}
		}
		else {
			$scope.currentanalogProduct.loadfutures.futureses.splice(index,1);
			if($scope.currentanalogProduct.loadfutures.futureses.length === 0) {
				$scope.currentanalogProduct.loadfutures.fileRight = false;
			}
		}
	}

	$scope.cspManageLoadFuturesLoadTable = function() {
		var err = false;
		//检查数据
		//验证浮点数
		var reg = /^(\d{1,14})+(\.\d+)?$/;
		//验证整数
		var reg2 = /^(\d{1,11})$/;
		//验证日期
		var reg1 = /^(\d{4})-(\d{1,2})-(\d{1,2})$/;
		var jsonload = {};
		if($scope.productType === 1) {
			var i = 0;
			for(i = 0 ; i < $scope.currentProduct.loadfutures.futureses.length ; i ++) {
				for(i = 0; i < $scope.currentProduct.loadfutures.futureses.length ; i++) {
					if($scope.currentProduct.loadfutures.futureses[i].date === undefined || !(reg1.test($scope.currentProduct.loadfutures.futureses[i].date))) {
						err = true;
						break;
					}
					else if($scope.currentProduct.loadfutures.futureses[i].code === undefined || $scope.currentProduct.loadfutures.futureses[i].code.length <= 0 || $scope.currentProduct.loadfutures.futureses[i].code.length >32 ) {
						err = true;
						break;
					}
					else if($scope.currentProduct.loadfutures.futureses[i].fname === undefined || $scope.currentProduct.loadfutures.futureses[i].fname.length <= 0 || $scope.currentProduct.loadfutures.futureses[i].fname.length > 50 ) {
						err = true;
						break;
					}
					else if(!($scope.currentProduct.loadfutures.futureses[i].dealtype == "1" || $scope.currentProduct.loadfutures.futureses[i].dealtype == "0") ) {
						err = true;
						break;
					}
					else if($scope.currentProduct.loadfutures.futureses[i].volume === undefined || !(reg2.test($scope.currentProduct.loadfutures.futureses[i].volume))) {
						err = true;
						break;
					}
					else if($scope.currentProduct.loadfutures.futureses[i].volamt === undefined || !(reg.test($scope.currentProduct.loadfutures.futureses[i].volamt))) {
						err = true;
						break;
					}
					else if($scope.currentProduct.loadfutures.futureses[i].last === undefined || !(reg.test($scope.currentProduct.loadfutures.futureses[i].last))) {
						err = true;
						break;
					}
					else if($scope.currentProduct.loadfutures.futureses[i].deposit === undefined || !(reg.test($scope.currentProduct.loadfutures.futureses[i].deposit))) {
						err = true;
						break;
					}
					else {

					}
				}
			}
			jsonload.count = $scope.currentProduct.loadfutures.futureses.length;
			jsonload.futureses = $scope.currentProduct.loadfutures.futureses;
			jsonload.proid = $scope.currentProduct.id;
		}
		else {
			var i = 0;
			for(i = 0 ; i < $scope.currentanalogProduct.loadfutures.futureses.length ; i ++) {
				for(i = 0; i < $scope.currentanalogProduct.loadfutures.futureses.length ; i++) {
					if($scope.currentanalogProduct.loadfutures.futureses[i].date === undefined || !(reg1.test($scope.currentanalogProduct.loadfutures.futureses[i].date))) {
						err = true;
						break;
					}
					else if($scope.currentanalogProduct.loadfutures.futureses[i].code === undefined || $scope.currentanalogProduct.loadfutures.futureses[i].code.length <= 0 || $scope.currentanalogProduct.loadfutures.futureses[i].code.length >32 ) {
						err = true;
						break;
					}
					else if($scope.currentanalogProduct.loadfutures.futureses[i].fname === undefined || $scope.currentanalogProduct.loadfutures.futureses[i].fname.length <= 0 || $scope.currentanalogProduct.loadfutures.futureses[i].fname.length > 50 ) {
						err = true;
						break;
					}
					else if(!($scope.currentanalogProduct.loadfutures.futureses[i].dealtype == "1" || $scope.currentanalogProduct.loadfutures.futureses[i].dealtype == "0") ) {
						err = true;
						break;
					}
					else if($scope.currentanalogProduct.loadfutures.futureses[i].volume === undefined || !(reg2.test($scope.currentanalogProduct.loadfutures.futureses[i].volume))) {
						err = true;
						break;
					}
					else if($scope.currentanalogProduct.loadfutures.futureses[i].volamt === undefined || !(reg.test($scope.currentanalogProduct.loadfutures.futureses[i].volamt))) {
						err = true;
						break;
					}
					else if($scope.currentanalogProduct.loadfutures.futureses[i].last === undefined || !(reg.test($scope.currentanalogProduct.loadfutures.futureses[i].last))) {
						err = true;
						break;
					}
					else if($scope.currentanalogProduct.loadfutures.futureses[i].deposit === undefined || !(reg.test($scope.currentanalogProduct.loadfutures.futureses[i].deposit))) {
						err = true;
						break;
					}
					else {

					}
				}
			}
			jsonload.count = $scope.currentanalogProduct.loadfutures.futureses.length;
			jsonload.futureses = $scope.currentanalogProduct.loadfutures.futureses;
			jsonload.proid = $scope.currentanalogProduct.id;
		}
		//提交到后台
		if(err === true) {
			if($scope.productType ===1) {
				$scope.currentProduct.loadfutures.fileError = true;
				$scope.currentProduct.loadfutures.errorTip = "请检查数据格式是否正确";
			}
			else {
				$scope.currentanalogProduct.loadfutures.fileError = true;
				$scope.currentanalogProduct.loadfutures.errorTip = "请检查数据格式是否正确";
			}
		}
		else {
			jsonload.protype = $scope.productType;
			ManageService.cspManageLoadFuturesToDb(jsonload,function(loadres) {
				if(loadres.result === "succeed") {
					//获取期货数据
					var jsonfutures = {};
					if($scope.productType === 1) {
						$scope.currentProduct.futuresload = false;
						jsonfutures.proid = $scope.currentProduct.id;
					}
					else {
						$scope.currentanalogProduct.futuresload = false;
						jsonfutures.proid = $scope.currentanalogProduct.id;
					}
					var height = document.getElementById('csp_manage_product_futures_info_div').offsetTop;
					window.scrollTo(0,height );
					jsonfutures.protype = $scope.productType;
					$scope.futuresCurrentPage = 1;
					jsonfutures.page = $scope.futuresCurrentPage;
					jsonfutures.pageCount = $scope.pageCount;
					ManageService.cspManageGetFutures(jsonfutures,function(futuresres) {
						if(futuresres.result === "succeed") {
							if($scope.productType === 1) {
								$scope.currentProduct.futureses = futuresres.data;
								$scope.currentProduct.checkallfutures = false;
								for(var m = 0; m < $scope.currentProduct.futureses.length; m++) {
									$scope.currentProduct.futureses[m].edit = false;
									$scope.currentProduct.futureses[m].checked = false;
									$scope.currentProduct.futureses[m].dealtypejson = {};
									if($scope.currentProduct.futureses[m].dealtype == 0) {
										$scope.currentProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[0];
									}
									else {
										$scope.currentProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[1];
									}
								}
								if(futuresres.data.length === 0) {
									$scope.currentProduct.showLoadFutures = true;
								}
								else {
									$scope.currentProduct.showLoadFutures = false;
								}
							}
							else {
								$scope.currentanalogProduct.futureses = futuresres.data;
								$scope.currentanalogProduct.checkallfutures = false;
								for(var m = 0; m < $scope.currentanalogProduct.futureses.length; m++) {
									$scope.currentanalogProduct.futureses[m].edit = false;
									$scope.currentanalogProduct.futureses[m].checked = false;
									$scope.currentanalogProduct.futureses[m].dealtypejson = {};
									if($scope.currentanalogProduct.futureses[m].dealtype == 0) {
										$scope.currentanalogProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[0];
									}
									else {
										$scope.currentanalogProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[1];
									}
								}
								if(futuresres.data.length === 0) {
									$scope.currentanalogProduct.showLoadFutures = true;
								}
								else {
									$scope.currentanalogProduct.showLoadFutures = false;
								}
							}
							//设计分页
							console.log(futuresres.count);
							$scope.futuresTotalPage = Math.ceil(futuresres.count/$scope.pageCount) ;
							$scope.futuresPages = [];
							var start = 1;
							if( $scope.futuresCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.futuresTotalPage <= $scope.itemCount) {
								start = 1;
							}
							else {
								start = $scope.futuresCurrentPage - Math.ceil($scope.itemCount/2) +1;
								if($scope.futuresTotalPage -  start + 1 < $scope.itemCount ) {
									start = $scope.futuresTotalPage - $scope.itemCount +1;
								}
							}
							for( var r = start ; r < start + $scope.itemCount; r ++ ) {
								if(r > $scope.futuresTotalPage || $scope.futuresTotalPage <= 1) {
									break;
								}
								else {
									var json = {};
									json.num = r;
									if(r === $scope.futuresCurrentPage) {
										json.select = true;
									}
									else {
										json.select = false;
									}
									$scope.futuresPages.push(json);
								}
							}
							if($scope.futuresTotalPage <= 1) {
								$scope.futuresShowPrev = false;
								$scope.futuresShowNext = false;
							}
							else {
								$scope.futuresShowPrev = true;
								$scope.futuresShowNext = true;
							}
						}
						else {
							alert("获取数据失败");
						}
					})
				}
				else {
					alert("数据库异常");
				}
			})
		}
	}

	$scope.cspManagefuturesLoopToFirst = function() {
		if($scope.futuresCurrentPage === 1) {}
		else {
			$scope.futuresCurrentPage = 1;
			//获取期货数据
			var jsonfutures = {};
			if($scope.productType === 1) {
				jsonfutures.proid = $scope.currentProduct.id;
				jsonfutures.protype = $scope.productType;
			}
			else {
				jsonfutures.proid = $scope.currentanalogProduct.id;
				jsonfutures.protype = $scope.productType;
			}
			jsonfutures.page = $scope.futuresCurrentPage;
			jsonfutures.pageCount = $scope.pageCount;
			ManageService.cspManageGetFutures(jsonfutures,function(futuresres) {
				if(futuresres.result === "succeed") {
					if($scope.productType === 1) {
						$scope.currentProduct.futureses = futuresres.data;
						$scope.currentProduct.checkallfutures = false;
						for(var m = 0; m < $scope.currentProduct.futureses.length; m++) {
							$scope.currentProduct.futureses[m].edit = false;
							$scope.currentProduct.futureses[m].checked = false;
							$scope.currentProduct.futureses[m].dealtypejson = {};
							if($scope.currentProduct.futureses[m].dealtype == 0) {
								$scope.currentProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[0];
							}
							else {
								$scope.currentProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[1];
							}
						}
						if(futuresres.data.length === 0) {
							$scope.currentProduct.showLoadFutures = true;
						}
						else {
							$scope.currentProduct.showLoadFutures = false;
						}
					}
					else {
						$scope.currentanalogProduct.futureses = futuresres.data;
						$scope.currentanalogProduct.checkallfutures = false;
						for(var m = 0; m < $scope.currentanalogProduct.futureses.length; m++) {
							$scope.currentanalogProduct.futureses[m].edit = false;
							$scope.currentanalogProduct.futureses[m].checked = false;
							$scope.currentanalogProduct.futureses[m].dealtypejson = {};
							if($scope.currentanalogProduct.futureses[m].dealtype == 0) {
								$scope.currentanalogProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[0];
							}
							else {
								$scope.currentanalogProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[1];
							}
						}
						if(futuresres.data.length === 0) {
							$scope.currentanalogProduct.showLoadFutures = true;
						}
						else {
							$scope.currentanalogProduct.showLoadFutures = false;
						}
					}
					//设计分页
					console.log(futuresres.count);
					$scope.futuresTotalPage = Math.ceil(futuresres.count/$scope.pageCount) ;
					$scope.futuresPages = [];
					var start = 1;
					if( $scope.futuresCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.futuresTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.futuresCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.futuresTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.futuresTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.futuresTotalPage || $scope.futuresTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.futuresCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.futuresPages.push(json);
						}
					}
					if($scope.futuresTotalPage <= 1) {
						$scope.futuresShowPrev = false;
						$scope.futuresShowNext = false;
					}
					else {
						$scope.futuresShowPrev = true;
						$scope.futuresShowNext = true;
					}
				}
				else {
					alert("获取数据失败");
				}
			})
		}
	}
	$scope.cspManagefuturesLoopPrev = function() {
		if($scope.futuresCurrentPage === 1) {}
		else {
			$scope.futuresCurrentPage = $scope.futuresCurrentPage -1;
			//获取期货数据
			var jsonfutures = {};
			if($scope.productType === 1) {
				jsonfutures.proid = $scope.currentProduct.id;
				jsonfutures.protype = $scope.productType;
			}
			else {
				jsonfutures.proid = $scope.currentanalogProduct.id;
				jsonfutures.protype = $scope.productType;
			}
			jsonfutures.page = $scope.futuresCurrentPage;
			jsonfutures.pageCount = $scope.pageCount;
			ManageService.cspManageGetFutures(jsonfutures,function(futuresres) {
				if(futuresres.result === "succeed") {
					if($scope.productType === 1) {
						$scope.currentProduct.futureses = futuresres.data;
						$scope.currentProduct.checkallfutures = false;
						for(var m = 0; m < $scope.currentProduct.futureses.length; m++) {
							$scope.currentProduct.futureses[m].edit = false;
							$scope.currentProduct.futureses[m].checked = false;
							$scope.currentProduct.futureses[m].dealtypejson = {};
							if($scope.currentProduct.futureses[m].dealtype == 0) {
								$scope.currentProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[0];
							}
							else {
								$scope.currentProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[1];
							}
						}
						if(futuresres.data.length === 0) {
							$scope.currentProduct.showLoadFutures = true;
						}
						else {
							$scope.currentProduct.showLoadFutures = false;
						}
					}
					else {
						$scope.currentanalogProduct.futureses = futuresres.data;
						$scope.currentanalogProduct.checkallfutures = false;
						for(var m = 0; m < $scope.currentanalogProduct.futureses.length; m++) {
							$scope.currentanalogProduct.futureses[m].edit = false;
							$scope.currentanalogProduct.futureses[m].checked = false;
							$scope.currentanalogProduct.futureses[m].dealtypejson = {};
							if($scope.currentanalogProduct.futureses[m].dealtype == 0) {
								$scope.currentanalogProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[0];
							}
							else {
								$scope.currentanalogProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[1];
							}
						}
						if(futuresres.data.length === 0) {
							$scope.currentanalogProduct.showLoadFutures = true;
						}
						else {
							$scope.currentanalogProduct.showLoadFutures = false;
						}
					}
					//设计分页
					console.log(futuresres.count);
					$scope.futuresTotalPage = Math.ceil(futuresres.count/$scope.pageCount) ;
					$scope.futuresPages = [];
					var start = 1;
					if( $scope.futuresCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.futuresTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.futuresCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.futuresTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.futuresTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.futuresTotalPage || $scope.futuresTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.futuresCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.futuresPages.push(json);
						}
					}
					if($scope.futuresTotalPage <= 1) {
						$scope.futuresShowPrev = false;
						$scope.futuresShowNext = false;
					}
					else {
						$scope.futuresShowPrev = true;
						$scope.futuresShowNext = true;
					}
				}
				else {
					alert("获取数据失败");
				}
			})
		}
	}
	$scope.cspManagefuturesLoopToPage = function(page) {
		if(page === $scope.futuresCurrentPage) {}
		else {
			$scope.futuresCurrentPage = page.num;
			//获取期货数据
			var jsonfutures = {};
			if($scope.productType === 1) {
				jsonfutures.proid = $scope.currentProduct.id;
				jsonfutures.protype = $scope.productType;
			}
			else {
				jsonfutures.proid = $scope.currentanalogProduct.id;
				jsonfutures.protype = $scope.productType;
			}
			jsonfutures.page = $scope.futuresCurrentPage;
			jsonfutures.pageCount = $scope.pageCount;
			ManageService.cspManageGetFutures(jsonfutures,function(futuresres) {
				if(futuresres.result === "succeed") {
					if($scope.productType === 1) {
						$scope.currentProduct.futureses = futuresres.data;
						$scope.currentProduct.checkallfutures = false;
						for(var m = 0; m < $scope.currentProduct.futureses.length; m++) {
							$scope.currentProduct.futureses[m].edit = false;
							$scope.currentProduct.futureses[m].checked = false;
							$scope.currentProduct.futureses[m].dealtypejson = {};
							if($scope.currentProduct.futureses[m].dealtype == 0) {
								$scope.currentProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[0];
							}
							else {
								$scope.currentProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[1];
							}
						}
						if(futuresres.data.length === 0) {
							$scope.currentProduct.showLoadFutures = true;
						}
						else {
							$scope.currentProduct.showLoadFutures = false;
						}
					}
					else {
						$scope.currentanalogProduct.futureses = futuresres.data;
						$scope.currentanalogProduct.checkallfutures = false;
						for(var m = 0; m < $scope.currentanalogProduct.futureses.length; m++) {
							$scope.currentanalogProduct.futureses[m].edit = false;
							$scope.currentanalogProduct.futureses[m].checked = false;
							$scope.currentanalogProduct.futureses[m].dealtypejson = {};
							if($scope.currentanalogProduct.futureses[m].dealtype == 0) {
								$scope.currentanalogProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[0];
							}
							else {
								$scope.currentanalogProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[1];
							}
						}
						if(futuresres.data.length === 0) {
							$scope.currentanalogProduct.showLoadFutures = true;
						}
						else {
							$scope.currentanalogProduct.showLoadFutures = false;
						}
					}
					//设计分页
					console.log(futuresres.count);
					$scope.futuresTotalPage = Math.ceil(futuresres.count/$scope.pageCount) ;
					$scope.futuresPages = [];
					var start = 1;
					if( $scope.futuresCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.futuresTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.futuresCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.futuresTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.futuresTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.futuresTotalPage || $scope.futuresTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.futuresCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.futuresPages.push(json);
						}
					}
					if($scope.futuresTotalPage <= 1) {
						$scope.futuresShowPrev = false;
						$scope.futuresShowNext = false;
					}
					else {
						$scope.futuresShowPrev = true;
						$scope.futuresShowNext = true;
					}
				}
				else {
					alert("获取数据失败");
				}
			})
		}
	}
	$scope.cspManagefuturesLoopNext = function() {
		if($scope.futuresCurrentPage === $scope.futuresTotalPage) {}
		else {
			$scope.futuresCurrentPage = $scope.futuresCurrentPage + 1;
			//获取期货数据
			var jsonfutures = {};
			if($scope.productType === 1) {
				jsonfutures.proid = $scope.currentProduct.id;
				jsonfutures.protype = $scope.productType;
			}
			else {
				jsonfutures.proid = $scope.currentanalogProduct.id;
				jsonfutures.protype = $scope.productType;
			}
			jsonfutures.page = $scope.futuresCurrentPage;
			jsonfutures.pageCount = $scope.pageCount;
			ManageService.cspManageGetFutures(jsonfutures,function(futuresres) {
				if(futuresres.result === "succeed") {
					if($scope.productType === 1) {
						$scope.currentProduct.futureses = futuresres.data;
						$scope.currentProduct.checkallfutures = false;
						for(var m = 0; m < $scope.currentProduct.futureses.length; m++) {
							$scope.currentProduct.futureses[m].edit = false;
							$scope.currentProduct.futureses[m].checked = false;
							$scope.currentProduct.futureses[m].dealtypejson = {};
							if($scope.currentProduct.futureses[m].dealtype == 0) {
								$scope.currentProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[0];
							}
							else {
								$scope.currentProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[1];
							}
						}
						if(futuresres.data.length === 0) {
							$scope.currentProduct.showLoadFutures = true;
						}
						else {
							$scope.currentProduct.showLoadFutures = false;
						}
					}
					else {
						$scope.currentanalogProduct.futureses = futuresres.data;
						$scope.currentanalogProduct.checkallfutures = false;
						for(var m = 0; m < $scope.currentanalogProduct.futureses.length; m++) {
							$scope.currentanalogProduct.futureses[m].edit = false;
							$scope.currentanalogProduct.futureses[m].checked = false;
							$scope.currentanalogProduct.futureses[m].dealtypejson = {};
							if($scope.currentanalogProduct.futureses[m].dealtype == 0) {
								$scope.currentanalogProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[0];
							}
							else {
								$scope.currentanalogProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[1];
							}
						}
						if(futuresres.data.length === 0) {
							$scope.currentanalogProduct.showLoadFutures = true;
						}
						else {
							$scope.currentanalogProduct.showLoadFutures = false;
						}
					}
					//设计分页
					console.log(futuresres.count);
					$scope.futuresTotalPage = Math.ceil(futuresres.count/$scope.pageCount) ;
					$scope.futuresPages = [];
					var start = 1;
					if( $scope.futuresCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.futuresTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.futuresCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.futuresTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.futuresTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.futuresTotalPage || $scope.futuresTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.futuresCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.futuresPages.push(json);
						}
					}
					if($scope.futuresTotalPage <= 1) {
						$scope.futuresShowPrev = false;
						$scope.futuresShowNext = false;
					}
					else {
						$scope.futuresShowPrev = true;
						$scope.futuresShowNext = true;
					}
				}
				else {
					alert("获取数据失败");
				}
			})
		}
	}
	$scope.cspManagefuturesLoopLast = function() {
		if($scope.futuresCurrentPage === $scope.futuresTotalPage) {}
		else {
			$scope.futuresCurrentPage = $scope.futuresTotalPage;
			//获取期货数据
			var jsonfutures = {};
			if($scope.productType === 1) {
				jsonfutures.proid = $scope.currentProduct.id;
				jsonfutures.protype = $scope.productType;
			}
			else {
				jsonfutures.proid = $scope.currentanalogProduct.id;
				jsonfutures.protype = $scope.productType;
			}
			jsonfutures.page = $scope.futuresCurrentPage;
			jsonfutures.pageCount = $scope.pageCount;
			ManageService.cspManageGetFutures(jsonfutures,function(futuresres) {
				if(futuresres.result === "succeed") {
					if($scope.productType === 1) {
						$scope.currentProduct.futureses = futuresres.data;
						$scope.currentProduct.checkallfutures = false;
						for(var m = 0; m < $scope.currentProduct.futureses.length; m++) {
							$scope.currentProduct.futureses[m].edit = false;
							$scope.currentProduct.futureses[m].checked = false;
							$scope.currentProduct.futureses[m].dealtypejson = {};
							if($scope.currentProduct.futureses[m].dealtype == 0) {
								$scope.currentProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[0];
							}
							else {
								$scope.currentProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[1];
							}
						}
						if(futuresres.data.length === 0) {
							$scope.currentProduct.showLoadFutures = true;
						}
						else {
							$scope.currentProduct.showLoadFutures = false;
						}
					}
					else {
						$scope.currentanalogProduct.futureses = futuresres.data;
						$scope.currentanalogProduct.checkallfutures = false;
						for(var m = 0; m < $scope.currentanalogProduct.futureses.length; m++) {
							$scope.currentanalogProduct.futureses[m].edit = false;
							$scope.currentanalogProduct.futureses[m].checked = false;
							$scope.currentanalogProduct.futureses[m].dealtypejson = {};
							if($scope.currentanalogProduct.futureses[m].dealtype == 0) {
								$scope.currentanalogProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[0];
							}
							else {
								$scope.currentanalogProduct.futureses[m].dealtypejson = $scope.futuresDealTypes[1];
							}
						}
						if(futuresres.data.length === 0) {
							$scope.currentanalogProduct.showLoadFutures = true;
						}
						else {
							$scope.currentanalogProduct.showLoadFutures = false;
						}
					}
					//设计分页
					console.log(futuresres.count);
					$scope.futuresTotalPage = Math.ceil(futuresres.count/$scope.pageCount) ;
					$scope.futuresPages = [];
					var start = 1;
					if( $scope.futuresCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.futuresTotalPage <= $scope.itemCount) {
						start = 1;
					}
					else {
						start = $scope.futuresCurrentPage - Math.ceil($scope.itemCount/2) +1;
						if($scope.futuresTotalPage -  start + 1 < $scope.itemCount ) {
							start = $scope.futuresTotalPage - $scope.itemCount +1;
						}
					}
					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
						if(r > $scope.futuresTotalPage || $scope.futuresTotalPage <= 1) {
							break;
						}
						else {
							var json = {};
							json.num = r;
							if(r === $scope.futuresCurrentPage) {
								json.select = true;
							}
							else {
								json.select = false;
							}
							$scope.futuresPages.push(json);
						}
					}
					if($scope.futuresTotalPage <= 1) {
						$scope.futuresShowPrev = false;
						$scope.futuresShowNext = false;
					}
					else {
						$scope.futuresShowPrev = true;
						$scope.futuresShowNext = true;
					}
				}
				else {
					alert("获取数据失败");
				}
			})
		}
	}
	//点击勾选主页显示--热门产品
	$scope.cspManageProductCheckClick = function(index) {
		if($scope.products[index].priority != 0){
			//验证登录状态
			UserInfoService.cspUserCheckAndLoginByCookie($scope.cookieInfo,function(loginres) {
				if(loginres.result == "succeed") {
					if(loginres.gorisk == true) {
						$state.go('risklevel');
					}
					else {
						//登录成功，to do..删除选中的热门产品
						var dsjson = {};
						dsjson.protype = 1;
						dsjson.priority = $scope.products[index].priority;
						ManageService.cspManageDeleteShowProduct(dsjson,function(dsres) {
							if(dsres.result == "succeed") {
								//遍历产品表
								for(var i = 0; i < $scope.homeProducts.length; i ++) {
									if($scope.homeProducts[i].proid == $scope.products[index].id) {
										$scope.homeProducts[i].proid = -1;
										$scope.homeProducts[i].piclink = "images/addpro.png";
										$scope.homeProducts[i].caption = "请选择产品";
										break;
									}
								}
								$scope.products[index].priority = 0;
								$scope.homeProductsThree = false;
							}
							else {
								alert("操作失败");
							}
						})
					}
				}
				else {
					$state.go('home');
				}
			})

		}
		else {
			//添加一条信息
			var key = 0;
			for(key = 0; key < 3; key++) {
				if($scope.homeProducts[key].proid == -1) {
					break;
				}
			}
			console.log("key",key);
			var asjson = {};
			asjson.protype = 1;
			asjson.proid = $scope.products[index].id;
			asjson.priority = $scope.homeProducts[key].priority;
			ManageService.cspManageAddShowProduct(asjson,function(asres) {
				if(asres.result == "succeed") {
					$scope.products[index].priority = key +1;
					$scope.homeProducts[key].proid = 	$scope.products[index].id;
					$scope.homeProducts[key].caption = 	$scope.products[index].caption;
					$scope.homeProducts[key].piclink = 	$scope.products[index].piclink;
					$scope.homeProductsThree = true;
					for( var i = 0; i<3;i++) {
						if($scope.homeProducts[i].proid == -1) {
							$scope.homeProductsThree = false;
							break;
						}
					}
				}
				else {
					alert("操作失败");
				}
			})
		}
	}

	//删除选中的热门产品
	$scope.cspManageDeleteShowProduct = function(index) {
		if($scope.homeProducts[index].proid == -1) {}
		else {
			//验证登录状态
			UserInfoService.cspUserCheckAndLoginByCookie($scope.cookieInfo,function(loginres) {
				if(loginres.result == "succeed") {
					if(loginres.gorisk == true) {
						$state.go('risklevel');
					}
					else {
						//登录成功，to do..删除选中的热门产品
						var dsjson = {};
						dsjson.protype = $scope.homeProducts[index].protype;
						dsjson.priority = $scope.homeProducts[index].priority;
						ManageService.cspManageDeleteShowProduct(dsjson,function(dsres) {
							if(dsres.result == "succeed") {
								//遍历产品表
								for(var i = 0; i < $scope.products.length; i ++) {
									if($scope.products[i].id == $scope.homeProducts[index].proid) {
										$scope.products[i].priority = 0;
										break;
									}
								}
								$scope.homeProducts[index].proid = -1;
								$scope.homeProducts[index].piclink = "images/addpro.png";
								$scope.homeProducts[index].caption = "请选择产品";
								$scope.homeProductsThree = false;
							}
							else {
								alert("操作失败");
							}
						})
					}
				}
				else {
					$state.go('home');
				}
			})
		}
	}

	//删除选中的策略产品
	$scope.cspManageDeleteAnalogShowProduct = function(index) {
		console.log("dslfkjl");
		if($scope.homeAnalogProducts[index].proid == -1) {}
		else {
			//验证登录状态
			UserInfoService.cspUserCheckAndLoginByCookie($scope.cookieInfo,function(loginres) {
				if(loginres.result == "succeed") {
					if(loginres.gorisk == true) {
						$state.go('risklevel');
					}
					else {
						//登录成功，to do..删除选中的热门产品
						var dsjson = {};
						dsjson.protype = $scope.homeAnalogProducts[index].protype;
						dsjson.priority = $scope.homeAnalogProducts[index].priority;
						console.log(dsjson);
						ManageService.cspManageDeleteShowProduct(dsjson,function(dsres) {
							if(dsres.result == "succeed") {
								//遍历产品表
								for(var i = 0; i < $scope.analogProducts.length; i ++) {
									if($scope.analogProducts[i].id == $scope.homeAnalogProducts[index].proid) {
										$scope.analogProducts[i].priority = 0;
										break;
									}
								}
								$scope.homeAnalogProducts[index].proid = -1;
								$scope.homeAnalogProducts[index].piclink = "images/addpro.png";
								$scope.homeAnalogProducts[index].caption = "请选择产品";
								$scope.homeAnalogProductsThree = false;
							}
							else {
								alert("操作失败");
							}
						})
					}
				}
				else {
					$state.go('home');
				}
			})
		}
	}

	//点击勾选的主页显示--策略产品
	$scope.cspManageAnalogProductCheckClick = function(index) {
		if($scope.analogProducts[index].priority != 0){
			//验证登录状态
			UserInfoService.cspUserCheckAndLoginByCookie($scope.cookieInfo,function(loginres) {
				if(loginres.result == "succeed") {
					if(loginres.gorisk == true) {
						$state.go('risklevel');
					}
					else {
						//登录成功，to do..删除选中的策略产品
						var dsjson = {};
						dsjson.protype = 2;
						dsjson.priority = $scope.analogProducts[index].priority;
						ManageService.cspManageDeleteShowProduct(dsjson,function(dsres) {
							if(dsres.result == "succeed") {
								//遍历产品表
								for(var i = 0; i < $scope.homeAnalogProducts.length; i ++) {
									if($scope.homeAnalogProducts[i].proid == $scope.analogProducts[index].id) {
										$scope.homeAnalogProducts[i].proid = -1;
										$scope.homeAnalogProducts[i].piclink = "images/addpro.png";
										$scope.homeAnalogProducts[i].caption = "请选择产品";
										break;
									}
								}
								$scope.analogProducts[index].priority = 0;
								$scope.homeAnalogProductsThree = false;
							}
							else {
								alert("操作失败");
							}
						})
					}
				}
				else {
					$state.go('home');
				}
			})

		}
		else {
			//添加一条信息
			var key = 0;
			for(key = 0; key < 3; key++) {
				if($scope.homeAnalogProducts[key].proid == -1) {
					break;
				}
			}
			console.log("key",key);
			var asjson = {};
			asjson.protype = 2;
			asjson.proid = $scope.analogProducts[index].id;
			asjson.priority = $scope.homeAnalogProducts[key].priority;
			ManageService.cspManageAddShowProduct(asjson,function(asres) {
				if(asres.result == "succeed") {
					$scope.analogProducts[index].priority = key +1;
					$scope.homeAnalogProducts[key].proid = 	$scope.analogProducts[index].id;
					$scope.homeAnalogProducts[key].caption = 	$scope.analogProducts[index].caption;
					$scope.homeAnalogProducts[key].piclink = 	$scope.analogProducts[index].piclink;
					$scope.homeAnalogProductsThree = true;
					for( var i = 0; i<3;i++) {
						if($scope.homeAnalogProducts[i].proid == -1) {
							$scope.homeAnalogProductsThree = false;
							break;
						}
					}
				}
				else {
					alert("操作失败");
				}
			})
		}
	}

	//刷新系列
	$scope.cspManageRefreshSeries = function(page) {
		$scope.seriesLoading.loading = false;
		$scope.seriesLoading.error = false;
		$scope.seriesLoading.errorString ="";
		$scope.newSeries = false;
		$scope.seriesCurrentPage = page;
		var gpsjson ={};
		gpsjson.page = $scope.seriesCurrentPage;
		gpsjson.pageCount = $scope.pageCount;
		ManageService.cspManageGetPageSeries(gpsjson,function(gpsres) {
			if(gpsres.result == "succeed") {
				$scope.series.splice(0,$scope.series.length);
				$scope.series = gpsres.data;
				for(var i = 0; i < $scope.series.length; i++) {
					$scope.series[i].edit = false;
					$scope.series[i].editname = $scope.series[i].name;
					$scope.series[i].editdesc = $scope.series[i].description;
				}
				//分页处理
				$scope.seriesTotalPage = Math.ceil(gpsres.count/$scope.pageCount) ;
				$scope.seriesPages.splice(0,$scope.seriesPages.length);
				var start = 1;
				if( $scope.seriesCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.seriesTotalPage <= $scope.itemCount) {
					start = 1;
				}
				else {
					start = $scope.seriesCurrentPage - Math.ceil($scope.itemCount/2) +1;
					if($scope.seriesTotalPage -  start + 1 < $scope.itemCount ) {
						start = $scope.seriesTotalPage - $scope.itemCount +1;
					}
				}
				for( var r = start ; r < start + $scope.itemCount; r ++ ) {
					if(r > $scope.seriesTotalPage || $scope.seriesTotalPage <= 1) {
						break;
					}
					else {
						var json = {};
						json.num = r;
						if(r === $scope.seriesCurrentPage) {
							json.select = true;
						}
						else {
							json.select = false;
						}
						$scope.seriesPages.push(json);
					}
				}
				if($scope.seriesTotalPage <= 1) {
					$scope.seriesShowPrev = false;
					$scope.seriesShowNext = false;
				}
				else {
					$scope.seriesShowPrev = true;
					$scope.seriesShowNext = true;
				}
			}
			else {
				alert("获取数据失败");
			}
		})
	}

	//新建系列
	$scope.cspManageNewSeries = function() {
		$scope.newSeries = true;
		$scope.nowSeries.name = "";
		$scope.nowSeries.description = "";
	}

	//新建保存
	$scope.cspManageNewSeriesOk = function() {
		var second = 1;
		$scope.seriesLoading.loading = true;
		$scope.seriesLoading.error = false;
		$scope.seriesLoading.errorString = "正在提交，请稍候...";
		if($scope.nowSeries.name == "" || typeof($scope.nowSeries.name) == "undefined") {
			$scope.seriesLoading.error = true;
			$scope.seriesLoading.errorString = "系列名称不能为空";
			$scope.loadingtime = undefined;
			$scope.loadingtime = $interval(function(){
				if(second<=0){
				  $interval.cancel($scope.loadingtime);
				  $scope.loadingtime = undefined;
				  $scope.seriesLoading.loading = false;
				}else{
				  second--;
				}
			},500,100);
		}
		else if($scope.nowSeries.description == "" || typeof($scope.nowSeries.description) == "undefined") {
			$scope.seriesLoading.error = true;
			$scope.seriesLoading.errorString = "系列说明不能为空";
			$scope.loadingtime = undefined;
			$scope.loadingtime = $interval(function(){
				if(second<=0){
				  $interval.cancel($scope.loadingtime);
				  $scope.loadingtime = undefined;
				  $scope.seriesLoading.loading = false;
				}else{
				  second--;
				}
			},500,100);
		}
		else {
			//验证登录状态
			UserInfoService.cspUserCheckAndLoginByCookie($scope.cookieInfo,function(loginres) {
				if(loginres.result == "succeed") {
					if(loginres.gorisk == true) {
						$state.go('risklevel');
					}
					else {
						//登录成功，to do..回写数据库
						var asjson = {};
						asjson.name = $scope.nowSeries.name;
						asjson.description = $scope.nowSeries.description;
						ManageService.cspManageAddSeries(asjson,function(asres) {
							if(asres.result == "succeed") {
								$scope.newSeries = false;
								$scope.seriesLoading.error = true;
								$scope.seriesLoading.errorString = "操作成功";
								$scope.loadingtime = undefined;
								$scope.loadingtime = $interval(function(){
									if(second<=0){
									  $interval.cancel($scope.loadingtime);
									  $scope.loadingtime = undefined;
									  $scope.seriesLoading.loading = false;
									  $scope.cspManageRefreshSeries(1);
									}else{
									  second--;
									}
								},500,100);
							}
							else {
								$scope.seriesLoading.error = true;
								$scope.seriesLoading.errorString = asres.reason;
								$scope.loadingtime = undefined;
								$scope.loadingtime = $interval(function(){
									if(second<=0){
									  $interval.cancel($scope.loadingtime);
									  $scope.loadingtime = undefined;
									  $scope.seriesLoading.loading = false;
									}else{
									  second--;
									}
								},500,100);
							}
						})
					}
				}
				else {
					$state.go('home');
				}
			})
		}
	}

	//新建取消
	$scope.cspManageNewSeriesCancel = function() {
		$scope.newSeries = false;
	}

	//编辑系列
	$scope.cspManageEditSeries = function(index) {
		$scope.series[index].editname = $scope.series[index].name;
		$scope.series[index].editdesc = $scope.series[index].description;
		$scope.series[index].edit = true;
	}

	//删除系列
	$scope.cspManageDeleteSeries = function(index) {
		var second = 1;
		$scope.seriesLoading.loading = true;
		$scope.seriesLoading.error = false;
		$scope.seriesLoading.errorString = "正在提交，请稍候...";
		//验证登录状态
		UserInfoService.cspUserCheckAndLoginByCookie($scope.cookieInfo,function(loginres) {
			if(loginres.result == "succeed") {
				if(loginres.gorisk == true) {
					$state.go('risklevel');
				}
				else {
					//登录成功，to do..回写数据库
					var dsjson = {};
					dsjson.id = $scope.series[index].id;
					ManageService.cspManageDeleteSeries(dsjson,function(dsres) {
						if(dsres.result == "succeed") {
							$scope.newSeries = false;
							$scope.seriesLoading.error = true;
							$scope.seriesLoading.errorString = "操作成功";
							$scope.loadingtime = undefined;
							$scope.loadingtime = $interval(function(){
								if(second<=0){
								  $interval.cancel($scope.loadingtime);
								  $scope.loadingtime = undefined;
								  $scope.seriesLoading.loading = false;
								  $scope.cspManageRefreshSeries(1);
								}else{
								  second--;
								}
							},500,100);
						}
						else {
							$scope.seriesLoading.error = true;
							$scope.seriesLoading.errorString = dsres.reason;
							$scope.loadingtime = undefined;
							$scope.loadingtime = $interval(function(){
								if(second<=0){
								  $interval.cancel($scope.loadingtime);
								  $scope.loadingtime = undefined;
								  $scope.seriesLoading.loading = false;
								}else{
								  second--;
								}
							},500,100);
						}
					})
				}
			}
			else {
				$state.go('home');
			}
		})
	}

	//保存编辑
	$scope.cspManageEditSeriesOk = function(index) {
		var second = 1;
		$scope.seriesLoading.loading = true;
		$scope.seriesLoading.error = false;
		$scope.seriesLoading.errorString = "正在提交，请稍候...";
		if($scope.series[index].editname == "" || typeof($scope.series[index].editname) == "undefined") {
			$scope.seriesLoading.error = true;
			$scope.seriesLoading.errorString = "系列名称不能为空";
			$scope.loadingtime = undefined;
			$scope.loadingtime = $interval(function(){
				if(second<=0){
				  $interval.cancel($scope.loadingtime);
				  $scope.loadingtime = undefined;
				  $scope.seriesLoading.loading = false;
				}else{
				  second--;
				}
			},500,100);
		}
		else if($scope.series[index].editdesc == "" || typeof($scope.series[index].editdesc) == "undefined") {
			$scope.seriesLoading.error = true;
			$scope.seriesLoading.errorString = "系列说明不能为空";
			$scope.loadingtime = undefined;
			$scope.loadingtime = $interval(function(){
				if(second<=0){
				  $interval.cancel($scope.loadingtime);
				  $scope.loadingtime = undefined;
				  $scope.seriesLoading.loading = false;
				}else{
				  second--;
				}
			},500,100);
		}
		else {
			//验证登录状态
			UserInfoService.cspUserCheckAndLoginByCookie($scope.cookieInfo,function(loginres) {
				if(loginres.result == "succeed") {
					if(loginres.gorisk == true) {
						$state.go('risklevel');
					}
					else {
						//登录成功，to do..保存编辑
						var usjson = {};
						usjson.id = $scope.series[index].id;
						usjson.name = $scope.series[index].editname;
						usjson.description = $scope.series[index].editdesc;
						ManageService.cspManageUpdateSeries(usjson,function(usres) {
							if(usres.result == "succeed") {
								$scope.newSeries = false;
								$scope.seriesLoading.error = true;
								$scope.seriesLoading.errorString = "操作成功";
								$scope.loadingtime = undefined;
								$scope.loadingtime = $interval(function(){
									if(second<=0){
									  $interval.cancel($scope.loadingtime);
									  $scope.loadingtime = undefined;
									  $scope.seriesLoading.loading = false;
									  $scope.cspManageRefreshSeries(1);
									}else{
									  second--;
									}
								},500,100);
							}
							else {
								$scope.seriesLoading.error = true;
								$scope.seriesLoading.errorString = usres.reason;
								$scope.loadingtime = undefined;
								$scope.loadingtime = $interval(function(){
									if(second<=0){
									  $interval.cancel($scope.loadingtime);
									  $scope.loadingtime = undefined;
									  $scope.seriesLoading.loading = false;
									}else{
									  second--;
									}
								},500,100);
							}
						})
					}
				}
				else {
					$state.go('home');
				}
			})
		}
	}

	//取消编辑
	$scope.cspManageEditSeriesCancel = function(index) {
		$scope.series[index].edit = false;
	}

	//系列分页--跳转到首页
	$scope.cspManageSeriesLoopToFirst = function() {
		if($scope.seriesCurrentPage == 1) {}
		else {
			$scope.cspManageRefreshSeries(1);
		}
	}

	//系列分页--跳转到上一页
	$scope.cspManageSeriesLoopPrev = function() {
		if($scope.seriesCurrentPage == 1) {}
		else {
			$scope.cspManageRefreshSeries($scope.seriesCurrentPage - 1);
		}
	}

	//系列分页--跳转到指定页
	$scope.cspManageSeriesLoopToPage = function(page) {
		if($scope.seriesCurrentPage == page.num) {}
		else {
			$scope.cspManageRefreshSeries(page.num)
		}
	}

	//系列分页--跳转到下一页
	$scope.cspManageSeriesLoopNext = function() {
		if($scope.seriesCurrentPage == $scope.seriesTotalPage) {}
		else {
			$scope.cspManageRefreshSeries($scope.seriesCurrentPage + 1);
		}
	}

	//系列分页--跳转到最后一页
	$scope.cspManageSeriesLoopLast = function() {
		if($scope.seriesCurrentPage == $scope.seriesTotalPage) {}
		else {
			$scope.cspManageRefreshSeries($scope.seriesTotalPage);
		}
	}

	//获取分页公告
	$scope.cspManageGetPageNotices = function(type,proid,seriesid,page) {
		$scope.noticeCurrentPage = page;
		$scope.noticeLoading.loading = false;
		$scope.noticeLoading.error = false;
		$scope.noticeLoading.errorString = "";
		$scope.noticeModal = false;
		$scope.noticeDeleteLoading.loading = false;
		$scope.noticeDeleteLoading.error = false;
		$scope.noticeDeleteLoading.errorString = "";
		$scope.notices.splice(0,$scope.notices.length);
		var gpnjson = {};
		gpnjson.protype = type;
		gpnjson.proid = proid;
		gpnjson.page = page;
		gpnjson.seriesid = seriesid;
		gpnjson.pageCount = $scope.pageCount;
		ManageService.cspManageGetPageNotices(gpnjson,function(gpnres) {
			if(gpnres.result == "succeed") {
				$scope.notices = gpnres.data;
				//分页处理
				$scope.noticeTotalPage = Math.ceil(gpnres.count/$scope.pageCount) ;
				$scope.noticePages.splice(0,$scope.noticePages.length);
				var start = 1;
				if( $scope.noticeCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.noticeTotalPage <= $scope.itemCount) {
					start = 1;
				}
				else {
					start = $scope.noticeCurrentPage - Math.ceil($scope.itemCount/2) +1;
					if($scope.noticeTotalPage -  start + 1 < $scope.itemCount ) {
						start = $scope.noticeTotalPage - $scope.itemCount +1;
					}
				}
				for( var r = start ; r < start + $scope.itemCount; r ++ ) {
					if(r > $scope.noticeTotalPage || $scope.noticeTotalPage <= 1) {
						break;
					}
					else {
						var json = {};
						json.num = r;
						if(r === $scope.noticeCurrentPage) {
							json.select = true;
						}
						else {
							json.select = false;
						}
						$scope.noticePages.push(json);
					}
				}
				if($scope.noticeTotalPage <= 1) {
					$scope.noticeShowPrev = false;
					$scope.noticeShowNext = false;
				}
				else {
					$scope.noticeShowPrev = true;
					$scope.noticeShowNext = true;
				}
			}
			else {
				alert("获取数据失败，请刷新重试")
			}
		})
	}

	//刷新公告
	$scope.cspManageRefreshNotice = function() {
		// jQuery("#csp_manage_notice_proid_dropdown").dropdown('clear');
		// jQuery("#csp_manage_notice_series_dropdown").dropdown('restore default value');
		// jQuery("#csp_manage_notice_protype_dropdown").dropdown('restore default value');
		// $scope.cspManageGetPageNotices(0,0,-1,1);
		if($scope.noticeSelect.protype == 0) {
			jQuery("#csp_manage_notice_series_dropdown").dropdown('restore default value');
		}
		else {
			jQuery("#csp_manage_notice_proid_dropdown").dropdown('clear');
		}
		$scope.cspManageGetPageNotices($scope.noticeSelect.protype,0,-1,1);
	}

	//新建公告
	$scope.cspManageNewNotice = function() {
		$scope.currentNotice.proid = $scope.noticeSelect.proid;
		$scope.currentNotice.protype = $scope.noticeSelect.protype == 0 ? 1 : $scope.noticeSelect.protype;
		$scope.currentNotice.name = "";
		$scope.currentNotice.filename = "";
		$scope.currentNotice.path = "";
		$scope.noticeLoading.loading = false;
		$scope.noticeLoading.error = false;
		$scope.noticeLoading.errorString = "";
		var gnpjson = {};
		gnpjson.protype = $scope.currentNotice.protype;
		ManageService.cspManageGetNoticeProduct(gnpjson,function(gnpres) {
			if(gnpres.result == "succeed") {
				$scope.noticeselectproduct.splice(0,$scope.noticeselectproduct.length);
				$scope.noticeselectproduct = gnpres.data;
				$scope.noticeModalPath = "tpls/managecenter/newnotice.html";
				$scope.noticestate = 1;
				$scope.noticeModal = true;
			}
			else {
				alert("获取数据失败，请刷新重试");
			}
		})
	}

	//modal加载完毕
	$scope.cspManageNoticeLoad = function() {
		switch ($scope.noticestate) {
			case 1:
				//新建
				jQuery("#csp_manage_newnotice_proid_dropdown").dropdown('restore defaults');
				//jQuery("#csp_manage_newnotice_protype_dropdown").dropdown('restore defaults');
				jQuery("#csp_manage_newnotice_proid_dropdown").dropdown({
					onChange:function(value,text,choice) {
						if(value != "") {
							$scope.currentNotice.proid = value;
						}
					},
					on:'click'
				})
				jQuery("#csp_manage_newnotice_protype_dropdown").dropdown(
					{
						onChange:function(value,text,choice) {
							console.log("change protype",value);
							if(value != "") {
								$scope.currentNotice.protype = 0;
								$scope.currentNotice.protype = value;
								var gnpjson = {};
								gnpjson.protype = value;
								ManageService.cspManageGetNoticeProduct(gnpjson,function(gnpres) {
									if(gnpres.result == "succeed") {
										$scope.noticeselectproduct.splice(0,$scope.noticeselectproduct.length);
										$scope.noticeselectproduct = gnpres.data;
										jQuery("#csp_manage_newnotice_proid_dropdown").dropdown({
											onChange:function(value,text,choice) {
												if(value != "") {
													$scope.currentNotice.proid = value;
												}
											},
											on:'click'
										})
									}
									else {
										alert("获取数据失败，请刷新重试");
									}
								})
							}
						},
						on: 'click'
					}
				);
				break;
			case 2:
				//编辑
				break;
			default:
				break;
		}
	}

	//新建公告保存
	$scope.cspManageNewNoticeOk = function() {
		var second = 1;
		$scope.noticeLoading.loading = true;
		$scope.noticeLoading.error = false;
		$scope.noticeLoading.errorString = "正在提交，请稍候..."
		if($scope.currentNotice.name == "") {
			$scope.noticeLoading.error = true;
			$scope.noticeLoading.errorString = "公告标题不能为空";
			$scope.loadingtime = undefined;
			$scope.loadingtime = $interval(function(){
				if(second<=0){
				  $interval.cancel($scope.loadingtime);
				  $scope.loadingtime = undefined;
				  $scope.noticeLoading.loading = false;
				}else{
				  second--;
				}
			},500,100);
		}
		else if($scope.currentNotice.proid == 0 || $scope.currentNotice.protype == 0) {
			$scope.noticeLoading.error = true;
			$scope.noticeLoading.errorString = "请选择公告对应的产品";
			$scope.loadingtime = undefined;
			$scope.loadingtime = $interval(function(){
				if(second<=0){
				  $interval.cancel($scope.loadingtime);
				  $scope.loadingtime = undefined;
				  $scope.noticeLoading.loading = false;
				}else{
				  second--;
				}
			},500,100);
		}
		else if($scope.currentNotice.filename == "") {
			$scope.noticeLoading.error = true;
			$scope.noticeLoading.errorString = "请上传公告附件";
			$scope.loadingtime = undefined;
			$scope.loadingtime = $interval(function(){
				if(second<=0){
				  $interval.cancel($scope.loadingtime);
				  $scope.loadingtime = undefined;
				  $scope.noticeLoading.loading = false;
				}else{
				  second--;
				}
			},500,100);
		}
		else {
			//验证登录状态
			UserInfoService.cspUserCheckAndLoginByCookie($scope.cookieInfo,function(loginres) {
				if(loginres.result == "succeed") {
					if(loginres.gorisk == true) {
						$state.go('risklevel');
					}
					else {
						//登录成功，to do..//上传附件
						$scope.noticeLoading.errorString = "正在上传附件..";
						var fd = new FormData();
				        var file = document.getElementById('csp_manage_newnotice_file_input').files[0];
				        fd.append('file', file);
						ManageService.cspManageUploadNoticeFile(fd,function(fdres) {
							if(fdres.result == "succeed") {
								$scope.currentNotice.path = fdres.filepath;
								$scope.noticeLoading.errorString = "正在创建..";
								var anjson = {};
								anjson.protype = $scope.currentNotice.protype;
								anjson.proid = $scope.currentNotice.proid;
								anjson.name = $scope.currentNotice.name;
								anjson.path = $scope.currentNotice.path;
								ManageService.cspManageAddNotice(anjson,function(anres) {
									if(anres.result == "succeed") {
										$scope.noticeLoading.error = true;
										$scope.noticeLoading.errorString = "创建成功";
										$scope.loadingtime = undefined;
										$scope.loadingtime = $interval(function(){
											if(second<=0){
											  $interval.cancel($scope.loadingtime);
											  $scope.loadingtime = undefined;
											  //刷新
											  $scope.noticeLoading.loading = false;
											  $scope.noticeModal = false;
											  $scope.cspManageGetPageNotices($scope.noticeSelect.protype,$scope.noticeSelect.proid,$scope.noticeSelect.seriesid,1);
											}else{
											  second--;
											}
										},500,100);
									}
									else {
										$scope.noticeLoading.error = true;
										$scope.noticeLoading.errorString = fdres.reason;
										$scope.loadingtime = undefined;
										$scope.loadingtime = $interval(function(){
											if(second<=0){
											  $interval.cancel($scope.loadingtime);
											  $scope.loadingtime = undefined;
											  $scope.noticeLoading.loading = false;
											}else{
											  second--;
											}
										},500,100);
									}
								})
							}
							else {
								$scope.noticeLoading.error = true;
								$scope.noticeLoading.errorString = fdres.reason;
								$scope.loadingtime = undefined;
								$scope.loadingtime = $interval(function(){
									if(second<=0){
									  $interval.cancel($scope.loadingtime);
									  $scope.loadingtime = undefined;
									  $scope.noticeLoading.loading = false;
									}else{
									  second--;
									}
								},500,100);
							}
						})
					}
				}
				else {
					$state.go('home');
				}
			})
		}
	}

	//新建公告取消
	$scope.cspManageNewNoticeCancel = function() {
		$scope.noticeModal = false;
		$scope.noticeModalPath = "";
		$scope.noticestate = 0;
	}

	//浏览文件
	$scope.cspManageNewNoticeSelectFile = function () {
		document.getElementById('csp_manage_notice_file_form').reset();
		console.log(document.getElementById("csp_manage_newnotice_file_input").value);
		document.getElementById("csp_manage_newnotice_file_input").click();
	}

	//选中文件
	$scope.cspManageNewNoticeUploadFile = function() {
		filename = document.getElementById("csp_manage_newnotice_file_input").value;
		$scope.currentNotice.filename = filename.substring(12,filename.length);
	}

	//选择空文件
	$scope.cspManageNewNoticeDeleteFile = function() {
		$scope.currentNotice.filename = "";
	}

	//编辑公告
	$scope.cspManageEditNotice = function(index) {
		$scope.currentNotice.proid = $scope.notices[index].proid;
		$scope.currentNotice.caption = $scope.notices[index].caption;
		$scope.currentNotice.protype = $scope.notices[index].protype;
		$scope.currentNotice.name = $scope.notices[index].name;
		$scope.currentNotice.filename = $scope.notices[index].path.substring(6);
		$scope.currentNotice.path = "";
		$scope.currentNotice.id = $scope.notices[index].id;
		$scope.currentNotice.oldpath = $scope.notices[index].path;
		$scope.noticeLoading.loading = false;
		$scope.noticeLoading.error = false;
		$scope.noticeLoading.errorString = "";
		$scope.noticeModal = true;
		$scope.noticeModalPath = "tpls/managecenter/editnotice.html";
		$scope.noticestate = 2;
	}

	//保存编辑
	$scope.cspManageEditNoticeOk = function() {
		var second = 1;
		$scope.noticeLoading.loading = true;
		$scope.noticeLoading.error = false;
		$scope.noticeLoading.errorString = "正在提交，请稍候..."
		if($scope.currentNotice.name == "") {
			$scope.noticeLoading.error = true;
			$scope.noticeLoading.errorString = "公告标题不能为空";
			$scope.loadingtime = undefined;
			$scope.loadingtime = $interval(function(){
				if(second<=0){
				  $interval.cancel($scope.loadingtime);
				  $scope.loadingtime = undefined;
				  $scope.noticeLoading.loading = false;
				}else{
				  second--;
				}
			},500,100);
		}
		else if($scope.currentNotice.filename == "") {
			$scope.noticeLoading.error = true;
			$scope.noticeLoading.errorString = "请上传公告附件";
			$scope.loadingtime = undefined;
			$scope.loadingtime = $interval(function(){
				if(second<=0){
				  $interval.cancel($scope.loadingtime);
				  $scope.loadingtime = undefined;
				  $scope.noticeLoading.loading = false;
				}else{
				  second--;
				}
			},500,100);
		}
		else {
			//验证登录状态
			UserInfoService.cspUserCheckAndLoginByCookie($scope.cookieInfo,function(loginres) {
				if(loginres.result == "succeed") {
					if(loginres.gorisk == true) {
						$state.go('risklevel');
					}
					else {
						//登录成功，to do..//上传附件
						$scope.noticeLoading.errorString = "正在上传附件..";
						var fd = new FormData();
				        var file = document.getElementById('csp_manage_newnotice_file_input').files[0];
				        fd.append('file', file);
						ManageService.cspManageUploadNoticeFile(fd,function(fdres) {
							if(fdres.result == "succeed") {
								$scope.currentNotice.path = fdres.filepath;
								$scope.noticeLoading.errorString = "正在更新..";
								var unjson = {};
								unjson.id = $scope.currentNotice.id;
								unjson.oldpath = $scope.currentNotice.oldpath;
								unjson.path = $scope.currentNotice.path;
								unjson.name = $scope.currentNotice.name;
								ManageService.cspManageUpdateNotice(unjson,function(unres) {
									if(unres.result == "succeed") {
										$scope.noticeLoading.error = true;
										$scope.noticeLoading.errorString = "修改成功";
										$scope.loadingtime = undefined;
										$scope.loadingtime = $interval(function(){
											if(second<=0){
											  $interval.cancel($scope.loadingtime);
											  $scope.loadingtime = undefined;
											  //刷新
											  $scope.noticeLoading.loading = false;
											  $scope.noticeModal = false;
											  $scope.cspManageGetPageNotices($scope.noticeSelect.protype,$scope.noticeSelect.proid,$scope.noticeSelect.seriesid,$scope.noticeCurrentPage);
											}else{
											  second--;
											}
										},500,100);
									}
									else {
										$scope.noticeLoading.error = true;
										$scope.noticeLoading.errorString = fdres.reason;
										$scope.loadingtime = undefined;
										$scope.loadingtime = $interval(function(){
											if(second<=0){
											  $interval.cancel($scope.loadingtime);
											  $scope.loadingtime = undefined;
											  $scope.noticeLoading.loading = false;
											}else{
											  second--;
											}
										},500,100);
									}
								})
							}
							else {
								$scope.noticeLoading.error = true;
								$scope.noticeLoading.errorString = fdres.reason;
								$scope.loadingtime = undefined;
								$scope.loadingtime = $interval(function(){
									if(second<=0){
									  $interval.cancel($scope.loadingtime);
									  $scope.loadingtime = undefined;
									  $scope.noticeLoading.loading = false;
									}else{
									  second--;
									}
								},500,100);
							}
						})
					}
				}
				else {
					$state.go('home');
				}
			})
		}
	}

	//删除公告
	$scope.cspManageDeleteNotice = function(index) {
		var second = 1;
		$scope.noticeDeleteLoading.loading = true;
		$scope.noticeDeleteLoading.error = false;
		$scope.noticeDeleteLoading.errorString = "正在提交...";
		//验证登录状态
		UserInfoService.cspUserCheckAndLoginByCookie($scope.cookieInfo,function(loginres) {
			if(loginres.result == "succeed") {
				if(loginres.gorisk == true) {
					$state.go('risklevel');
				}
				else {
					//登录成功，to do..删除公告
					var dnjson = {};
					dnjson.id = $scope.notices[index].id;
					dnjson.path = $scope.notices[index].path;
					ManageService.cspManageDeleteNotice(dnjson,function(dnres) {
						if(dnres.result == "succeed") {
							$scope.noticeDeleteLoading.error = true;
							$scope.noticeDeleteLoading.errorString = "操作成功";
							$scope.loadingtime = undefined;
							$scope.loadingtime = $interval(function(){
								if(second<=0){
								  $interval.cancel($scope.loadingtime);
								  $scope.loadingtime = undefined;
								  $scope.noticeDeleteLoading.loading = false;
								  //刷新
								  $scope.cspManageGetPageNotices($scope.noticeSelect.protype,$scope.noticeSelect.proid,$scope.noticeSelect.seriesid,1);
								}else{
								  second--;
								}
							},500,100);
						}
						else {
							$scope.noticeDeleteLoading.error = true;
							$scope.noticeDeleteLoading.errorString = dnres.reason;
							$scope.loadingtime = undefined;
							$scope.loadingtime = $interval(function(){
								if(second<=0){
								  $interval.cancel($scope.loadingtime);
								  $scope.loadingtime = undefined;
								  $scope.noticeDeleteLoading.loading = false;
								}else{
								  second--;
								}
							},500,100);
						}
					})
				}
			}
			else {
				$state.go('home');
			}
		})
	}

	//公告管理--跳转到首页
	$scope.cspManageNoticeLoopToFirst = function() {
		if($scope.noticeCurrentPage != 1) {
			$scope.cspManageGetPageNotices($scope.noticeSelect.protype,$scope.noticeSelect.proid,$scope.noticeSelect.seriesid,1);
		}
	}

	//公告管理--跳转到上一页
	$scope.cspManageNoticeLoopPrev = function() {
		if($scope.noticeCurrentPage != 1) {
			$scope.cspManageGetPageNotices($scope.noticeSelect.protype,$scope.noticeSelect.proid,$scope.noticeSelect.seriesid,$scope.noticeCurrentPage - 1);
		}
	}

	//公告管理--跳转到指定页
	$scope.cspManageNoticeLoopToPage = function(page) {
		if($scope.noticeCurrentPage != page.num) {
			$scope.cspManageGetPageNotices($scope.noticeSelect.protype,$scope.noticeSelect.proid,$scope.noticeSelect.seriesid,page.num);
		}
	}

	//公告管理--跳转到下一页
	$scope.cspManageNoticeLoopNext = function() {
		if($scope.noticeCurrentPage != $scope.noticeTotalPage) {
			$scope.cspManageGetPageNotices($scope.noticeSelect.protype,$scope.noticeSelect.proid,$scope.noticeSelect.seriesid,$scope.noticeCurrentPage + 1);
		}
	}

	//公告管理--跳转到最后一页
	$scope.cspManageNoticeLoopLast = function() {
		if($scope.noticeCurrentPage != $scope.noticeTotalPage) {
			$scope.cspManageGetPageNotices($scope.noticeSelect.protype,$scope.noticeSelect.proid,$scope.noticeSelect.seriesid,$scope.noticeTotalPage);
		}
	}

	//导入用户
	$scope.cspManageImportUser = function() {
		$scope.cspManageLoadPath = "tpls/managecenter/loaduser.html";
		$scope.cspManageState = 12;
	}

	//返回用户列表
	$scope.cspManageLoadUserBack = function () {
		$scope.cspManageMenuChange($scope.cspManageMenuState.userLoad,$scope.cspManageMenuState.userManage);
	}

	//显示导入提示
	$scope.cspManageShowLoadUserTips = function() {
		$scope.showloadUserTips = true;
	}

	//隐藏导入提示
	$scope.cspManageHideLoadUserTips = function() {
		$scope.showloadUserTips = false;
	}

	//关闭message
	$scope.cspManageCloseLoadUserMessage = function() {
		$scope.loadUserResInfo.loading = false;
	}

	//导入用户选择文件
	$scope.cspManageLoadUserSelectFile = function() {
		$scope.showloadUserTips = false;
		document.getElementById('csp_manage_load_user_file_form').reset();
		$scope.loadUserResInfo.loading = false;
		document.getElementById('csp_manage_loaduser_file_load_input').click();
	}

	//导入用户选择文件错误
	$scope.cspManageLoadUserFileError = function() {
		$scope.loadUserResInfo.loading = true;
		$scope.loadUserResInfo.error = true;
		$scope.loadUserResInfo.errorString = "请选择csv、xls、xlsx类型的文件";
	}

	//上传文件
	$scope.cspManageLoadUserLoadFileReady = function() {
		var fd = new FormData();
		var file = document.getElementById('csp_manage_loaduser_file_load_input').files[0];
		fd.append('file', file);
		//设置等待动画
		$scope.loadUserResInfo.loading = true;
		$scope.loadUserResInfo.error = false;
		$scope.loadUserResInfo.errorString = "正在上传文件";
		$scope.loadUserOperInfo.loading = true;
		$scope.loadUserOperInfo.fileRight = false;
		//验证登录状态
		UserInfoService.cspUserCheckAndLoginByCookie($scope.cookieInfo,function(loginres) {
			if(loginres.result == "succeed") {
				if(loginres.gorisk == true) {
					$state.go('risklevel');
				}
				else {
					//登录成功，to do..上传文件
					ManageService.cspManageLoadUserUpLoadFile(fd,function(fdres) {
						if(fdres.result == "succeed") {
							if(fdres.file == true) {
								$scope.loadUserOperInfo.loading = false;
								$scope.loadUserOperInfo.fileRight = true;
								$scope.loadUserOperInfo.check = false;
								$scope.loadUserOperInfo.import = false;
								$scope.loadUserResInfo.loading = false;
								$scope.loadUsers = fdres.data;
								$scope.loadUserCheckAll = false;
								$scope.loadUserCheckOnce = false;
								for(var i = 0; i< fdres.data.length; i++) {
									$scope.loadUsers[i].selected = false;
									var j = 0;
									for( j = 0; j < $scope.conlevelInfo.length; j ++) {
										if($scope.loadUsers[i].conlevel == $scope.conlevelInfo[j].id) {
											$scope.loadUsers[i].conName = $scope.conlevelInfo[j].name;
											break;
										}
									}
									if(j >= $scope.conlevelInfo.length) {
										$scope.loadUsers[i].conName = "错误数据";
									}
								}
							}
							else {
								$scope.loadUserResInfo.error = true;
								$scope.loadUserResInfo.errorString = fdres.reason;
								$scope.loadUserOperInfo.loading = false;
								$scope.loadUserOperInfo.fileRight = false;
							}
						}
						else {
							$scope.loadUserResInfo.error = true;
							$scope.loadUserResInfo.errorString = fdres.reason;
							$scope.loadUserOperInfo.loading = false;
							$scope.loadUserOperInfo.fileRight = false;
						}
					})
				}
			}
			else {
				$state.go('home');
			}
		})
	}

	//全选，取消全选
	$scope.cspManageLoadUserSelectAll = function() {
		if(!($scope.loadUserOperInfo.check || $scope.loadUserOperInfo.import)) {
			$scope.loadUserResInfo.loading = false;
			if($scope.loadUserCheckAll == true) {
				for(var i = 0; i < $scope.loadUsers.length; i ++) {
					$scope.loadUsers[i].selected = false;
				}
				$scope.loadUserCheckAll = false;
			}
			else {
				for(var i = 0; i < $scope.loadUsers.length; i ++) {
					$scope.loadUsers[i].selected = true;
				}
				$scope.loadUserCheckAll = true;
			}
		}
	}

	//单选
	$scope.cspManageLoadUserCheckOne = function() {
		if(!($scope.loadUserOperInfo.check || $scope.loadUserOperInfo.import)) {
			$scope.loadUserResInfo.loading = false;
			$scope.loadUserCheckAll = true;
			for(var i = 0; i < $scope.loadUsers.length; i ++) {
				if($scope.loadUsers[i].selected == false) {
					$scope.loadUserCheckAll = false;
					break;
				}
			}
		}
	}

	//批量删除本地数据
	$scope.cspManageLoadUserMultipleDeleteLocal = function() {
		if(!($scope.loadUserOperInfo.check || $scope.loadUserOperInfo.import)) {
			$scope.loadUserResInfo.loading = false;
			for(var i = 0; i < $scope.loadUsers.length; i ++) {
				if($scope.loadUsers[i].selected == true) {
					$scope.loadUsers.splice(i,1);
					i --;
				}
			}
			if($scope.loadUsers.length == 0) {
				$scope.loadUserOperInfo.fileRight = false;
			}
		}
	}

	//清空本地数据
	$scope.cspManageLoadUserClearLocal = function() {
		if(!($scope.loadUserOperInfo.check || $scope.loadUserOperInfo.import)) {
			$scope.loadUserResInfo.loading = false;
			$scope.loadUsers.splice(0,$scope.loadUsers.length);
			$scope.loadUserOperInfo.fileRight = false;
		}
	}

	//一键去重
	$scope.cspManageLoadUserCheckRepeat = function() {
		if($scope.loadUserOperInfo.import == false) {
			//启用动画
			$scope.loadUserOperInfo.check = true;
			$scope.loadUserResInfo.loading = true;
			$scope.loadUserResInfo.error = false;
			$scope.loadUserResInfo.errorString = "开始检查数据格式(若数据过多，等待的时间可能较长)";
			//遍历数据
			var reg = /^1[34578]\d{9}$/
			for(var i = 0; i < $scope.loadUsers.length;i++) {
				if(!(reg.test($scope.loadUsers[i].phone) && ManageService.cspManageCheckIdcard($scope.loadUsers[i].idcard) && $scope.loadUsers[i].conName != "错误数据")) {
					$scope.loadUsers.splice(i,1);
					i--;
				}
			}
			if($scope.loadUsers.length == 0) {
				$scope.loadUserResInfo.loading = true;
				$scope.loadUserResInfo.error = true;
				$scope.loadUserResInfo.errorString = "去重完成，本地数据格式错误，请重新选择文件";
				$scope.loadUserOperInfo.fileRight = false;
			}
			else {
				$scope.loadUserResInfo.loading = true;
				$scope.loadUserResInfo.error = false;
				$scope.loadUserResInfo.errorString = "数据格式检查完成，开始进行重复性检查";
				//匹配本地重复
				for(var j = 0; j < $scope.loadUsers.length -1; j++) {
					for(var k = j + 1; k < $scope.loadUsers.length; k ++) {
						if($scope.loadUsers[k].phone == $scope.loadUsers[j].phone) {
							$scope.loadUsers.splice(k,1);
							k--;
						}
					}
				}
				$scope.loadUserResInfo.loading = true;
				$scope.loadUserResInfo.error = false;
				$scope.loadUserResInfo.errorString = "本地数据去重完成，开始与服务器数据库比对";
				//验证登录状态
				UserInfoService.cspUserCheckAndLoginByCookie($scope.cookieInfo,function(loginres) {
					if(loginres.result == "succeed") {
						if(loginres.gorisk == true) {
							$state.go('risklevel');
						}
						else {
							//登录成功，to do..获取数据中的user信息
							ManageService.cspManageGetSimpleUserInfo({},function(gsuires) {
								if(gsuires.result == "succeed") {
									var loadUserDbUsers = gsuires.data;
									for(var m = 0 ; m < gsuires.data.length; m ++) {
										for( var n = 0; n < $scope.loadUsers.length; n ++ ) {
											if(gsuires.data[m].tel == $scope.loadUsers[n].phone) {
												$scope.loadUsers.splice(n,1);
												n--;
											}
										}
									}
									if($scope.loadUsers.length == 0) {
										$scope.loadUserResInfo.loading = true;
										$scope.loadUserResInfo.error = true;
										$scope.loadUserResInfo.errorString = "去重完成，所有数据均不可用，请重新选择文件";
										$scope.loadUserOperInfo.fileRight = false;
									}
									else {
										$scope.loadUserOperInfo.check = false;
										$scope.loadUserResInfo.loading = true;
										$scope.loadUserResInfo.error = true;
										$scope.loadUserCheckOnce = true;
										$scope.loadUserResInfo.errorString = "去重完成，您可以立即导入数据库或者删除部分数据再导入";
									}
								}
								else {
									$scope.loadUserResInfo.loading = true;
									$scope.loadUserResInfo.error = true;
									$scope.loadUserResInfo.errorString = "服务器异常";
									$scope.loadUserOperInfo.check = false;
								}
							})
						}
					}
					else {
						$state.go('home');
					}
				})
			}
		}
	}

	//批量导入用户
	$scope.cspManageLoadUserSure = function() {
		if($scope.loadUserOperInfo.check == false) {
			//获取要提交的数据
			var mlujson = {};
			mlujson.count = $scope.loadUsers.length;
			mlujson.users =  $scope.loadUsers;
			//判断是否需要去重
			if($scope.loadUserCheckOnce == true) {
				//不用去重，直接写入数据库
				//启用动画
				$scope.loadUserOperInfo.import = true;
				$scope.loadUserResInfo.loading = true;
				$scope.loadUserResInfo.error = false;
				$scope.loadUserResInfo.errorString = "开始导入，请稍候";
				ManageService.cspManageMultipleLoadUser(mlujson,function(mlures) {
					if(mlures.result == "succeed") {
						//导入成功，直接切页面
						$scope.cspManageLoadPath = "tpls/managecenter/usermanage.html";
						$scope.cspManageState = 4;
					}
					else {
						$scope.loadUserCheckOnce = false;
						$scope.loadUserOperInfo.import = false;
						$scope.loadUserResInfo.loading = true;
						$scope.loadUserResInfo.error = true;
						$scope.loadUserResInfo.errorString = mlures.reason;
					}
				})
			}
			else {
				//判断重复
				//启用动画
				$scope.loadUserOperInfo.import = true;
				$scope.loadUserResInfo.loading = true;
				$scope.loadUserResInfo.error = false;
				$scope.loadUserResInfo.errorString = "开始检查数据格式(若数据过多，等待的时间可能较长)";
				//遍历数据
				var reg = /^1[34578]\d{9}$/
				for(var i = 0; i < $scope.loadUsers.length;i++) {
					if(!(reg.test($scope.loadUsers[i].phone) && ManageService.cspManageCheckIdcard($scope.loadUsers[i].idcard) && $scope.loadUsers[i].conName != "错误数据")) {
						$scope.loadUserOperInfo.import = false;
						$scope.loadUserResInfo.loading = true;
						$scope.loadUserResInfo.error = true;
						$scope.loadUserResInfo.errorString = "数据格式存在错误，建议您先一键去重";
						return ;
					}
				}
				$scope.loadUserResInfo.loading = true;
				$scope.loadUserResInfo.error = false;
				$scope.loadUserResInfo.errorString = "数据格式检查完成，开始进行重复性检查";
				//匹配本地重复
				for(var j = 0; j < $scope.loadUsers.length -1; j++) {
					for(var k = j + 1; k < $scope.loadUsers.length; k ++) {
						if($scope.loadUsers[k].phone == $scope.loadUsers[j].phone) {
							$scope.loadUserOperInfo.import = false;
							$scope.loadUserResInfo.loading = true;
							$scope.loadUserResInfo.error = true;
							$scope.loadUserResInfo.errorString = "本地数据存在重复，建议您先一键去重";
							return ;
						}
					}
				}
				$scope.loadUserResInfo.loading = true;
				$scope.loadUserResInfo.error = false;
				$scope.loadUserResInfo.errorString = "本地数据重复性检查完成，开始与服务器数据库比对";
				//验证登录状态
				UserInfoService.cspUserCheckAndLoginByCookie($scope.cookieInfo,function(loginres) {
					if(loginres.result == "succeed") {
						if(loginres.gorisk == true) {
							$state.go('risklevel');
						}
						else {
							//登录成功，to do..获取数据中的user信息
							ManageService.cspManageGetSimpleUserInfo({},function(gsuires) {
								if(gsuires.result == "succeed") {
									var loadUserDbUsers = gsuires.data;
									for(var m = 0 ; m < gsuires.data.length; m ++) {
										for( var n = 0; n < $scope.loadUsers.length; n ++ ) {
											if(gsuires.data[m].tel == $scope.loadUsers[n].phone) {
												$scope.loadUserOperInfo.import = false;
												$scope.loadUserResInfo.loading = true;
												$scope.loadUserResInfo.error = true;
												$scope.loadUserResInfo.errorString = "本地数据与服务器数据库数据冲突，建议您先一键去重";
												return ;
											}
										}
									}
									$scope.loadUserResInfo.loading = true;
									$scope.loadUserResInfo.error = false;
									$scope.loadUserResInfo.errorString = "与数据库对比完成，开始导入";
									ManageService.cspManageMultipleLoadUser(mlujson,function(mlures) {
										if(mlures.result == "succeed") {
											//导入成功，直接切页面
											$scope.cspManageLoadPath = "tpls/managecenter/usermanage.html";
											$scope.cspManageState = 4;
										}
										else {
											$scope.loadUserOperInfo.import = false;
											$scope.loadUserResInfo.loading = true;
											$scope.loadUserResInfo.error = true;
											$scope.loadUserResInfo.errorString = mlures.reason;
										}
									})
								}
								else {
									$scope.loadUserOperInfo.import = false;
									$scope.loadUserResInfo.loading = true;
									$scope.loadUserResInfo.error = true;
									$scope.loadUserResInfo.errorString = "服务器异常";
								}
							})
						}
					}
					else {
						$state.go('home');
					}
				})
			}
		}
	}

	//已购产品管理
	//点击导入数据
	$scope.cspManageToLoadBoughtData = function() {
		var second = 1;
		$scope.boughtShowModal = true;
		$scope.boughtNextInfo.loading = true;
		$scope.boughtNextInfo.error = false;
		$scope.boughtNextInfo.errorString = "正在加载产品信息";
		$scope.boughtNextInfo.proid = 0;
		$scope.boughtNextInfo.protype = 1;
		$scope.boughtNextInfo.caption = "";
		//验证登录状态
		UserInfoService.cspUserCheckAndLoginByCookie($scope.cookieInfo,function(loginres) {
			if(loginres.result == "succeed") {
				if(loginres.gorisk == true) {
					$state.go('risklevel');
				}
				else {
					//登录成功，to do..获取产品
					$scope.simpleProducts.splice(0,$scope.simpleProducts.length);
					var gspjson = {};
					gspjson.protype = 1;
					ManageService.cspManageGetSimpleProducts(gspjson,function(gspres) {
						if(gspres.result == "succeed") {
							$scope.simpleProducts = gspres.data;
							$scope.boughtNextInfo.loading = false;
						}
						else {
							$scope.boughtNextInfo.error = true;
							$scope.boughtNextInfo.errorString = gspres.reason;
							$scope.loadingtime = undefined;
							$scope.loadingtime = $interval(function(){
								if(second<=0){
								  $interval.cancel($scope.loadingtime);
								  $scope.loadingtime = undefined;
								  $scope.boughtNextInfo.loading = false;
								}else{
								  second--;
								}
							},500,100);
						}
					})
				}
			}
			else {
				$state.go('home');
			}
		})
		jQuery('#csp_manage_bought_load_product_dropdown').dropdown('clear');
		jQuery('#csp_manage_bought_load_product_dropdown').dropdown({
			onChange: function(value,text,choice) {
				if(value != "") {
					$scope.boughtNextInfo.proid = value;
					$scope.boughtNextInfo.caption = jQuery('#csp_manage_bought_load_product_dropdown').dropdown('get text');
				}
			},
			on:'click'
		});
	}

	//导入数据选择产品时取消
	$scope.cspManageBoughtCloseLoadModal = function() {
		$scope.boughtShowModal = false;
	}

	//点击下一步
	$scope.cspManageBoughtLoadNext = function() {
		if($scope.boughtNextInfo.proid == 0) {
			var second = 1;
			$scope.boughtNextInfo.loading = true;
			$scope.boughtNextInfo.error = true;
			$scope.boughtNextInfo.errorString = "请选择一个产品";
			$scope.loadingtime = undefined;
			$scope.loadingtime = $interval(function(){
				if(second<=0){
				  $interval.cancel($scope.loadingtime);
				  $scope.loadingtime = undefined;
				  $scope.boughtNextInfo.loading = false;
				}else{
				  second--;
				}
			},500,100);
		}
		else {
			$scope.boughtShowModal = false;
			$scope.cspManageState = $scope.cspManageMenuState.boughtLoad;
			$scope.cspManageLoadPath = "tpls/managecenter/loadbought.html";
			$scope.loadBoughtCheckAll = false;
			$scope.loadBoughtCheckOnce = false;
			$scope.loadBoughtOperInfo.loading = false;
			$scope.loadBoughtOperInfo.fileRight = false;
			$scope.loadBoughtOperInfo.check = false;
			$scope.loadBoughtOperInfo.import = false;
			$scope.loadBoughtResInfo.loading = false;
			$scope.loadBoughtResInfo.error = false;
			$scope.loadBoughtResInfo.errorString = "";
			$scope.showloadBoughtTips = false;
			$scope.loadBoughtRoleInfo.showModal = false;
			$scope.loadBoughtRoleInfo.role = -1;
		}
	}

	//导入已购产品数据返回
	$scope.cspManageLoadBoughtBack =  function() {
		$scope.cspManageMenuChange($scope.cspManageMenuState.boughtLoad,$scope.cspManageMenuState.boughtManage);
	}

	//关闭操作提示框
	$scope.cspManageCloseLoadBoughtMessage = function() {
		$scope.loadBoughtResInfo.loading = false;
	}

	//悬浮选择文件
	$scope.cspManageShowLoadBoughtTips = function() {
		$scope.showloadBoughtTips = true;
	}

	//离开选择文件
	$scope.cspManageHideLoadBoughtTips = function() {
		$scope.showloadBoughtTips = false;
	}

	//点击选择文件
	$scope.cspManageLoadBoughtSelectFile = function() {
		$scope.showloadBoughtTips = false;
		document.getElementById('csp_manage_load_bought_file_form').reset();
		document.getElementById('csp_manage_loadbought_file_load_input').click();
	}

	//上传文件
	$scope.cspManageLoadBoughtLoadFileReady = function() {
		var fd = new FormData();
		var file = document.getElementById('csp_manage_loadbought_file_load_input').files[0];
		fd.append('file', file);
		//设置等待动画
		$scope.loadBoughtResInfo.loading = true;
		$scope.loadBoughtResInfo.error = false;
		$scope.loadBoughtResInfo.errorString = "正在上传文件";
		$scope.loadBoughtOperInfo.loading = true;
		$scope.loadBoughtOperInfo.fileRight = false;
		$scope.loadBoughts.splice(0,$scope.loadBoughts.length);
		//验证登录状态
		UserInfoService.cspUserCheckAndLoginByCookie($scope.cookieInfo,function(loginres) {
			if(loginres.result == "succeed") {
				if(loginres.gorisk == true) {
					$state.go('risklevel');
				}
				else {
					//登录成功，to do..上传文件
					ManageService.cspManageLoadBoughtUpLoadFile(fd,function(fdres) {
						if(fdres.result == "succeed" && fdres.file == true) {
							$scope.loadBoughtResInfo.loading = true;
							$scope.loadBoughtResInfo.error = false;
							$scope.loadBoughtResInfo.errorString = "文件上传成功,正在匹配用户";
							//获取用户信息，从而匹配uid
							ManageService.cspManageGetSimpleUserInfo({},function(gsuires) {
								$scope.loadBoughts = fdres.data;
								if(gsuires.result == "succeed") {
									for(var m = 0; m <  $scope.loadBoughts.length; m++) {
										var n = 0;
										for(n = 0; n < gsuires.data.length; n ++) {
											if($scope.loadBoughts[m].phone == gsuires.data[n].tel) {
												$scope.loadBoughts[m].uid = gsuires.data[n].uid;
												$scope.loadBoughts[m].name = gsuires.data[n].name;
												break;
											}
										}
										if(n >= gsuires.data.length) {
											$scope.loadBoughts[m].uid = "";
											$scope.loadBoughts[m].name = "无匹配项";
										}
										$scope.loadBoughts[m].selected = false;
									}
									$scope.loadBoughtResInfo.loading = false;
									$scope.loadBoughtOperInfo.loading = false;
									$scope.loadBoughtOperInfo.fileRight = true;
									$scope.loadBoughtCheckAll = false;
									$scope.loadBoughtCheckOnce = false;
								}
								else {
									$scope.loadBoughtResInfo.loading = true;
									$scope.loadBoughtResInfo.error = true;
									$scope.loadBoughtResInfo.errorString = "匹配用户失败，无法进行导入";
									$scope.loadBoughts.splice(0,$scope.loadBoughts.length);
									$scope.loadBoughtOperInfo.loading = false;
									$scope.loadBoughtOperInfo.fileRight = false;
								}
							})
						}
						else {
							$scope.loadBoughtOperInfo.loading = false;
							$scope.loadBoughtResInfo.loading = true;
							$scope.loadBoughtResInfo.error = true;
							$scope.loadBoughtResInfo.errorString = "文件内容格式错误";
							$scope.loadBoughtOperInfo.fileRight = false;
						}
					})
				}
			}
			else {
				$state.go('home');
			}
		})
	}

	//文件格式错误
	$scope.cspManageLoadBoughtFileError = function() {
		$scope.loadBoughtResInfo.loading = true;
		$scope.loadBoughtResInfo.error = true;
		$scope.loadBoughtResInfo.errorString = "请选择.csv、.xls、.xlsx类型的文件";
	}

	//全选
	$scope.cspManageLoadBoughtSelectAll = function() {
		if(!($scope.loadBoughtOperInfo.check || $scope.loadBoughtOperInfo.import)) {
			$scope.loadBoughtResInfo.loading = false;
			if($scope.loadBoughtCheckAll) {
				for(var i = 0; i < $scope.loadBoughts.length; i ++) {
					$scope.loadBoughts[i].selected = false;
				}
				$scope.loadBoughtCheckAll = false;
			}
			else {
				for(var i = 0; i < $scope.loadBoughts.length; i ++) {
					$scope.loadBoughts[i].selected = true;
				}
				$scope.loadBoughtCheckAll = true;
			}
		}
	}
	//选择单个
	$scope.cspManageLoadBoughtCheckOne = function() {
		if(!($scope.loadBoughtOperInfo.check || $scope.loadBoughtOperInfo.import)) {
			$scope.loadBoughtResInfo.loading = false;
			$scope.loadBoughtCheckAll = true;
			for(var i = 0; i < $scope.loadBoughts.length; i++) {
				if($scope.loadBoughts[i].selected == false) {
					$scope.loadBoughtCheckAll = false;
					break;
				}
			}
		}
	}
	//批量删除
	$scope.cspManageLoadBoughtMultipleDeleteLocal = function() {
		if(!($scope.loadBoughtOperInfo.check || $scope.loadBoughtOperInfo.import)) {
			for(var i = 0; i < $scope.loadBoughts.length; i++) {
				if($scope.loadBoughts[i].selected == true) {
					$scope.loadBoughts.splice(i,1);
					i--;
				}
			}
			if($scope.loadBoughts.length == 0) {
				$scope.loadBoughtOperInfo.fileRight =false;
			}
		}
	}
	//清空
	$scope.cspManageLoadBoughtClearLocal = function() {
		if(!($scope.loadBoughtOperInfo.check || $scope.loadBoughtOperInfo.import)) {
			$scope.loadBoughts.splice(0,$scope.loadBoughts.length);
			$scope.loadBoughtOperInfo.fileRight =false;
		}
	}

	//一键去重
	$scope.cspManageLoadBoughtCheckRepeat = function() {
		if(!$scope.loadBoughtOperInfo.import && !$scope.loadBoughtCheckOnce) {
			//启用动画
			$scope.loadBoughtOperInfo.check = true;
			$scope.loadBoughtResInfo.loading = true;
			$scope.loadBoughtResInfo.error = false;
			$scope.loadBoughtResInfo.errorString = "开始检查数据格式(若数据过多，等待的时间可能较长)";
			//遍历数据
			var reg = /^1[34578]\d{9}$/;
			var reg1 = /^(([1-9][0-9]{0,13})|0)(.(([1-9][0-9]?)|[0-9]?[1-9]))?$/;
			for(var i = 0; i < $scope.loadBoughts.length;i++) {
				if(!(reg.test($scope.loadBoughts[i].phone) && reg1.test($scope.loadBoughts[i].amount) && $scope.loadBoughts[i].uid != "")) {
					$scope.loadBoughts.splice(i,1);
					i--;
				}
			}
			if($scope.loadBoughts.length == 0) {
				$scope.loadBoughtResInfo.loading = true;
				$scope.loadBoughtResInfo.error = true;
				$scope.loadBoughtResInfo.errorString = "去重完成，本地数据格式错误，请重新选择文件";
				$scope.loadBoughtOperInfo.fileRight = false;
			}
			else {
				$scope.loadBoughtResInfo.loading = true;
				$scope.loadBoughtResInfo.error = false;
				$scope.loadBoughtResInfo.errorString = "数据格式检查完成，开始进行重复性检查";
				//匹配本地重复
				for(var j = 0; j < $scope.loadBoughts.length -1; j++) {
					for(var k = j + 1; k < $scope.loadBoughts.length; k ++) {
						if($scope.loadBoughts[k].phone == $scope.loadBoughts[j].phone) {
							$scope.loadBoughts.splice(k,1);
							k--;
						}
					}
				}
				$scope.loadBoughtResInfo.loading = true;
				$scope.loadBoughtResInfo.error = true;
				$scope.loadBoughtResInfo.errorString = "一键去重完成，您可以选择立即导入或删除部分数据再导入";
				$scope.loadBoughtOperInfo.check = false;
				$scope.loadBoughtCheckOnce = true;
			}
		}
	}

	//确定导入
	$scope.cspManageLoadBoughtSure = function() {
		if(!$scope.loadBoughtOperInfo.check) {
			$scope.loadBoughtResInfo.loading = false;
			$scope.loadBoughtRoleInfo.showModal = true;
			if($scope.loadBoughtRoleInfo.role == -1) {
				$scope.loadBoughtRoleInfo.role = 1;
			}
		}
	}

	//选择规则
	$scope.cspManageLoadBoughtRoleChange = function(value) {
		$scope.loadBoughtRoleInfo.role = value;
	}

	//点击规则取消
	$scope.cspManageLoadBoughtRoleCancel = function() {
		$scope.loadBoughtRoleInfo.showModal = false;
	}

	//点击继续
	$scope.cspManageLoadBoughtRoleNext = function() {
		$scope.loadBoughtRoleInfo.showModal = false;
		var mlbjson = {};
		mlbjson.protype = $scope.boughtNextInfo.protype;
		mlbjson.proid = $scope.boughtNextInfo.proid;
		mlbjson.count = $scope.loadBoughts.length;
		mlbjson.boughts = $scope.loadBoughts;
		mlbjson.role =  $scope.loadBoughtRoleInfo.role;
		if($scope.loadBoughtCheckOnce == true) {
			console.log("直接导入");
			//直接导入
			ManageService.cspManageMultipleLoadBoughts(mlbjson,function(mlbres) {
				console.log(mlbres);
				if(mlbres.result == "succeed") {
					$scope.cspManageMenuChange($scope.cspManageMenuState.boughtLoad,$scope.cspManageMenuState.boughtManage);
				}
				else {
					$scope.loadBoughtResInfo.loading = true;
					$scope.loadBoughtResInfo.error = true;
					$scope.loadBoughtResInfo.errorString = mlbres.reason;
					$scope.loadBoughtOperInfo.import = false;
					$scope.loadBoughtCheckOnce = false;
				}
			})
		}
		else {
			//先验重
			$scope.loadBoughtOperInfo.import = true;
			$scope.loadBoughtResInfo.loading = true;
			$scope.loadBoughtResInfo.error = false;
			$scope.loadBoughtResInfo.errorString = "开始检查数据格式(若数据过多，等待的时间可能较长)";
			//遍历数据
			var reg = /^1[34578]\d{9}$/;
			var reg1 = /^(([1-9][0-9]{0,13})|0)(.(([1-9][0-9]?)|[0-9]?[1-9]))?$/;
			for(var i = 0; i < $scope.loadBoughts.length;i++) {
				if(!(reg.test($scope.loadBoughts[i].phone) && reg1.test($scope.loadBoughts[i].amount) && $scope.loadBoughts[i].uid != "")) {
					$scope.loadBoughtResInfo.loading = true;
					$scope.loadBoughtResInfo.error = true;
					$scope.loadBoughtResInfo.errorString = "数据格式错误，建议您先一键去重";
					$scope.loadBoughtOperInfo.import = false;
					return ;
				}
			}
			$scope.loadBoughtResInfo.loading = true;
			$scope.loadBoughtResInfo.error = false;
			$scope.loadBoughtResInfo.errorString = "数据格式检查完成，开始进行重复性检查";
			//匹配本地重复
			for(var j = 0; j < $scope.loadBoughts.length -1; j++) {
				for(var k = j + 1; k < $scope.loadBoughts.length; k ++) {
					if($scope.loadBoughts[k].phone == $scope.loadBoughts[j].phone) {
						$scope.loadBoughtResInfo.loading = true;
						$scope.loadBoughtResInfo.error = true;
						$scope.loadBoughtResInfo.errorString = "数据存在重复，建议您先一键去重";
						$scope.loadBoughtOperInfo.import = false;
						return ;
					}
				}
			}
			$scope.loadBoughtResInfo.loading = true;
			$scope.loadBoughtResInfo.error = false;
			$scope.loadBoughtResInfo.errorString = "数据检查完成，开始导入到数据库";
			//验证登录状态
			UserInfoService.cspUserCheckAndLoginByCookie($scope.cookieInfo,function(loginres) {
				if(loginres.result == "succeed") {
					if(loginres.gorisk == true) {
						$state.go('risklevel');
					}
					else {
						//登录成功，to do..导入数据库
						ManageService.cspManageMultipleLoadBoughts(mlbjson,function(mlbres) {
							if(mlbres.result == "succeed") {
								$scope.cspManageMenuChange($scope.cspManageMenuState.boughtLoad,$scope.cspManageMenuState.boughtManage);
							}
							else {
								$scope.loadBoughtResInfo.loading = true;
								$scope.loadBoughtResInfo.error = true;
								$scope.loadBoughtResInfo.errorString = mlbres.reason;
								$scope.loadBoughtOperInfo.import = false;
							}
						})
					}
				}
				else {
					$state.go('home');
				}
			})
		}
	}


	//查询已购产品信息
	$scope.cspManageSelectBoughts = function() {
		console.log($scope.boughtSearch.userinfo);
		if($scope.boughtSearch.seriesid != -1 || $scope.boughtSearch.proid != 0 || $scope.boughtSearch.userinfo != "") {
			//获取分页数据
			console.log("查询");
			$scope.cspManageGetPageBoughts($scope.boughtSearch.type,$scope.boughtSearch.seriesid,$scope.boughtSearch.proid,$scope.boughtSearch.userinfo,1);
		}
	}

	//获取已购产品分页数据
	$scope.cspManageGetPageBoughts = function(type,seriesid,proid,userinfo,page) {
		$scope.boughtCurrentPage = page;
		var gpbjson = {};
		gpbjson.type = type;
		gpbjson.seriesid = seriesid,
		gpbjson.proid = proid;
		gpbjson.userinfo = userinfo,
		gpbjson.page = page;
		gpbjson.pageCount = $scope.pageCount;
		//验证登录状态
		UserInfoService.cspUserCheckAndLoginByCookie($scope.cookieInfo,function(loginres) {
			if(loginres.result == "succeed") {
				if(loginres.gorisk == true) {
					$state.go('risklevel');
				}
				else {
					//登录成功，to do..
					ManageService.cspManageGetPageBoughts(gpbjson,function(gpbres) {
						if(gpbres.result == "succeed") {
							$scope.boughts.splice(0,$scope.boughts.length);
							$scope.boughts = gpbres.data;
							for(var i = 0; i < $scope.boughts.length; i++) {
								$scope.boughts[i].edit = false;
								$scope.boughts[i].editAmount = $scope.boughts[i].amount;
							}
							//分页处理
							$scope.boughtTotalPage = Math.ceil(gpbres.count/$scope.pageCount) ;
							$scope.boughtPages.splice(0,$scope.boughtPages.length);
							var start = 1;
							if( $scope.boughtCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.boughtTotalPage <= $scope.itemCount) {
								start = 1;
							}
							else {
								start = $scope.boughtCurrentPage - Math.ceil($scope.itemCount/2) +1;
								if($scope.boughtTotalPage -  start + 1 < $scope.itemCount ) {
									start = $scope.boughtTotalPage - $scope.itemCount +1;
								}
							}
							for( var r = start ; r < start + $scope.itemCount; r ++ ) {
								if(r > $scope.boughtTotalPage || $scope.boughtTotalPage <= 1) {
									break;
								}
								else {
									var json = {};
									json.num = r;
									if(r === $scope.boughtCurrentPage) {
										json.select = true;
									}
									else {
										json.select = false;
									}
									$scope.boughtPages.push(json);
								}
							}
							if($scope.boughtTotalPage <= 1) {
								$scope.boughtShowPrev = false;
								$scope.boughtShowNext = false;
							}
							else {
								$scope.boughtShowPrev = true;
								$scope.boughtShowNext = true;
							}
						}
						else {
							alert("获取数据失败");
						}
					})
				}
			}
			else {
				$state.go('home');
			}
		})
	}

	//编辑已购产品
	$scope.cspManageEditBought = function(index) {
		$scope.boughts[index].edit = true;
		$scope.boughts[index].editAmount = $scope.boughts[index].amount;
	}

	//删除已购产品
	$scope.cspManageDeleteBought = function(index) {
		var second = 1;
		$scope.boughtDeleteLoading.loading = true;
		$scope.boughtDeleteLoading.error = false;
		$scope.boughtDeleteLoading.errorString = "正在删除..";
		//验证登录状态
		UserInfoService.cspUserCheckAndLoginByCookie($scope.cookieInfo,function(loginres) {
			if(loginres.result == "succeed") {
				if(loginres.gorisk == true) {
					$state.go('risklevel');
				}
				else {
					//登录成功，to do..更新已购产品
					var ubjson = {};
					ubjson.protype = $scope.boughts[index].protype;
					ubjson.proid = $scope.boughts[index].proid;
					ubjson.uid = $scope.boughts[index].uid;
					ManageService.cspManageDeleteBought(ubjson,function(ubres) {
						if(ubres.result == "succeed") {
							$scope.boughtDeleteLoading.error = true;
							$scope.boughtDeleteLoading.errorString = "操作成功";
							$scope.loadingtime = undefined;
							$scope.loadingtime = $interval(function(){
								if(second<=0){
								  $interval.cancel($scope.loadingtime);
								  $scope.loadingtime = undefined;
								  $scope.boughtDeleteLoading.loading = false;
								  $scope.cspManageGetPageBoughts($scope.boughtSearch.type,$scope.boughtSearch.seriesid,$scope.boughtSearch.proid,$scope.boughtSearch.userinfo,1);
								}else{
								  second--;
								}
							},500,100);
						}
						else {
							$scope.boughtDeleteLoading.error = false;
							$scope.boughtDeleteLoading.errorString = ubres.reason;
							$scope.loadingtime = undefined;
							$scope.loadingtime = $interval(function(){
								if(second<=0){
								  $interval.cancel($scope.loadingtime);
								  $scope.loadingtime = undefined;
								  $scope.boughtDeleteLoading.loading = false;
								}else{
								  second--;
								}
							},500,100);
						}
					})
				}
			}
			else {
				$state.go('home');
			}
		})
	}

	//保存编辑
	$scope.cspManageEditBoughtSave = function(index) {
		var second = 1;
		$scope.boughtDeleteLoading.loading = true;
		$scope.boughtDeleteLoading.error = false;
		$scope.boughtDeleteLoading.errorString = "正在保存..";
		var reg  = /^(([1-9][0-9]{0,13})|0)(.(([1-9][0-9]?)|[0-9]?[1-9]))?$/;
		if(!reg.test($scope.boughts[index].editAmount)) {
			$scope.boughtDeleteLoading.error = false;
			$scope.boughtDeleteLoading.errorString = "购买金额必须为17位浮点数或14位以内整数";
			$scope.loadingtime = undefined;
			$scope.loadingtime = $interval(function(){
				if(second<=0){
				  $interval.cancel($scope.loadingtime);
				  $scope.loadingtime = undefined;
				  $scope.boughtDeleteLoading.loading = false;
				}else{
				  second--;
				}
			},500,100);
		}
		else {
			//验证登录状态
			UserInfoService.cspUserCheckAndLoginByCookie($scope.cookieInfo,function(loginres) {
				if(loginres.result == "succeed") {
					if(loginres.gorisk == true) {
						$state.go('risklevel');
					}
					else {
						//登录成功，to do..更新已购产品
						var ubjson = {};
						ubjson.protype = $scope.boughts[index].protype;
						ubjson.proid = $scope.boughts[index].proid;
						ubjson.uid = $scope.boughts[index].uid;
						ubjson.amount = $scope.boughts[index].editAmount;
						ManageService.cspManageUpdateBought(ubjson,function(ubres) {
							if(ubres.result == "succeed") {
								$scope.boughtDeleteLoading.error = true;
								$scope.boughtDeleteLoading.errorString = "操作成功";
								$scope.loadingtime = undefined;
								$scope.loadingtime = $interval(function(){
									if(second<=0){
									  $interval.cancel($scope.loadingtime);
									  $scope.loadingtime = undefined;
									  $scope.boughtDeleteLoading.loading = false;
									  $scope.cspManageGetPageBoughts($scope.boughtSearch.type,$scope.boughtSearch.seriesid,$scope.boughtSearch.proid,$scope.boughtSearch.userinfo,1);
									}else{
									  second--;
									}
								},500,100);
							}
							else {
								$scope.boughtDeleteLoading.error = false;
								$scope.boughtDeleteLoading.errorString = ubres.reason;
								$scope.loadingtime = undefined;
								$scope.loadingtime = $interval(function(){
									if(second<=0){
									  $interval.cancel($scope.loadingtime);
									  $scope.loadingtime = undefined;
									  $scope.boughtDeleteLoading.loading = false;
									}else{
									  second--;
									}
								},500,100);
							}
						})
					}
				}
				else {
					$state.go('home');
				}
			})
		}
	}

	//取消编辑
	$scope.cspManageEditBoughtCancel = function(index) {
		$scope.boughts[index].edit = false;
	}

	$scope.cspManageBoughtLoopToFirst = function() {
		if($scope.boughtCurrentPage != 1) {
			$scope.cspManageGetPageBoughts($scope.boughtSearch.type,$scope.boughtSearch.seriesid,$scope.boughtSearch.proid,$scope.boughtSearch.userinfo,1);
		}
	}

	$scope.cspManageBoughtLoopPrev = function() {
		if($scope.boughtCurrentPage != 1) {
			$scope.cspManageGetPageBoughts($scope.boughtSearch.type,$scope.boughtSearch.seriesid,$scope.boughtSearch.proid,$scope.boughtSearch.userinfo,$scope.boughtCurrentPage - 1);
		}
	}

	$scope.cspManageBoughtLoopToPage = function(page) {
		if($scope.boughtCurrentPage != page.num) {
			$scope.cspManageGetPageBoughts($scope.boughtSearch.type,$scope.boughtSearch.seriesid,$scope.boughtSearch.proid,$scope.boughtSearch.userinfo,page.num);
		}
	}

	$scope.cspManageBoughtLoopNext = function() {
		if($scope.boughtCurrentPage != $scope.boughtTotalPage) {
			$scope.cspManageGetPageBoughts($scope.boughtSearch.type,$scope.boughtSearch.seriesid,$scope.boughtSearch.proid,$scope.boughtSearch.userinfo,$scope.boughtCurrentPage + 1);
		}
	}

	$scope.cspManageBoughtLoopLast = function() {
		if($scope.boughtCurrentPage != $scope.boughtTotalPage) {
			$scope.cspManageGetPageBoughts($scope.boughtSearch.type,$scope.boughtSearch.seriesid,$scope.boughtSearch.proid,$scope.boughtSearch.userinfo,$scope.boughtTotalPage);
		}
	}

})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
cspCtrls.controller('cspOperLoginCtrl',function($scope,$state,$interval,operLoginService) {
	$scope.timePromise = undefined;
	$scope.loginInfo = {};
	$scope.cspOperLoginInit = function() {
		document.getElementById('csp_header_containter').style.display = "none";
		document.getElementById('csp_footer').style.display = "none";
		document.getElementById('homeSpaceDiv_37px').style.display = "none";
		if(!(document.cookie || navigator.cookieEnabled)) {
			alert("浏览器未开启cookie,网站可能无法正常使用")
		}
		else {
			//先判断登录验证session是否具有login_maid 和 login_oid
			operLoginService.cspOperCheckLogin({},function(res) {
				if(res.result == "succeed" && res.loginState == true) {
					$state.go('allocateStock');
				}
				else {
					//读取cookie maid oid
					var exist = false;
					var operCookieInfo;
					var cookieName = "cspOperLoginInfo=";
					var clist = document.cookie.split(";");
					for(var i = 0; i< clist.length; i++) {
						var ca = clist[i].trim();
						if(ca.indexOf(cookieName) == 0) {
							exist = true;
							operCookieInfo = JSON.parse(unescape(ca.substring(cookieName.length,ca.length)));
							break;
						}
					}

					if(exist) {
						$scope.loginInfo.maid = operCookieInfo.maid;
						$scope.loginInfo.oid = operCookieInfo.oid;
						$scope.loginInfo.password = operCookieInfo.password;
						$scope.loginInfo.logining = true;
						$scope.loginInfo.loadState = "正在登录";
						$scope.loginInfo.error = false;
						$scope.loginInfo.save = operCookieInfo.save;
						var json = {};
						json.login_maid = $scope.loginInfo.maid;
						json.login_oid = $scope.loginInfo.oid;
						json.login_pass = $scope.loginInfo.password;
						operLoginService.cspOperLogin(json,function(res) {
							if(res.result == "succeed") {
								$scope.loginInfo.loadState = "登录成功";
								$state.go('allocateStock');
							}
							else {
								var second = 2;
								$scope.loginInfo.error = true;
								$scope.loginInfo.loadState = res.reason;
								$scope.timePromise = undefined;
								$scope.timePromise = $interval(function(){
									if(second<=0){
									  $interval.cancel($scope.timePromise);
									  $scope.timePromise = undefined;
									  $scope.loginInfo.logining = false;
									}else{
									  second--;
									}
								},500,100);
							}
						})
					}
					else {
						//显示登录界面
						$scope.loginInfo.maid = "";
						$scope.loginInfo.oid = "";
						$scope.loginInfo.password = "";
						$scope.loginInfo.logining = false;
						$scope.loginInfo.loadState = "正在登录";
						$scope.loginInfo.error = false;
						$scope.loginInfo.save = false;
					}
				}
			})
		}
	}

	$scope.cspOperLoginClick = function() {
		var second = 1;
		$scope.loginInfo.logining = true;
		$scope.loginInfo.error = false;
		$scope.loginInfo.loadState = "正在登录";
		$scope.loginInfo.error = false;
		if($scope.loginInfo.maid == "") {
			$scope.loginInfo.error = true;
			$scope.loginInfo.loadState = "请输入资产管理人编号";
			$scope.timePromise = undefined;
			$scope.timePromise = $interval(function(){
				if(second<=0){
				  $interval.cancel($scope.timePromise);
				  $scope.timePromise = undefined;
				  $scope.loginInfo.logining = false;
				}else{
				  second--;
				}
			},500,100);
		}
		else if($scope.loginInfo.oid == "") {
			$scope.loginInfo.error = true;
			$scope.loginInfo.loadState = "请输入操作员账号";
			$scope.timePromise = undefined;
			$scope.timePromise = $interval(function(){
				if(second<=0){
				  $interval.cancel($scope.timePromise);
				  $scope.timePromise = undefined;
				  $scope.loginInfo.logining = false;
				}else{
				  second--;
				}
			},500,100);
		}
		else if($scope.loginInfo.password == "") {
			$scope.loginInfo.error = true;
			$scope.loginInfo.loadState = "请输入密码";
			$scope.timePromise = undefined;
			$scope.timePromise = $interval(function(){
				if(second<=0){
				  $interval.cancel($scope.timePromise);
				  $scope.timePromise = undefined;
				  $scope.loginInfo.logining = false;
				}else{
				  second--;
				}
			},500,100);
		}
		else {
			//提交到后台验证账号密码
			var json = {};
			json.login_maid = $scope.loginInfo.maid;
			json.login_oid = $scope.loginInfo.oid;
			json.login_pass = $scope.loginInfo.password;
			operLoginService.cspOperLogin(json,function(res) {
				if(res.result == "succeed") {
					$scope.loginInfo.loadState = "登录成功";
					//判断是否需要保存cookie
					console.log($scope.loginInfo.save);
					if($scope.loginInfo.save == true) {
						var savejson = {};
						savejson.maid = $scope.loginInfo.maid;
						savejson.oid = $scope.loginInfo.oid;
						savejson.password = $scope.loginInfo.password;
						savejson.save = $scope.loginInfo.save;
						var savestr = JSON.stringify(savejson);
						//document.cookie.cspOperLoginInfo = escape(savestr);
						var expires = new Date();
					    expires.setTime(expires.getTime() + 7*24*60*60*1000);
					    var str="cspOperLoginInfo="+escape(savestr)+";expires=" + expires.toGMTString();
					    document.cookie =str;
					}
					else {
						//删除掉保存的cookie
						var cookieName = "cspOperLoginInfo=";
						var expires = new Date();
					    expires.setTime(expires.getTime());
						var clist = document.cookie.split(";");
						for(var i = 0; i< clist.length; i++) {
							var ca = clist[i].trim();
							if(ca.indexOf(cookieName) == 0) {
								document.cookie = ca + ";expires=" + expires.toGMTString();
								break;
							}
						}
					}
					$state.go('allocateStock');
				}
				else {
					$scope.loginInfo.error = true;
					$scope.loginInfo.loadState = res.reason;
					$scope.timePromise = undefined;
					$scope.timePromise = $interval(function(){
						if(second<=0){
						  $interval.cancel($scope.timePromise);
						  $scope.timePromise = undefined;
						  $scope.loginInfo.logining = false;
						}else{
						  second--;
						}
					},500,100);
				}
			})
		}
	}

})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
 cspCtrls.controller('cspOperLoginOutCtrl',function($scope,$state,$interval,operLoginService){
	 $scope.cspOperLoginOutLoad = function() {
		 operLoginService.cspOperLoginOut({},function(res) {
			 //清除cookie
			 if((document.cookie || navigator.cookieEnabled)) {
				 var cookieName = "cspOperLoginInfo=";
				 var expires = new Date();
				 expires.setTime(expires.getTime());
    			 document.cookie = cookieName + ";expires=" + expires.toGMTString();
	 		}
			$state.go('operlogin');
		 })
	 }
 })

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
 cspCtrls.controller('cspOperManageCtrl',function($scope,$state,$interval,operLoginService,operManageService) {
	 //cookie中的账号信息，自动登录使用
	 $scope.cookieinfo = {};
     $scope.menustate = -1;
     $scope.maidList = [];
     $scope.oidList = [];
     $scope.currentMaid = "";
     $scope.currentShowMaid = "";
     $scope.menupath = "";
     //显示页码数
     $scope.pageCount = 10;
 	 $scope.itemCount = 10;
     //要显示的页码 --产品
     $scope.oidPages = [];
     //总页码
     $scope.oidTotalPage = 1;
     $scope.oidCurrentPage = 1;
     //显示首页，上一页，下一页，尾页
     $scope.oidShowPrev = false;
     $scope.oidShowNext = false;
     $scope.newOperMaidList = [];
     $scope.newOperStatList = [];
     $scope.newOper = {};
     $scope.editOper = {};
     $scope.editOid = "";
     $scope.timePromise = undefined;
     $scope.showModal = false;
     $scope.operModalPath = "";
     $scope.modalState = 0;
     $scope.resetOperInfo = {};
     $scope.authorizeOperInfo = {};
     $scope.authorizeCaidList = [];
     $scope.authorizeTridList = [];

	 $scope.cspOperManageInit = function() {
		document.getElementById('csp_header_containter').style.display = "none";
 		document.getElementById('csp_footer').style.display = "none";
 		document.getElementById('homeSpaceDiv_37px').style.display = "none";
		//读取cookie
		if(!(document.cookie || navigator.cookieEnabled)) {
			alert("浏览器未开启cookie,网站可能无法正常使用");
			$state.go('operlogin');
		}
		else {
			$scope.cookieinfo.exist = false;
			var cookieName = "cspOperLoginInfo=";
			var clist = document.cookie.split(";");
			for(var i = 0; i< clist.length; i++) {
				var ca = clist[i].trim();
				if(ca.indexOf(cookieName) == 0) {
					$scope.cookieinfo.cookieExist = true;
				    var accountInfo = JSON.parse(unescape(ca.substring(cookieName.length,ca.length)));
                    $scope.cookieinfo.login_maid = accountInfo.maid;
    				$scope.cookieinfo.login_oid = accountInfo.oid;
    				$scope.cookieinfo.login_pass = accountInfo.password;
                    break;
				}
			}
			$scope.newOperStatList.push({"stat":"0","des":"立即启用"});
            $scope.newOperStatList.push({"stat":"0","des":"暂不启用"});
            console.log("开始自动登录");
			//检查登录状态及cookie自动登录
			operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(res) {
				if(res.result == "succeed") {
					//自动登录成功 to do...
                    $scope.menustate = 0;
                    $scope.menupath = "../tpls/operManage/opermanage.html";
				}
				else {
					$state.go('operlogin');
				}
			})
		}
	 }

     //页面跳转加载初始化
     $scope.cspOperManageLoadReady = function() {
         switch ($scope.menustate) {
             case 0:
                 operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(loginres) {
                    if(loginres.result == "succeed") {
                        //自动登录成功 to do...获取资产管理人列表
                         $scope.oidList = [];
                        operManageService.cspOperManageGetAllMaid({},function(maidres) {
                            if(maidres.result == "succeed") {
                                $scope.maidList = [];
                                $scope.maidList = maidres.data;
                            }
                            else {
                                alert("获取数据失败，请刷新页面重试");
                            }
                        })
                    }
                    else {
                        $state.go('operlogin');
                    }
                });
                $("#csp_oper_manage_maid_dropdown").dropdown({
                    onChange:function(value, text, $selectedItem){
                        $scope.currentMaid = value;
                    },
                    on:'hover'
                })
                 break;
             case 1:
                $(window).resize(function(e){
                    //获取屏幕的宽度
                    if(document.documentElement.clientWidth > 800) {
                        //调整高度
                        var height = document.getElementById("csp_oper_manage_basic_info_div").offsetHeight;
                        document.getElementById("csp_oper_manage_help_info_div").style.height = height + "px";
                    }
                    else {
                        document.getElementById("csp_oper_manage_help_info_div").style.height = "auto";
                    }
                });
                if(document.documentElement.clientWidth > 800) {
                    //调整高度
                    var height = document.getElementById("csp_oper_manage_basic_info_div").offsetHeight;
                    document.getElementById("csp_oper_manage_help_info_div").style.height = height + "px";
                }
                else {
                    document.getElementById("csp_oper_manage_help_info_div").style.height = "auto";
                }
                //获取资产管理人列表
                operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(loginres) {
                   if(loginres.result == "succeed") {
                       //自动登录成功 to do...获取资产管理人列表
                       operManageService.cspOperManageGetAllMaid({},function(maidres) {
                           if(maidres.result == "succeed") {
                               $scope.newOperMaidList = [];
                               $scope.newOperMaidList = maidres.data;
                           }
                           else {
                               alert("获取数据失败，请刷新页面重试");
                           }
                       })
                   }
                   else {
                       $state.go('operlogin');
                   }
               });
               $("#csp_oper_manage_newoper_maid_dropdown").dropdown({
                   onChange:function(value, text, $selectedItem){
                       $scope.newOper.maid = value;
                   },
                   on:'click'
               })
               $("#csp_oper_manage_newoper_stat_dropdown").dropdown({
                   onChange:function(value, text, $selectedItem){
                       $scope.newOper.stat = value;
                   },
                   on:'click'
               })
               $scope.newOper = {};
               $scope.newOper.maid = "";
               $scope.newOper.oid = "";
               $scope.newOper.oidShowTip = false;
               $scope.newOper.oidError = false;
               $scope.newOper.oidErrorString = "";
               $scope.newOper.oname = "";
               $scope.newOper.opass = "";
               $scope.newOper.opassShowTip = false;
               $scope.newOper.opassError = false;
               $scope.newOper.opassErrorString = "";
               $scope.newOper.opassrep = "";
               $scope.newOper.opassrepShowTip = false;
               $scope.newOper.opassrepError = false;
               $scope.newOper.opassrepErrorString = "";
               $scope.newOper.phone = "";
               $scope.newOper.phoneShowTip = false;
               $scope.newOper.phoneError = false;
               $scope.newOper.phoneErrorString = "";
               $scope.newOper.email = "";
               $scope.newOper.emailShowTip = false;
               $scope.newOper.emailError = false;
               $scope.newOper.emailErrorString = "";
               $scope.newOper.idcard = "";
               $scope.newOper.idcardShowTip = false;
               $scope.newOper.idcardError = false;
               $scope.newOper.idcardErrorString = "";
               $scope.newOper.stat = "";
               $scope.newOper.loading = false;
               $scope.newOper.error = false;
               $scope.newOper.errorString = "创建中，请稍候..";
                break;
             case 2:
                 $scope.editOper.maid = "";
                 $scope.editOper.maname = "";
                 $scope.editOper.oid = "";
                 $scope.editOper.oname = "";
                 $scope.editOper.phone = "";
                 $scope.editOper.phoneShowTip = false;
                 $scope.editOper.phoneError = false;
                 $scope.editOper.phoneErrorString = "";
                 $scope.editOper.email = "";
                 $scope.editOper.emailShowTip = false;
                 $scope.editOper.emailError = false;
                 $scope.editOper.emailErrorString = "";
                 $scope.editOper.idcard = "";
                 $scope.editOper.idcardShowTip = false;
                 $scope.editOper.idcardError = false;
                 $scope.editOper.idcardErrorString = "";
                 $scope.editOper.stat = "";
                 $scope.editOper.loading = false;
                 $scope.editOper.error = false;
                 $scope.editOper.errorString = "正在保存..";
                 //检查登录状态及cookie自动登录
                 operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(res) {
                     if(res.result == "succeed") {
                         //自动登录成功 to do...获取个人信息
                         var editjson = {};
                         editjson.oid = $scope.editOid;
                         operManageService.cspOperManageGetOperByOid(editjson,function(editres) {
                             if(editres.result == "succeed" && editres.exist == true) {
                                 $scope.editOper.maid = editres.oper.maid;
                                 $scope.editOper.maname = editres.oper.maname;
                                 $scope.editOper.oid = editres.oper.oid;
                                 $scope.editOper.oname = editres.oper.oname;
                                 $scope.editOper.phone = editres.oper.phone;
                                 $scope.editOper.email = editres.oper.email;
                                 $scope.editOper.idcard = editres.oper.idcard;
                                 $scope.editOper.stat = editres.oper.stat;
                             }
                             else {
                                 alert("获取数据失败，请刷新页面");
                             }
                         })
                     }
                     else {
                         $state.go('operlogin');
                     }
                 })
                 break;
             default:
                 break;
         }
     }

     //点击查询
     $scope.cspOperManageSelectOper = function() {
         if($scope.currentMaid != "") {
             $scope.currentShowMaid = $scope.currentMaid;
             var json = {};
             json.maid = $scope.currentShowMaid;
             $scope.oidCurrentPage = 1;
 			 json.page = $scope.oidCurrentPage;
 			 json.pageCount = $scope.pageCount;
             operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(res) {
 				if(res.result == "succeed") {
 					//自动登录成功 to do...获取操作员
                    operManageService.cspOperManageGetOidByMaid(json,function(oidres) {
                        if(oidres.result == "succeed") {
                            $scope.oidList = [];
                            $scope.oidList = oidres.data;
                            //设计分页
        					$scope.oidTotalPage = Math.ceil(oidres.count/$scope.pageCount) ;
        					$scope.oidPages = [];
        					var start = 1;
        					if( $scope.oidCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.oidTotalPage <= $scope.itemCount) {
        						start = 1;
        					}
        					else {
        						start = $scope.oidCurrentPage - Math.ceil($scope.itemCount/2) +1;
        						if($scope.oidTotalPage -  start + 1 < $scope.itemCount ) {
        							start = $scope.oidTotalPage - $scope.itemCount +1;
        						}
        					}
        					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
        						if(r > $scope.oidTotalPage || $scope.oidTotalPage <= 1) {
        							break;
        						}
        						else {
        							var jsontmp = {};
        							jsontmp.num = r;
        							if(r === $scope.oidCurrentPage) {
        								jsontmp.select = true;
        							}
        							else {
        								jsontmp.select = false;
        							}
        							$scope.oidPages.push(jsontmp);
        						}
        					}
        					if($scope.oidTotalPage <= 1) {
        						$scope.oidShowPrev = false;
        						$scope.oidShowNext = false;
        					}
        					else {
        						$scope.oidShowPrev = true;
        						$scope.oidShowNext = true;
        					}
                        }
                        else {
                            alert("获取数据失败,请刷新页面重试")
                        }
                    })
 				}
 				else {
 					$state.go('operlogin');
 				}
 			})
         }
     }

     //点击回到首页
     $scope.cspOperManageOidLoopToFirst = function() {
         if($scope.oidCurrentPage === 1) {}
         else {
             window.scrollTo(0,0);
             if($scope.currentShowMaid != "") {
                 var json = {};
                 json.maid = $scope.currentShowMaid;
                 $scope.oidCurrentPage = 1;
     			 json.page = $scope.oidCurrentPage;
     			 json.pageCount = $scope.pageCount;
                 operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(res) {
     				if(res.result == "succeed") {
     					//自动登录成功 to do...获取操作员
                        operManageService.cspOperManageGetOidByMaid(json,function(oidres) {
                            if(oidres.result == "succeed") {
                                $scope.oidList = [];
                                $scope.oidList = oidres.data;
                                //设计分页
            					$scope.oidTotalPage = Math.ceil(oidres.count/$scope.pageCount) ;
            					$scope.oidPages = [];
            					var start = 1;
            					if( $scope.oidCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.oidTotalPage <= $scope.itemCount) {
            						start = 1;
            					}
            					else {
            						start = $scope.oidCurrentPage - Math.ceil($scope.itemCount/2) +1;
            						if($scope.oidTotalPage -  start + 1 < $scope.itemCount ) {
            							start = $scope.oidTotalPage - $scope.itemCount +1;
            						}
            					}
            					for( var r = start ; r < start + $scope.itemCount; r ++ ) {
            						if(r > $scope.oidTotalPage || $scope.oidTotalPage <= 1) {
            							break;
            						}
            						else {
            							var jsontmp = {};
            							jsontmp.num = r;
            							if(r === $scope.oidCurrentPage) {
            								jsontmp.select = true;
            							}
            							else {
            								jsontmp.select = false;
            							}
            							$scope.oidPages.push(jsontmp);
            						}
            					}
            					if($scope.oidTotalPage <= 1) {
            						$scope.oidShowPrev = false;
            						$scope.oidShowNext = false;
            					}
            					else {
            						$scope.oidShowPrev = true;
            						$scope.oidShowNext = true;
            					}
                            }
                            else {
                                alert("获取数据失败,请刷新页面重试")
                            }
                        })
     				}
     				else {
     					$state.go('operlogin');
     				}
     			})
             }
         }
     }

     //点击上一页
     $scope.cspOperManageOidLoopPrev = function() {
         if($scope.oidCurrentPage === 1) {}
 		else {
 			window.scrollTo(0,0);
            if($scope.currentShowMaid != "") {
                var json = {};
                json.maid = $scope.currentShowMaid;
                $scope.oidCurrentPage = $scope.oidCurrentPage - 1;
                json.page = $scope.oidCurrentPage;
                json.pageCount = $scope.pageCount;
                operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(res) {
                   if(res.result == "succeed") {
                       //自动登录成功 to do...获取操作员
                       operManageService.cspOperManageGetOidByMaid(json,function(oidres) {
                           if(oidres.result == "succeed") {
                               $scope.oidList = [];
                               $scope.oidList = oidres.data;
                               //设计分页
                               $scope.oidTotalPage = Math.ceil(oidres.count/$scope.pageCount) ;
                               $scope.oidPages = [];
                               var start = 1;
                               if( $scope.oidCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.oidTotalPage <= $scope.itemCount) {
                                   start = 1;
                               }
                               else {
                                   start = $scope.oidCurrentPage - Math.ceil($scope.itemCount/2) +1;
                                   if($scope.oidTotalPage -  start + 1 < $scope.itemCount ) {
                                       start = $scope.oidTotalPage - $scope.itemCount +1;
                                   }
                               }
                               for( var r = start ; r < start + $scope.itemCount; r ++ ) {
                                   if(r > $scope.oidTotalPage || $scope.oidTotalPage <= 1) {
                                       break;
                                   }
                                   else {
                                       var jsontmp = {};
                                       jsontmp.num = r;
                                       if(r === $scope.oidCurrentPage) {
                                           jsontmp.select = true;
                                       }
                                       else {
                                           jsontmp.select = false;
                                       }
                                       $scope.oidPages.push(jsontmp);
                                   }
                               }
                               if($scope.oidTotalPage <= 1) {
                                   $scope.oidShowPrev = false;
                                   $scope.oidShowNext = false;
                               }
                               else {
                                   $scope.oidShowPrev = true;
                                   $scope.oidShowNext = true;
                               }
                           }
                           else {
                               alert("获取数据失败,请刷新页面重试")
                           }
                       })
                   }
                   else {
                       $state.go('operlogin');
                   }
               })
            }
        }
     }

     //跳转到指定页面
     $scope.cspOperManageOidLoopToPage = function(page) {
         if(page.select === true) {}
 		 else {
 			window.scrollTo(0,0);
            if($scope.currentShowMaid != "") {
                var json = {};
                json.maid = $scope.currentShowMaid;
                $scope.oidCurrentPage = page.num;
                json.page = $scope.oidCurrentPage;
                json.pageCount = $scope.pageCount;
                operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(res) {
                   if(res.result == "succeed") {
                       //自动登录成功 to do...获取操作员
                       operManageService.cspOperManageGetOidByMaid(json,function(oidres) {
                           if(oidres.result == "succeed") {
                               $scope.oidList = [];
                               $scope.oidList = oidres.data;
                               //设计分页
                               $scope.oidTotalPage = Math.ceil(oidres.count/$scope.pageCount) ;
                               $scope.oidPages = [];
                               var start = 1;
                               if( $scope.oidCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.oidTotalPage <= $scope.itemCount) {
                                   start = 1;
                               }
                               else {
                                   start = $scope.oidCurrentPage - Math.ceil($scope.itemCount/2) +1;
                                   if($scope.oidTotalPage -  start + 1 < $scope.itemCount ) {
                                       start = $scope.oidTotalPage - $scope.itemCount +1;
                                   }
                               }
                               for( var r = start ; r < start + $scope.itemCount; r ++ ) {
                                   if(r > $scope.oidTotalPage || $scope.oidTotalPage <= 1) {
                                       break;
                                   }
                                   else {
                                       var jsontmp = {};
                                       jsontmp.num = r;
                                       if(r === $scope.oidCurrentPage) {
                                           jsontmp.select = true;
                                       }
                                       else {
                                           jsontmp.select = false;
                                       }
                                       $scope.oidPages.push(jsontmp);
                                   }
                               }
                               if($scope.oidTotalPage <= 1) {
                                   $scope.oidShowPrev = false;
                                   $scope.oidShowNext = false;
                               }
                               else {
                                   $scope.oidShowPrev = true;
                                   $scope.oidShowNext = true;
                               }
                           }
                           else {
                               alert("获取数据失败,请刷新页面重试")
                           }
                       })
                   }
                   else {
                       $state.go('operlogin');
                   }
               })
            }
         }
     }

     //点击下一页
     $scope.cspOperManageOidLoopNext = function() {
         if($scope.oidCurrentPage === $scope.oidTotalPage) {}
 		 else {
 			window.scrollTo(0,0);
            if($scope.currentShowMaid != "") {
                var json = {};
                json.maid = $scope.currentShowMaid;
                $scope.oidCurrentPage = $scope.oidCurrentPage + 1;
                json.page = $scope.oidCurrentPage;
                json.pageCount = $scope.pageCount;
                operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(res) {
                   if(res.result == "succeed") {
                       //自动登录成功 to do...获取操作员
                       operManageService.cspOperManageGetOidByMaid(json,function(oidres) {
                           if(oidres.result == "succeed") {
                               $scope.oidList = [];
                               $scope.oidList = oidres.data;
                               //设计分页
                               $scope.oidTotalPage = Math.ceil(oidres.count/$scope.pageCount) ;
                               $scope.oidPages = [];
                               var start = 1;
                               if( $scope.oidCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.oidTotalPage <= $scope.itemCount) {
                                   start = 1;
                               }
                               else {
                                   start = $scope.oidCurrentPage - Math.ceil($scope.itemCount/2) +1;
                                   if($scope.oidTotalPage -  start + 1 < $scope.itemCount ) {
                                       start = $scope.oidTotalPage - $scope.itemCount +1;
                                   }
                               }
                               for( var r = start ; r < start + $scope.itemCount; r ++ ) {
                                   if(r > $scope.oidTotalPage || $scope.oidTotalPage <= 1) {
                                       break;
                                   }
                                   else {
                                       var jsontmp = {};
                                       jsontmp.num = r;
                                       if(r === $scope.oidCurrentPage) {
                                           jsontmp.select = true;
                                       }
                                       else {
                                           jsontmp.select = false;
                                       }
                                       $scope.oidPages.push(jsontmp);
                                   }
                               }
                               if($scope.oidTotalPage <= 1) {
                                   $scope.oidShowPrev = false;
                                   $scope.oidShowNext = false;
                               }
                               else {
                                   $scope.oidShowPrev = true;
                                   $scope.oidShowNext = true;
                               }
                           }
                           else {
                               alert("获取数据失败,请刷新页面重试")
                           }
                       })
                   }
                   else {
                       $state.go('operlogin');
                   }
               })
            }
         }
     }

     //点击跳到尾页
     $scope.cspOperManageOidLoopLast = function() {
         if($scope.oidCurrentPage === $scope.oidTotalPage) {}
 		 else {
 			window.scrollTo(0,0);
            if($scope.currentShowMaid != "") {
                var json = {};
                json.maid = $scope.currentShowMaid;
                $scope.oidCurrentPage = $scope.oidTotalPage;
                json.page = $scope.oidCurrentPage;
                json.pageCount = $scope.pageCount;
                operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(res) {
                   if(res.result == "succeed") {
                       //自动登录成功 to do...获取操作员
                       operManageService.cspOperManageGetOidByMaid(json,function(oidres) {
                           if(oidres.result == "succeed") {
                               $scope.oidList = [];
                               $scope.oidList = oidres.data;
                               //设计分页
                               $scope.oidTotalPage = Math.ceil(oidres.count/$scope.pageCount) ;
                               $scope.oidPages = [];
                               var start = 1;
                               if( $scope.oidCurrentPage <= Math.ceil($scope.itemCount/2) || $scope.oidTotalPage <= $scope.itemCount) {
                                   start = 1;
                               }
                               else {
                                   start = $scope.oidCurrentPage - Math.ceil($scope.itemCount/2) +1;
                                   if($scope.oidTotalPage -  start + 1 < $scope.itemCount ) {
                                       start = $scope.oidTotalPage - $scope.itemCount +1;
                                   }
                               }
                               for( var r = start ; r < start + $scope.itemCount; r ++ ) {
                                   if(r > $scope.oidTotalPage || $scope.oidTotalPage <= 1) {
                                       break;
                                   }
                                   else {
                                       var jsontmp = {};
                                       jsontmp.num = r;
                                       if(r === $scope.oidCurrentPage) {
                                           jsontmp.select = true;
                                       }
                                       else {
                                           jsontmp.select = false;
                                       }
                                       $scope.oidPages.push(jsontmp);
                                   }
                               }
                               if($scope.oidTotalPage <= 1) {
                                   $scope.oidShowPrev = false;
                                   $scope.oidShowNext = false;
                               }
                               else {
                                   $scope.oidShowPrev = true;
                                   $scope.oidShowNext = true;
                               }
                           }
                           else {
                               alert("获取数据失败,请刷新页面重试")
                           }
                       })
                   }
                   else {
                       $state.go('operlogin');
                   }
               })
            }
         }
     }

     //点击刷新
     $scope.cspOperManageRefresh = function() {
         //要显示的页码 --产品
         $scope.oidPages = [];
         //总页码
         $scope.oidTotalPage = 1;
         $scope.oidCurrentPage = 1;
         //显示首页，上一页，下一页，尾页
         $scope.oidShowPrev = false;
         $scope.oidShowNext = false;
         $scope.maidList = [];
         $scope.oidList = [];
         $scope.currentMaid = "";
         $scope.currentShowMaid = "";
         $("#csp_oper_manage_maid_dropdown").dropdown('restore defaults');
         operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(loginres) {
            if(loginres.result == "succeed") {
                //自动登录成功 to do...获取资产管理人列表
                operManageService.cspOperManageGetAllMaid({},function(maidres) {
                    if(maidres.result == "succeed") {
                        $scope.maidList = [];
                        $scope.maidList = maidres.data;
                    }
                    else {
                        alert("获取数据失败，请刷新页面重试");
                    }
                })
            }
            else {
                $state.go('operlogin');
            }
        });
     }

     //点击新建
     $scope.cspOperManageNewOid = function() {
         $scope.menustate = 1;
         $scope.menupath = "../tpls/operManage/opermanagenewoper.html";
     }

     //返回操作员管理
     $scope.cspOperManageBack = function() {
         $scope.menustate = 0;
         $scope.menupath = "../tpls/operManage/opermanage.html";
     }

     //操作员账号输入完毕
     $scope.cspOperManageNewOperOidBlur = function() {
         if($scope.newOper.oid != "") {
             var reg = /^[0-9]{1,7}$/;
             if(!reg.test($scope.newOper.oid)) {
                 $scope.newOper.oidShowTip = true;
                 $scope.newOper.oidError = true;
                 $scope.newOper.oidErrorString = "操作员账号格式错误";
             }
         }
         else {
             $scope.newOper.oidShowTip = false;
             $scope.newOper.oidError = false;
             $scope.newOper.oidErrorString = "";
         }
     }
     //操作员密码输入完毕
     $scope.cspOperManageNewOperOpassBlur = function() {
         if($scope.newOper.opass != "") {
             var reg = /^[0-9A-Za-z!@#\$%,._-]{6,16}$/;
             if(!reg.test($scope.newOper.opass)) {
                 $scope.newOper.opassShowTip = true;
                 $scope.newOper.opassError = true;
                 $scope.newOper.opassErrorString = "操作员密码格式错误";
             }
             else {
                 $scope.newOper.opassShowTip = true;
                 $scope.newOper.opassError = false;
                 $scope.newOper.opassErrorString = "";
             }
         }
         else {
             $scope.newOper.opassShowTip = false;
             $scope.newOper.opassError = false;
             $scope.newOper.opassErrorString = "";
         }
     }
     //确认密码输入完毕
     $scope.cspOperManageNewOperOpassrepBlur = function() {
         if($scope.newOper.opassrep != "") {
             if($scope.newOper.opassrep != $scope.newOper.opass) {
                 $scope.newOper.opassrepShowTip = true;
                 $scope.newOper.opassrepError = true;
                 $scope.newOper.opassrepErrorString = "两次密码不一致";
             }
             else {
                 $scope.newOper.opassrepShowTip = true;
                 $scope.newOper.opassrepError = false;
                 $scope.newOper.opassrepErrorString = "";
             }
         }
         else {
             $scope.newOper.opassrepShowTip = false;
             $scope.newOper.opassrepError = false;
             $scope.newOper.opassrepErrorString = "";
         }
     }

     //手机号码输入完毕
     $scope.cspOperManageNewOperPhoneBlur = function() {
         if($scope.newOper.phone != "") {
             var reg = /^1[34578]\d{9}$/;
             if(!reg.test($scope.newOper.phone)) {
                 $scope.newOper.phoneShowTip = true;
                 $scope.newOper.phoneError = true;
                 $scope.newOper.phoneErrorString = "手机号码格式错误";
             }
         }
         else {
             $scope.newOper.phoneShowTip = false;
             $scope.newOper.phoneError = false;
             $scope.newOper.phoneErrorString = "";
         }
     }

     //邮件地址输入完毕
     $scope.cspOperManageNewOperEmailBlur = function() {
         if($scope.newOper.email != "") {
             var reg = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\.[a-zA-Z0-9_-]{2,3}){1,2})$/;
             if(!reg.test($scope.newOper.email)) {
                 $scope.newOper.emailShowTip = true;
                 $scope.newOper.emailError = true;
                 $scope.newOper.emailErrorString = "邮件地址格式错误";
             }
         }
         else {
             $scope.newOper.emailShowTip = false;
             $scope.newOper.emailError = false;
             $scope.newOper.emailErrorString = "";
         }
     }

     //身份证号码输入完毕
     $scope.cspOperManageNewOperIdcardBlur = function() {
         if($scope.newOper.idcard != "") {
             if(!operLoginService.cspOperCheckIdcard($scope.newOper.idcard)) {
                 $scope.newOper.idcardShowTip = true;
                 $scope.newOper.idcardError = true;
                 $scope.newOper.idcardErrorString = "身份证号码格式错误";
             }
         }
         else {
             $scope.newOper.idcardShowTip = false;
             $scope.newOper.idcardError = false;
             $scope.newOper.idcardErrorString = "";
         }
     }

     //确定创建操作员
     $scope.cspOperManageNewOperSave = function() {
         //启动动画
         var second = 1;
         $scope.newOper.loading = true;
         $scope.newOper.error = false;
         $scope.newOper.errorString = "创建中，请稍候..";
         var error = 0;
         //判断资产管理人
         if($scope.newOper.maid == "") {
             $scope.newOper.error = true;
             $scope.newOper.errorString = "请选择资产管理人";
             $scope.timePromise = undefined;
 			 $scope.timePromise = $interval(function(){
 				if(second<=0){
 				  $interval.cancel($scope.timePromise);
 				  $scope.timePromise = undefined;
 				  $scope.newOper.loading = false;
 				}else{
 				  second--;
 				}
 			 },500,100);
             return ;
         }
         //判断操作员账号
         if(!(/^[0-9]{1,7}$/).test($scope.newOper.oid)) {
             $scope.newOper.error = true;
             $scope.newOper.errorString = "操作员账号不符合规则";
             $scope.timePromise = undefined;
 			 $scope.timePromise = $interval(function(){
 				if(second<=0){
 				  $interval.cancel($scope.timePromise);
 				  $scope.timePromise = undefined;
 				  $scope.newOper.loading = false;
 				}else{
 				  second--;
 				}
 			 },500,100);
             return ;
         }
         //判断操作员姓名
         if($scope.newOper.oname == "") {
             $scope.newOper.error = true;
             $scope.newOper.errorString = "请填写操作员姓名";
             $scope.timePromise = undefined;
 			 $scope.timePromise = $interval(function(){
 				if(second<=0){
 				  $interval.cancel($scope.timePromise);
 				  $scope.timePromise = undefined;
 				  $scope.newOper.loading = false;
 				}else{
 				  second--;
 				}
 			 },500,100);
             return ;
         }
         //判断密码
         if(!(/^[0-9A-Za-z!@#\$%,._-]{6,16}$/).test($scope.newOper.opass)) {
             $scope.newOper.error = true;
             $scope.newOper.errorString = "操作员密码不符合规则";
             $scope.timePromise = undefined;
 			 $scope.timePromise = $interval(function(){
 				if(second<=0){
 				  $interval.cancel($scope.timePromise);
 				  $scope.timePromise = undefined;
 				  $scope.newOper.loading = false;
 				}else{
 				  second--;
 				}
 			 },500,100);
             return ;
         }
         //判断密码重复
         if($scope.newOper.opass != $scope.newOper.opassrep) {
             $scope.newOper.error = true;
             $scope.newOper.errorString = "两次密码不一致";
             $scope.timePromise = undefined;
 			 $scope.timePromise = $interval(function(){
 				if(second<=0){
 				  $interval.cancel($scope.timePromise);
 				  $scope.timePromise = undefined;
 				  $scope.newOper.loading = false;
 				}else{
 				  second--;
 				}
 			 },500,100);
             return ;
         }
         //判断手机号码
         if($scope.newOper.phone != "") {
             if(!(/^1[34578]\d{9}$/).test($scope.newOper.phone)) {
                 $scope.newOper.error = true;
                 $scope.newOper.errorString = "手机号码不符合规则";
                 $scope.timePromise = undefined;
     			 $scope.timePromise = $interval(function(){
     				if(second<=0){
     				  $interval.cancel($scope.timePromise);
     				  $scope.timePromise = undefined;
     				  $scope.newOper.loading = false;
     				}else{
     				  second--;
     				}
     			 },500,100);
                 return ;
             }
         }
         //判断邮箱地址
         if($scope.newOper.email != "") {
             if(!(/^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\.[a-zA-Z0-9_-]{2,3}){1,2})$/).test($scope.newOper.email)) {
                 $scope.newOper.error = true;
                 $scope.newOper.errorString = "邮箱地址不符合规则";
                 $scope.timePromise = undefined;
     			 $scope.timePromise = $interval(function(){
     				if(second<=0){
     				  $interval.cancel($scope.timePromise);
     				  $scope.timePromise = undefined;
     				  $scope.newOper.loading = false;
     				}else{
     				  second--;
     				}
     			 },500,100);
                 return ;
             }
         }
         //判断身份证号码
         if($scope.newOper.idcard != "") {
             if(!operLoginService.cspOperCheckIdcard($scope.newOper.idcard)) {
                 $scope.newOper.error = true;
                 $scope.newOper.errorString = "身份证号码错误";
                 $scope.timePromise = undefined;
     			 $scope.timePromise = $interval(function(){
     				if(second<=0){
     				  $interval.cancel($scope.timePromise);
     				  $scope.timePromise = undefined;
     				  $scope.newOper.loading = false;
     				}else{
     				  second--;
     				}
     			 },500,100);
                 return ;
             }
         }
         //判断启用状态
         if($scope.newOper.stat == "") {
             $scope.newOper.error = true;
             $scope.newOper.errorString = "请设置启用状态";
             $scope.timePromise = undefined;
             $scope.timePromise = $interval(function(){
                if(second<=0){
                  $interval.cancel($scope.timePromise);
                  $scope.timePromise = undefined;
                  $scope.newOper.loading = false;
                }else{
                  second--;
                }
             },500,100);
             return ;
         }
         //检查登录状态及cookie自动登录
         operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(res) {
             if(res.result == "succeed") {
                 //自动登录成功 to do...写入数据库
                 var addjson = {};
                 addjson.maid = $scope.newOper.maid;
                 addjson.oid = $scope.newOper.oid;
                 addjson.oname = $scope.newOper.oname;
                 addjson.opass = $scope.newOper.opass;
                 addjson.phone = $scope.newOper.phone;
                 addjson.email = $scope.newOper.email;
                 addjson.idcard = $scope.newOper.idcard;
                 addjson.stat = $scope.newOper.stat;
                 operManageService.cspOperManageAddOper(addjson,function(addres) {
                     if(addres.result == "succeed") {
                         $scope.newOper.error = true;
                         $scope.newOper.errorString = "创建成功";
                         $scope.timePromise = undefined;
                         $scope.timePromise = $interval(function(){
                            if(second<=0){
                              $interval.cancel($scope.timePromise);
                              $scope.timePromise = undefined;
                              $scope.newOper.loading = false;
                            }else{
                              second--;
                            }
                         },500,100);
                         $scope.menustate = 0;
                         $scope.menupath = "../tpls/operManage/opermanage.html";
                     }
                     else {
                         $scope.newOper.error = true;
                         $scope.newOper.errorString = addres.reason;
                         $scope.timePromise = undefined;
                         $scope.timePromise = $interval(function(){
                            if(second<=0){
                              $interval.cancel($scope.timePromise);
                              $scope.timePromise = undefined;
                              $scope.newOper.loading = false;
                            }else{
                              second--;
                            }
                         },500,100);
                     }
                 })
             }
             else {
                 $state.go('operlogin');
             }
         })

     }

     //点击编辑操作员
     $scope.cspOperManageEditOper = function(index) {
         $scope.editOid = $scope.oidList[index].oid;
         $scope.menustate = 2;
         $scope.menupath = "../tpls/operManage/opermanageeditoper.html";
     }

     //编辑，手机号码输入完毕
     $scope.cspOperManageEditOperPhoneBlur = function() {
         if($scope.editOper.phone != "") {
             var reg = /^1[34578]\d{9}$/;
             if(!reg.test($scope.editOper.phone)) {
                 $scope.editOper.phoneShowTip = true;
                 $scope.editOper.phoneError = true;
                 $scope.editOper.phoneErrorString = "手机号码格式错误";
             }
             else {
                 $scope.editOper.phoneShowTip = true;
                 $scope.editOper.phoneError = false;
                 $scope.editOper.phoneErrorString = "";
             }
         }
         else {
             $scope.editOper.phoneShowTip = false;
             $scope.editOper.phoneError = false;
             $scope.editOper.phoneErrorString = "";
         }
     }

     //编辑，邮箱地址输入完毕
     $scope.cspOperManageEditOperEmailBlur = function() {
         if($scope.editOper.email != "") {
             var reg = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\.[a-zA-Z0-9_-]{2,3}){1,2})$/;
             if(!reg.test($scope.editOper.email)) {
                 $scope.editOper.emailShowTip = true;
                 $scope.editOper.emailError = true;
                 $scope.editOper.emailErrorString = "邮件地址格式错误";
             }
             else {
                 $scope.editOper.emailShowTip = true;
                 $scope.editOper.emailError = false;
                 $scope.editOper.emailErrorString = "";
             }
         }
         else {
             $scope.editOper.emailShowTip = false;
             $scope.editOper.emailError = false;
             $scope.editOper.emailErrorString = "";
         }
     }

     //编辑，身份证号码输入完毕
     $scope.cspOperManageEditOperIdcardBlur = function() {
         if($scope.editOper.idcard != "") {
             if(!operLoginService.cspOperCheckIdcard($scope.editOper.idcard)) {
                 $scope.editOper.idcardShowTip = true;
                 $scope.editOper.idcardError = true;
                 $scope.editOper.idcardErrorString = "身份证号码格式错误";
             }
             else {
                 $scope.editOper.idcardShowTip = true;
                 $scope.editOper.idcardError = false;
                 $scope.editOper.idcardErrorString = "";
             }
         }
         else {
             $scope.editOper.idcardShowTip = false;
             $scope.editOper.idcardError = false;
             $scope.editOper.idcardErrorString = "";
         }
     }

     //保存编辑
     $scope.cspOperManageEditOperSave = function() {
         var second = 1;
         $scope.editOper.loading = true;
         $scope.editOper.error = false;
         $scope.editOper.errorString = "正在保存修改..";
         //判断操作员姓名
         if($scope.editOper.oname == "") {
             $scope.editOper.error = true;
             $scope.editOper.errorString = "请填写操作员姓名";
             $scope.timePromise = undefined;
 			 $scope.timePromise = $interval(function(){
 				if(second<=0){
 				  $interval.cancel($scope.timePromise);
 				  $scope.timePromise = undefined;
 				  $scope.editOper.loading = false;
 				}else{
 				  second--;
 				}
 			 },500,100);
             return ;
         }
         //判断手机号码
         if($scope.editOper.phone != "") {
             if(!(/^1[34578]\d{9}$/).test($scope.editOper.phone)) {
                 $scope.editOper.error = true;
                 $scope.editOper.errorString = "手机号码不符合规则";
                 $scope.timePromise = undefined;
     			 $scope.timePromise = $interval(function(){
     				if(second<=0){
     				  $interval.cancel($scope.timePromise);
     				  $scope.timePromise = undefined;
     				  $scope.editOper.loading = false;
     				}else{
     				  second--;
     				}
     			 },500,100);
                 return ;
             }
         }
         //判断邮箱地址
         if($scope.editOper.email != "") {
             if(!(/^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\.[a-zA-Z0-9_-]{2,3}){1,2})$/).test($scope.editOper.email)) {
                 $scope.editOper.error = true;
                 $scope.editOper.errorString = "邮箱地址不符合规则";
                 $scope.timePromise = undefined;
     			 $scope.timePromise = $interval(function(){
     				if(second<=0){
     				  $interval.cancel($scope.timePromise);
     				  $scope.timePromise = undefined;
     				  $scope.editOper.loading = false;
     				}else{
     				  second--;
     				}
     			 },500,100);
                 return ;
             }
         }
         //判断身份证号码
         if($scope.editOper.idcard != "") {
             if(!operLoginService.cspOperCheckIdcard($scope.editOper.idcard)) {
                 $scope.editOper.error = true;
                 $scope.editOper.errorString = "身份证号码错误";
                 $scope.timePromise = undefined;
     			 $scope.timePromise = $interval(function(){
     				if(second<=0){
     				  $interval.cancel($scope.timePromise);
     				  $scope.timePromise = undefined;
     				  $scope.editOper.loading = false;
     				}else{
     				  second--;
     				}
     			 },500,100);
                 return ;
             }
         }
         //检查登录状态及cookie自动登录
         operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(res) {
             if(res.result == "succeed") {
                 //自动登录成功 to do...保存更新到数据库
                 var editjson = {};
                 editjson.oid = $scope.editOper.oid;
                 editjson.oname = $scope.editOper.oname;
                 editjson.phone = $scope.editOper.phone;
                 editjson.email = $scope.editOper.email;
                 editjson.idcard = $scope.editOper.idcard;
                 operManageService.cspOperManageUpdateOper(editjson,function(editres) {
                     if(editres.result == "succeed") {
                         $scope.editOper.error = true;
                         $scope.editOper.errorString = "修改成功";
                         $scope.timePromise = undefined;
                         $scope.timePromise = $interval(function(){
                            if(second<=0){
                              $interval.cancel($scope.timePromise);
                              $scope.timePromise = undefined;
                              $scope.editOper.loading = false;
                            }else{
                              second--;
                            }
                         },500,100);
                         $scope.menustate = 0;
                         $scope.menupath = "../tpls/operManage/opermanage.html";
                     }
                     else {
                         $scope.editOper.error = true;
                         $scope.editOper.errorString = addres.reason;
                         $scope.timePromise = undefined;
                         $scope.timePromise = $interval(function(){
                            if(second<=0){
                              $interval.cancel($scope.timePromise);
                              $scope.timePromise = undefined;
                              $scope.editOper.loading = false;
                            }else{
                              second--;
                            }
                         },500,100);
                     }
                 })
             }
             else {
                 $state.go('operlogin');
             }
         })
     }

     //冻结操作员
     $scope.cspOperManageChangeOperStat = function(index) {
         //检查登录状态及cookie自动登录
         operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(res) {
             if(res.result == "succeed") {
                 //自动登录成功 to do...执行冻结操作
                 var fzjson = {};
                 fzjson.oid = $scope.oidList[index].oid;
                 var newStat;
                 if($scope.oidList[index].stat == "0") {
                     newStat = "1";
                 }
                 else {
                     newStat = "0";
                 }
                 fzjson.stat = newStat;
                 operManageService.cspOperManageChangeOperStat(fzjson,function(fzres) {
                     if(fzres.result == "succeed") {
                         $scope.oidList[index].stat = newStat;
                     }
                     else {
                         alert("操作失败，请刷新界面重试");
                     }
                 })
             }
             else {
                 $state.go('operlogin');
             }
         })
     }

     //弹框载入完成
     $scope.cspOperManageModalPathLoad = function() {
         switch ($scope.modalState) {
             case 1:

                 break;
             case 2:
                //绑定下拉框
                $("#csp_oper_manage_authorize_caid_dropdown").dropdown({
                    onChange:function(value, text, $selectedItem){
                        if(value != "") {
                            $scope.authorizeOperInfo.caid = value;
                            $scope.authorizeOperInfo.trid = "";
                            $scope.authorizeTridList.splice(0,$scope.authorizeTridList.length);
                            $("#csp_oper_manage_authorize_trid_dropdown").dropdown('clear');
                            //检查登录状态及cookie自动登录
                			operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(res) {
                				if(res.result == "succeed") {
                					//自动登录成功 to do...
                                    var gtjson = {};
                                    gtjson.caid = $scope.authorizeOperInfo.caid;
                                    operManageService.cspOperManageGetTridByCaid(gtjson,function(gtres) {
                                        if(gtres.result == "succeed") {
                                            $scope.authorizeTridList = gtres.data;
                                        }
                                        else {
                                            alert("获取数据失败,请刷新页面重试")
                                        }
                                    })
                				}
                				else {
                					$state.go('operlogin');
                				}
                			})
                        }
                    },
                    on:'click'
                });
                $("#csp_oper_manage_authorize_trid_dropdown").dropdown({
                    onChange:function(value, text, $selectedItem){
                        if(value != "") {
                            $scope.authorizeOperInfo.trid = value;
                        }
                    },
                    on:'click'
                });
                $("#csp_oper_manage_authorize_stat_dropdown").dropdown({
                    onChange:function(value, text, $selectedItem){
                        $scope.authorizeOperInfo.stat = value;
                    },
                    on:'click'
                });
                break;
             default:

         }
     }

     //显示重置密码
     $scope.cspOperManageResetPass = function(index) {
         $scope.showModal = true;
         $scope.operModalPath = "../tpls/operManage/opermanageresetpass.html";
         $scope.modalState = 1;
         $scope.resetOperInfo.loading = false;
         $scope.resetOperInfo.error = false;
         $scope.resetOperInfo.errorString = "";
         $scope.resetOperInfo.oid = $scope.oidList[index].oid;
         $scope.resetOperInfo.opass = "";
         $scope.resetOperInfo.opassrep = "";
     }

     //隐藏重置密码
     $scope.cspOperManageHideReset = function() {
         $scope.showModal = false;
     }

     //确定重置密码
     $scope.cspOperManageResetPassSure = function() {
         //启动动画
         var second = 1;
         $scope.resetOperInfo.loading = true;
         $scope.resetOperInfo.error = false;
         $scope.resetOperInfo.errorString = "正在提交..";
         //验证密码
         if(!(/^[0-9A-Za-z!@#\$%,._-]{6,16}$/).test($scope.resetOperInfo.opass)) {
             $scope.resetOperInfo.error = true;
             $scope.resetOperInfo.errorString = "新密码不符合规则";
             $scope.timePromise = undefined;
 			 $scope.timePromise = $interval(function(){
 				if(second<=0){
 				  $interval.cancel($scope.timePromise);
 				  $scope.timePromise = undefined;
 				  $scope.resetOperInfo.loading = false;
 				}else{
 				  second--;
 				}
 			 },500,100);
             return ;
         }
         //验证确认密码
         if($scope.resetOperInfo.opass != $scope.resetOperInfo.opassrep) {
             $scope.resetOperInfo.error = true;
             $scope.resetOperInfo.errorString = "两次密码不一致";
             $scope.timePromise = undefined;
 			 $scope.timePromise = $interval(function(){
 				if(second<=0){
 				  $interval.cancel($scope.timePromise);
 				  $scope.timePromise = undefined;
 				  $scope.resetOperInfo.loading = false;
 				}else{
 				  second--;
 				}
 			 },500,100);
             return ;
         }
         //检查登录状态及cookie自动登录
         operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(res) {
             if(res.result == "succeed") {
                 //自动登录成功 to do...提交到后台处理
                 var rspjson = {};
                 rspjson.oid = $scope.resetOperInfo.oid;
                 rspjson.opass = $scope.resetOperInfo.opass;
                 operManageService.cspOperManageResetPass(rspjson,function(rspres) {
                     if(rspres.result == "succeed") {
                         $scope.resetOperInfo.error = true;
                         $scope.resetOperInfo.errorString = "操作成功";
                         $scope.timePromise = undefined;
             			 $scope.timePromise = $interval(function(){
             				if(second<=0){
             				  $interval.cancel($scope.timePromise);
             				  $scope.timePromise = undefined;
             				  $scope.resetOperInfo.loading = false;
                              $scope.showModal = false;
             				}else{
             				  second--;
             				}
             			 },500,100);
                     }
                     else {
                         $scope.resetOperInfo.error = true;
                         $scope.resetOperInfo.errorString = rspres.reason;
                         $scope.timePromise = undefined;
             			 $scope.timePromise = $interval(function(){
             				if(second<=0){
             				  $interval.cancel($scope.timePromise);
             				  $scope.timePromise = undefined;
             				  $scope.resetOperInfo.loading = false;
             				}else{
             				  second--;
             				}
             			 },500,100);
                     }
                 })
             }
             else {
                 $state.go('operlogin');
             }
         })
     }

     //操作员授权
     $scope.cspOperManageAuthorizeOper = function(index) {
         $scope.showModal = true;
         $scope.modalState = 2;
         $scope.operModalPath = "../tpls/operManage/opermanageauthorize.html";
         $scope.authorizeOperInfo.maid = $scope.oidList[index].maid;
         $scope.authorizeOperInfo.oid = $scope.oidList[index].oid;
         $scope.authorizeOperInfo.caid = "";
         $scope.authorizeOperInfo.trid = "";
         $scope.authorizeOperInfo.bp = "";
         $scope.authorizeOperInfo.bp_heaver = "";
         $scope.authorizeOperInfo.stat = 0;

         $scope.authorizeOperInfo.loading = false;
         $scope.authorizeOperInfo.error = false;
         $scope.authorizeOperInfo.errorString = "";
         //获取资产管理人下的资产单元
         var gcjson = {};
         gcjson.maid = $scope.authorizeOperInfo.maid;
         $scope.authorizeCaidList.splice(0,$scope.authorizeCaidList.length);
         $scope.authorizeTridList.splice(0,$scope.authorizeTridList.length);
         //检查登录状态及cookie自动登录
         operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(res) {
             if(res.result == "succeed") {
                 //自动登录成功 to do...
                 operManageService.cspOperManageGetCaidByMaid(gcjson,function(gcres) {
                     if(gcres.result == "succeed") {
                         $scope.authorizeCaidList = gcres.data;
                     }
                     else {
                         alert("获取数据失败,请刷新页面重试")
                     }
                 })
             }
             else {
                 $state.go('operlogin');
             }
         })
     }

     //保存授权
     $scope.cspOperManageAuthorizeSure = function() {
         var second = 1;
         //启用动画
         var reg = /^[0-9]{1,14}$/;
         $scope.authorizeOperInfo.loading = true;
         $scope.authorizeOperInfo.error = false;
         $scope.authorizeOperInfo.errorString = "正在提交..";
         if($scope.authorizeOperInfo.trid == "") {
             $scope.authorizeOperInfo.error = true;
             $scope.authorizeOperInfo.errorString = "请选择交易单元";
             $scope.timePromise = undefined;
 			 $scope.timePromise = $interval(function(){
 				if(second<=0){
 				  $interval.cancel($scope.timePromise);
 				  $scope.timePromise = undefined;
 				  $scope.authorizeOperInfo.loading = false;
 				}else{
 				  second--;
 				}
 			 },500,100);
         }
         else if(!reg.test($scope.authorizeOperInfo.bp)) {
             $scope.authorizeOperInfo.error = true;
             $scope.authorizeOperInfo.errorString = "请输入交易员bp";
             $scope.timePromise = undefined;
 			 $scope.timePromise = $interval(function(){
 				if(second<=0){
 				  $interval.cancel($scope.timePromise);
 				  $scope.timePromise = undefined;
 				  $scope.authorizeOperInfo.loading = false;
 				}else{
 				  second--;
 				}
 			 },500,100);
         }
         else if(!reg.test($scope.authorizeOperInfo.bp_heaver)) {
             $scope.authorizeOperInfo.error = true;
             $scope.authorizeOperInfo.errorString = "请输入交易员杠杆";
             $scope.timePromise = undefined;
 			 $scope.timePromise = $interval(function(){
 				if(second<=0){
 				  $interval.cancel($scope.timePromise);
 				  $scope.timePromise = undefined;
 				  $scope.authorizeOperInfo.loading = false;
 				}else{
 				  second--;
 				}
 			 },500,100);
         }
         else {
             //检查登录状态及cookie自动登录
             operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(res) {
                 if(res.result == "succeed") {
                     //自动登录成功 to do...//写数据库
                     var atjson = {};
                     atjson.traderid = $scope.authorizeOperInfo.trid + "." + $scope.authorizeOperInfo.oid.split(".")[1];
                     atjson.trid = $scope.authorizeOperInfo.trid;
                     atjson.oid = $scope.authorizeOperInfo.oid;
                     atjson.bp = $scope.authorizeOperInfo.bp;
                     atjson.bp_heaver = $scope.authorizeOperInfo.bp_heaver;
                     atjson.stat = $scope.authorizeOperInfo.stat;
                     operManageService.cspOperManageAddTrader(atjson,function(atres) {
                         if(atres.result == "succeed") {
                             $scope.authorizeOperInfo.error = true;
                             $scope.authorizeOperInfo.errorString = "操作成功";
                             $scope.timePromise = undefined;
                 			 $scope.timePromise = $interval(function(){
                 				if(second<=0){
                 				  $interval.cancel($scope.timePromise);
                 				  $scope.timePromise = undefined;
                 				  $scope.authorizeOperInfo.loading = false;
                                  $scope.showModal = false;
                                  $scope.modalState = 0;
                                  $scope.operModalPath = "";
                 				}else{
                 				  second--;
                 				}
                 			 },500,100);
                         }
                         else {
                             $scope.authorizeOperInfo.error = true;
                             $scope.authorizeOperInfo.errorString = atres.reason;
                             $scope.timePromise = undefined;
                 			 $scope.timePromise = $interval(function(){
                 				if(second<=0){
                 				  $interval.cancel($scope.timePromise);
                 				  $scope.timePromise = undefined;
                 				  $scope.authorizeOperInfo.loading = false;
                 				}else{
                 				  second--;
                 				}
                 			 },500,100);
                         }
                     })
                 }
                 else {
                     $state.go('operlogin');
                 }
             })
         }
     }

     //取消操作员授权
     $scope.cspOperManageAuthorizeCancel = function() {
         $scope.showModal = false;
         $scope.operModalPath = "";
         $scope.modalState = 0;
     }
 })

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
 cspCtrls.controller('cspOperManageMenuCtrl',function($scope,$state,$interval,operLoginService) {
	 $scope.showMenu = false;
	 $scope.cspOperManageMenuInit = function() {
		 $scope.showMenu = false;
	 }

	 $scope.cspOperMenuShowMenu = function() {
		 $scope.showMenu = true;
		 document.getElementById("cspOperManageMenuHtml").style.width = "100%";
		 document.getElementById("cspOperManageMenuHtml").style.height = "100%";
	 }

	 $scope.cspOperMenuHideMenu = function() {
		 $scope.showMenu = false;
		 document.getElementById("cspOperManageMenuHtml").style.width = "50px";
		 document.getElementById("cspOperManageMenuHtml").style.height = "50px";
	 }
 })

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */

cspCtrls.controller('orderCtrl',
function($scope,$state,UserInfoService,productService,usercenterService,orderService) {
  $scope.product={};
  $scope.userInfo={};
  $scope.orderAmount='';

  $scope.$on("userBuyProduct",
    function (event, msg) {
        console.log("orderCtrl", msg);
        document.getElementById('errorDiv').style.display='none';
        document.getElementById('successDiv').style.display='none';
        document.getElementById("submitBtn").disabled='';
        document.getElementById("amountInput").disabled = '';
        document.getElementById("telInput").disabled ='';

        $scope.orderAmount='';
        productService.getProductDetails('',function(res){
          if(res===false){
            console.log('获取当前产品失败');
            return;
          }
          $scope.product=res;
          console.log('getProductDetails',res);

        });

        usercenterService.getUserInfo('',function(res){
          console.log('getUserInfo',res);
          if(res===false){
            return;
          }

          $scope.userInfo=res;
        });

    });

  $scope.submitOrder=function(){

    document.getElementById('errorDiv').style.display='none';
    document.getElementById('successDiv').style.display='none';

    console.log(typeof $scope.orderAmount,$scope.orderAmount,Number($scope.orderAmount) );
    if(isNaN($scope.orderAmount)){
      document.getElementById('errorDiv').style.display='';
      document.getElementById('errorInfo').innerHTML='请输入正确的数字';
      return;
    }

    if ($scope.orderAmount <100) {
      document.getElementById('errorDiv').style.display='';
      document.getElementById('errorInfo').innerHTML='您订购的金额必须大于100万元';
      return;
    }
    if(!(/^1[34578]\d{9}$/.test($scope.userInfo.tel))){
      console.log('请输入正确的手机号码');
      document.getElementById('errorDiv').style.display='';
      document.getElementById('errorInfo').innerText='请输入正确的手机号码';
      return;
    }

    var order={};
    order.orderAmount=$scope.orderAmount;
    order.tel=$scope.userInfo.tel;

    orderService.submitOrder(order,function(res){
      console.log(res);
      if(res.result===false){
        return;
      }else {
        document.getElementById('errorDiv').style.display='none';
        document.getElementById('successDiv').style.display='';
        document.getElementById("submitBtn").disabled='disabled';
        document.getElementById("amountInput").disabled = 'disabled';
        document.getElementById("telInput").disabled = 'disabled';

        // document.getElementById('errorInfo').innerHTML='您订购的金额必须大于0元';
        //jQuery('#orderModal').modal('hide');
      }
    })


  }
  $scope.hideModal=function(){
    jQuery('#orderModal').modal('hide');
    jQuery('#allPro_orderModal').modal('hide');
  }

  jQuery(document).ready(function(){



  });


});

cspCtrls.controller('ownedProductsCtrl',
function($scope,$state,$http,orderService,usercenterService,UserInfoService){

  //程序不会修改的配置
  $scope.maxPageSize=3;//一次显示的记录数量
  $scope.pageRows=10;//一页显示的记录数量

  $scope.productAmount=0;//总的记录数量
  $scope.allPage=0;//总页数
  $scope.currentpage=1;//当前页数
  $scope.pageArr=[];

  $scope.filterCondition={ 'pageRows'    :$scope.pageRows,
                           'page'        :1
                           };

  jQuery(document).ready(function(){
    console.log('进入了我的订单');
    $scope.getOwnedProductAmount();
  });

  $scope.getOwnedProducts=function(){

    orderService.getOwnedProducts( $scope.filterCondition,function(res){
      if(res.result===false){
        return;
      }
      $scope.ownedProducts=res;
      console.log('getOwnedProducts',res);
    });
  }

  $scope.getOwnedProductAmount=function(){

    orderService.getOwnedProductAmount('option',function(res){
      console.log('getOwnedProductAmount',res);

      if(res.result==false){
        return;
      }
      $scope.productAmount=res.productAmount;//总的记录数量

      if ($scope.productAmount>0) {
        document.getElementById('pageList').style.display='';

        $scope.filterCondition.page=1;
        $scope.currentpage=1;//当前页数
        $scope.allPage=Math.ceil($scope.productAmount/$scope.pageRows);

        $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);
        $scope.getOwnedProducts();

      }else {
        document.getElementById('pageList').style.display='none';

      }
    });
  }


    $scope.gotoPage=function(pageObj){
      $scope.currentpage=pageObj;
      console.log('$scope.currentpage',$scope.currentpage);
      $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);


      $scope.filterCondition.page=pageObj;
      $scope.getOwnedProducts($scope.filterCondition);
    }

    $scope.goFirstPage=function(){

        $scope.currentpage=1;
        $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);

        $scope.filterCondition.page=1;
        $scope.getOwnedProducts($scope.filterCondition);

    }
    $scope.goLastPage=function(){
      $scope.currentpage=$scope.allPage;
      $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);

      $scope.filterCondition.page=$scope.allPage;
      $scope.getOwnedProducts($scope.filterCondition);

    }

    $scope.goPreviousPage=function(){
      if($scope.currentpage>1)
        $scope.currentpage-=1;
        else {
          $scope.currentpage=1;
        }
        $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);

        $scope.filterCondition.page=$scope.currentpage;
        $scope.getOwnedProducts($scope.filterCondition);
    }

    $scope.goNextPage=function(){
      if($scope.currentpage<$scope.allPage)
        $scope.currentpage+=1;
        else {
          $scope.currentpage=$scope.allPage;
        }
        $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);

        $scope.filterCondition.page=$scope.currentpage;
        $scope.getOwnedProducts($scope.filterCondition);
    }




     $scope.getProductsByPage=function(page){
       $scope.filterCondition.page=page;
       $scope.getOwnedProducts($scope.filterCondition);
     }

 });

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */

cspCtrls.controller('ProductCtrl',
function($scope,$state,$http,productService,UserInfoService,usercenterService,$ocLazyLoad) {

	var minNet=0,minTotalNet=0,maxNet=0,maxTotalNet=0;
	$ocLazyLoad.load('lib/echarts.js').then(function(){
		$scope.categoryChartsInit();
		$scope.getNetProduct();
	});

	$scope.myproduct=$scope;

	$scope.uid='';

	$scope.chartsData={};

	$scope.chartsData.date=[];
	$scope.chartsData.categoryNetData=[];
	$scope.chartsData.categoryTotalNetData=[];

	$scope.productDetails={};
	$scope.netProductDatas={};
	$scope.productSpots={};
	$scope.productNotices={};//保存产品公告

	$scope.NetAssetValue={};
	$scope.infoLoadPath='';//产品详情加载的页面

	$scope.showData=[];



	jQuery(document).ready(function(){


		document.getElementById('csp_header_comment_label').className = "csp_header_label";
		document.getElementById('csp_header_home_label').className = "csp_header_label";
		document.getElementById('csp_header_product_label').className = "csp_header_label";
		document.getElementById('csp_header_product0_label').className = "csp_header_label ";
		document.getElementById('csp_header_containter').style.display = "block";
		document.getElementById('csp_footer').style.display = "block";

		$('html,body').scrollTop(0); //不带动画




    $scope.getProductDetails();



  });

	$scope.getProductDetails = function(){

		productService.getProductDetails('',function(res){
				if(typeof(res.result)=='undefined'||res.result===false ){
					console.log("查询产品信息失败");
					return;
				}
				console.log('getProductDetails',res);
				//格式化日期
				if (typeof(res.netdate)=='undefined'||
					res.netdate==''||
					res.netdate=='0000-00-00'||
					res.netdate=='1970-01-01') {
						res.netdate='';
				}else {
					res.netdate=new Date(res.netdate).Format("yyyy-MM-dd");
					$scope.getNetAssetValue(res.id,res.netdate);//获取单位净值
				}
				res.releasetime=new Date( res.releasetime).Format("yyyy-MM-dd");

				res.subscribe_rate=(res.subscribe_rate*100).toFixed(2)+'%';
				res.manage_rate=(res.manage_rate*100).toFixed(2)+'%';
				res.redeem_rate=(res.redeem_rate*100).toFixed(2)+'%';
				res.merit_pay=(res.merit_pay*100).toFixed(2)+'%';

				$scope.getTactics(res.tsid);//获取策略表
				$scope.productDetails=res;

				document.getElementById('product_image').src=res.piclink;
				// document.getElementById('product_header').innerHTML=res.caption;
				// document.getElementById('product_releaseTime').innerText=res.releasetime;
				// document.getElementById('productStatus').innerText=res.prostatus;

				// document.getElementById('product_Content').innerHTML=res.contents;
				// $("#product_Content").find("img").css({"max-width":"100%"});


		});

	}

	$scope.getFutures=function(){
		productService.getFutures('',function(res){
			if(res==false){
        return;
      }
			for (var i = 0; i < res.length; i++) {
				res[i].date=new Date(res[i].date).Format("yyyy-MM-dd");
				res[i].marketValue=(res[i].last*res[i].volume).toFixed(2);
				res[i].volamt=res[i].volamt.toFixed(2);
				res[i].last=res[i].last.toFixed(2);
				res[i].deposit=res[i].deposit.toFixed(2);


				if(res[i].dealtype==0){
					res[i].dealtype='买入';
				}else{
					res[i].dealtype='卖出';
				}
			}
			console.log('getFutures',res);
			$scope.futures=res;
		});
	}


	$scope.setHeaderName=function(userInfo){
    usercenterService.getUserInfo(userInfo,function(res){
      if(res==false){
        return;
      }
			if(res.conlevel==7||res.conlevel==2||res.conlevel==1)//只有是砖石会员才会显示策略产品
			{
				document.getElementById('product0Btn').style.display='';
				document.getElementById('product0BigBtn').style.display='';
				document.getElementById('diamondMember').style.display='';

				$scope.getProductSpot();
				$scope.getFutures();
			}
      document.getElementById('header_username').innerHTML=res.tel;
    });
  }

	//获取策略表
	$scope.getTactics = function(tsids){
		var params={};
		params.tacticsIDs=tsids;
		productService.getTactics(params,function(res){
			if(res.result===false){
				console.log('获取产品策略失败');
			}else {
				console.log('获取产品策略成功',res);
				var Tactics='';
				for (var i = 0; i < res.length; i++) {
					Tactics=Tactics+res[i].tsname+',';
				}
				if (Tactics.length>0) {
					Tactics=Tactics.substring(0,Tactics.length-1);
				}
				$scope.productDetails.productTactics=Tactics;
			}
		});
  }

	//获取产品风险信息
	$scope.getRiskLevelInfo = function(risklevelid){
		var params={};
		params.risklevelid=risklevelid;
		productService.getRiskLevelInfo(params,function(res){
			if(res.result===false){
				console.log('获取产品风险信息失败');
			}else {
				console.log('获取产品风险信息成功',res);

				$scope.productDetails.risklevelInfo=res;
			}
		});
	}

	//获取产品系列信息
	$scope.getSeriesInfo= function(seriesid){
		var params={};
		params.seriesid=seriesid;
		productService.getSeriesInfo(params,function(res){
			if(res.result===false){
				console.log('获取产品系列失败');
			}else {
				console.log('获取产品系列成功',res);

				$scope.productDetails.seriesInfo=res;
			}
		});
	}

	//获取单位净值
	$scope.getNetAssetValue=function(productID,netdate){
		if (typeof productID=='undefined'|| productID==''||
				 typeof netdate=='undefined') {
					 return;
		}
		var queryNetAssetValu={};
		queryNetAssetValu.productID=productID;
		queryNetAssetValu.netdate=netdate;
		productService.getNetAssetValue(queryNetAssetValu,function(res){
			if(res.result===false){
				console.log('getNetAssetValue failed');
				return;
			}
			res.date=new Date(res.date).Format("yyyy-MM-dd");
			console.log('getNetAssetValue',res);
			if(!isNaN(res.net))
				res.net=res.net.toFixed(3);
			$scope.NetAssetValue=res;
		})

	}

  $scope.setContent = function()
  {
    $scope.getProductDetails();

  }

	$scope.categoryChartsInit = function(){
		$scope.myCategoryEcharts = echarts.init(document.getElementById('myCategoryEcharts'));

			var option = {
			baseOption:{
				title: {
		        text: '净值走势图'
		    },
		    tooltip: {
		        trigger: 'axis'
		    },
		    legend: {
		        data:['净值','累计净值']
		    },
				grid: {
						 left: 80,
						// top: 80,
						 right: 80
						// bottom: 0
				},
		    xAxis: {
		        type: 'category',
		        boundaryGap: false,
						data: []
					},
		    yAxis: {
		        type: 'value'


		    },
				dataZoom: [{
					type: 'inside',
					xAxisIndex: 0 ,
					start: 0,
					end: 100
				}, {
						start: 0,
						end: 10,
						handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',
						handleSize: '60%',
						handleStyle: {
								color: '#fff',
								shadowBlur: 3,
								shadowColor: 'rgba(0, 0, 0, 0.6)',
								shadowOffsetX: 2,
								shadowOffsetY: 2
						},
						left: 80,
						right: 80
				}],
		    series: [
		        {
		            name:'净值',
		            type:'line',
		            data:[]
		        },
		        {
		            name:'累计净值',
		            type:'line',
		            data:[]
		        }
		    ]
			},
			media: [
				{
						option: {
							grid: {
								left: 80,
							 right: 80
							}
						}
				},
				{
					query: {
						maxWidth: 750
					 },
					option: {
						grid: {
								left: 40,
								right:40
						},
						yAxis: {


				    }

					}
				}


      ]

		};

		$scope.myCategoryEcharts.setOption(option);
		window.onresize = $scope.myCategoryEcharts.resize;

		$scope.myCategoryEcharts.on('datazoom', function (params) {
			console.log(params,typeof params.start);

			var start=0,end=0;
			if (typeof( params.start) != 'undefined') {

				start=Math.floor(params.start/100*$scope.showData.length);
				end=Math.ceil(params.end/100*$scope.showData.length);
			}
			else if (typeof( params.batch) != 'undefined'){
				start=Math.floor(params.batch[0].start*$scope.showData.length/100);
				end=Math.ceil(params.batch[0].end*$scope.showData.length/100);
			}
			++end;
			end=end>$scope.showData.length?$scope.showData.length:end;

			var arrData=$scope.showData.slice(start,end);
			var max=getMaximum(arrData);

			if (typeof(max)=='undefined'||max<=0) {
				var option={
					max:1,
					interval:0.2
				};
			}else{
				var option=getMaxAndInterval(max);
			}

			$scope.myCategoryEcharts.setOption({
				yAxis: {
					max:option.max,
					interval:option.interval
				}
			});

		});



		$scope.myCategoryEcharts.on('legendselectchanged', function (params) {
				var totalData=[];
				$scope.showData=[];

				for (x in params.selected){
					console.log('x in params.selected',x);
					switch (x) {
						case '净值':
						if(params.selected[x]){
							for (var i = 0; i < $scope.chartsData.categoryNetData.length; i++) {
								$scope.showData.push($scope.chartsData.categoryNetData[i]);
							}

								totalData.push(minNet);
								totalData.push(maxNet);
							}
							break;

						case '累计净值':
						if(params.selected[x]){
							for (var i = 0; i < $scope.chartsData.categoryTotalNetData.length; i++) {
								$scope.showData.push($scope.chartsData.categoryTotalNetData[i]);
							}
								totalData.push(minTotalNet);
								totalData.push(maxTotalNet);
							}
							break;
					}
				}


				// var min=getMinimum(totalData);
				var max=getMaximum($scope.showData);
				console.log('$scope.showData',$scope.showData);

				if (typeof(max)=='undefined'||max<=0) {
					var option={
						max:1,
						interval:0.2
					};
				}else{
					var option=getMaxAndInterval(max);
				}



				console.log('max',max,minNet,maxNet,minTotalNet,maxTotalNet,totalData);
				$scope.myCategoryEcharts.setOption({
					yAxis: {
						max:option.max,
						interval:option.interval
					}
				});


		});

		// 图例开关的行为只会触发 legendselectchanged 事件
		// $scope.myCategoryEcharts.on('legendselectchanged', function (params) {
		// 		var totalData=[];
    //
		// 		for (x in params.selected){
		// 			console.log('x in params.selected',x);
		// 			switch (x) {
		// 				case '净值':
		// 				if(params.selected[x]){
		// 						totalData.push(minNet);
		// 						totalData.push(maxNet);
		// 					}
		// 					break;
    //
		// 				case '累计净值':
		// 				if(params.selected[x]){
		// 						totalData.push(minTotalNet);
		// 						totalData.push(maxTotalNet);
		// 					}
		// 					break;
		// 			}
		// 		}
		// 		var min=getMinimum(totalData);
		// 		var max=getMaximum(totalData);
		// 		if (typeof(min)=='undefined'||typeof(max)=='undefined') {
		// 			return;
		// 		}
    //
		// 		console.log('min',min,'max',max,minNet,maxNet,minTotalNet,maxTotalNet);
    //
		// 		var minY=min-(max-min)/2;
		// 		minY=minY.toFixed(4);
		// 		var maxY=max+(max-min)/2;
		// 		maxY=maxY.toFixed(4);
		// 		$scope.myCategoryEcharts.setOption({
		// 			yAxis: {
		// 					max:maxY,
		// 					min:minY
		// 			}
		// 		});
    //
    //
		// });
	}

		$scope.getProductSpot = function(){
			var product={};
			product.protype=1;

			productService.getProductSpot(product,function(res){
				if(res===false){
					console.log('产品界面获取productID失败');
				}else{
					for (var i = 0; i < res.length; i++) {
						res[i].marketValue=res[i].volamt*res[i].volume;
						res[i].marketValue=res[i].marketValue.toFixed(2);
						res[i].volamt=	res[i].volamt.toFixed(2);
						res[i].last=	res[i].last.toFixed(2);
					}
					$scope.productSpots=res;
					console.log($scope.productSpots);
				}
			});

		}

	$scope.getNetProduct = function(){
		productService.getProductID('',function(res){
			if(res===false){
				console.log('产品界面获取productID失败');
			}else{
				var product={};
				product.productID=res.productID;
				productService.getNetProduct(product,function(res){
					if(res===false){
						console.log('查询netProduct失败');
					}else {
						$scope.netProductDatas=res;
						if ($scope.netProductDatas.length>0) {
							$scope.accReturnRate=(($scope.netProductDatas[0].totalnet-1)*100).toFixed(2)+'%';
						}
						else {
							$scope.accReturnRate='--';
							return;
						}
						console.log('getNetProduct',res);

						if(res.length>0){
							minNet=res[0].net;
							minTotalNet=res[0].totalnet;
							maxNet=res[0].net;
							maxTotalNet=res[0].totalnet;
						}
						else {
							return;
						}

						for(var i=$scope.netProductDatas.length-1;i>=0;--i){
							if(minNet>res[i].net)
								minNet=res[i].net;
							if(maxNet<res[i].net)
								maxNet=res[i].net;
							if(minTotalNet>res[i].totalnet)
								minTotalNet=res[i].totalnet;
							if(maxTotalNet<res[i].totalnet)
								maxTotalNet=res[i].totalnet;

							$scope.netProductDatas[i].netStr=$scope.netProductDatas[i].net.toFixed(3);
							$scope.netProductDatas[i].totalnetStr=$scope.netProductDatas[i].totalnet.toFixed(3);
							$scope.netProductDatas[i].accrateStr=(($scope.netProductDatas[i].totalnet-1)*100).toFixed(2)+'%';
							$scope.netProductDatas[i].yearrateStr=($scope.netProductDatas[i].yearrate*100).toFixed(2)+'%';


							var datetime= new Date($scope.netProductDatas[i].datetime.replace(/-/g,"/"));
							var xcoordinate=[datetime.getFullYear(), datetime.getMonth()+1, datetime.getDate()].join('/');

							$scope.chartsData.date.push(xcoordinate);
							$scope.chartsData.categoryNetData.push($scope.netProductDatas[i].net);
							$scope.chartsData.categoryTotalNetData.push($scope.netProductDatas[i].totalnet);
							$scope.showData.push($scope.netProductDatas[i].net);
							$scope.showData.push($scope.netProductDatas[i].totalnet);

						}

						var min=minNet>minTotalNet?minTotalNet:minNet;
						var max=maxNet>maxTotalNet?maxNet:maxTotalNet;

						// var minY=min-(max-min)/2;
						// minY=minY.toFixed(2);
						// var maxY=max+(max-min)/2;
						// maxY=maxY.toFixed(2);

						//数据显示在不顶格的位置
						if (typeof(max)=='undefined'||max<=0) {
							var option={
								max:1,
								interval:0.2
							};
						}else{
							var option=getMaxAndInterval(max);
						}
						console.log(option);

						$scope.myCategoryEcharts.setOption({
										xAxis: {
																data: $scope.chartsData.date
										},
										yAxis: {
														max:option.max,
														//splitNumber:splitNumber,
														interval:option.interval
														//min:0
										},
										series: [{
															name: '净值',
															data: $scope.chartsData.categoryNetData
														},{
															name: '累计净值',
															data: $scope.chartsData.categoryTotalNetData
														}]
							});


					}
				});
			}
		});


	}

	$scope.productViewInit = function(){

		UserInfoService.cspCheckLoginState('', function(res){
      if(res.loginState!==true){
				$('#loginModal').remove();
        $state.go('home');
        return;
      }else {
        console.log('cspCheckLoginState',res.uid);
				$scope.uid=res.uid;
				$scope.setHeaderName(res);
        UserInfoService.cspCheckRiskState({},function(result) {
				if(!(result.result === 'succeed' && result.riskstate === true)) {
						event.preventDefault();// 取消默认跳转行为
						$state.go("risklevel");//跳转风险评测
					}else {

					}
        });
      }
    });

	}

	$scope.divOnLoad=function(){
		console.log('divOnLoad');
		$("#contentDiv").find('img').css({"max-width":"100%"});
	}


	$scope.goPerformance=function($event){
		$scope.infoLoadPath='';//产品详情加载的页面
		document.getElementById('productPerf').style.display='';


		$("#productShowOption .item").removeClass("active");
		$($event.target).addClass("active");

	}
	$scope.goSubscribeInfo=function($event){
		document.getElementById('productPerf').style.display='none';

		$scope.infoLoadPath='/tpls/productView/subscribeInfo.html';//产品详情加载的页面

		$scope.getRiskLevelInfo($scope.productDetails.risklevelid);
		$scope.getSeriesInfo($scope.productDetails.seriesid);

		$("#productShowOption .item").removeClass("active");
		$($event.target).addClass("active");

	}
	$scope.goNotice=function($event){
		document.getElementById('productPerf').style.display='none';

		$scope.infoLoadPath='/tpls/productView/productNotice.html';//产品详情加载的页面
		$scope.getProductNotices($scope.productDetails.id);

		$("#productShowOption .item").removeClass("active");
		$($event.target).addClass("active");
	}

	$scope.goIntroduction=function($event){
		document.getElementById('productPerf').style.display='none';

		$scope.infoLoadPath=$scope.productDetails.contents;//产品详情加载的页面

		$("#productShowOption .item").removeClass("active");
		$($event.target).addClass("active");
	}


	$scope.getProductNotices=function(productID){
		var params={};
		params.productID=productID;
		productService.getProductNotices(params,function(res){
			if (res.result==false) {
				reuturn;
			}

			for (var i = 0; i < res.length; i++) {
				res[i].filename=res[i].path.substring(6);
			}

			$scope.productNotices=res;
			console.log(res);
		});
	}




});

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */

cspCtrls.controller('productView2Ctrl',
function($scope,$state,$http,productService0,UserInfoService,usercenterService,$ocLazyLoad) {

	var minNet=0,minTotalNet=0,maxNet=0,maxTotalNet=0;

	$ocLazyLoad.load('lib/echarts.js').then(function(){
		$scope.categoryChartsInit();
		$scope.getNetProduct();
	});
	$scope.uid='';

	$scope.chartsData={};

	$scope.chartsData.date=[];
	$scope.chartsData.categoryNetData=[];
	$scope.chartsData.categoryTotalNetData=[];

	$scope.productDetails={};
	$scope.netProductDatas={};
	$scope.productSpots={};

	$scope.productTactics={};
	$scope.NetAssetValue={};

	$scope.showData=[];




	  jQuery(document).ready(function(){

			document.getElementById('csp_header_comment_label').className = "csp_header_label";
			document.getElementById('csp_header_home_label').className = "csp_header_label";
			document.getElementById('csp_header_product_label').className = "csp_header_label";
			document.getElementById('csp_header_product0_label').className = "csp_header_label ";

			document.getElementById('csp_header_containter').style.display = "block";
			document.getElementById('csp_footer').style.display = "block";
			$('html,body').scrollTop(0); //不带动画


	    $scope.getProductDetails();



	  });



	$scope.getProductDetails = function(){
		productService0.getProductDetails('',function(res){
				if(typeof(res.result)=='undefined'||res.result===false ){
					console.log("查询产品信息失败");
					return;
				}
				console.log('getProductDetails',res,res.netdate);
				//格式化日期
				if (typeof(res.netdate)=='undefined'||
					res.netdate==''||
					res.netdate=='0000-00-00'||
					res.netdate=='1970-01-01') {
						res.netdate='';
				}else {
					res.netdate=new Date(res.netdate).Format("yyyy-MM-dd");
					$scope.getNetAssetValue(res.id,res.netdate);//获取单位净值

				}

				res.releasetime=new Date( res.releasetime).Format("yyyy-MM-dd");

				$scope.getTactics(res.tsid);//获取策略表
				$scope.productDetails=res;

				document.getElementById('product_image').src=res.piclink;
				// document.getElementById('product_header').innerHTML=res.caption;
				// document.getElementById('product_releaseTime').innerText=res.releasetime;
				// document.getElementById('productStatus').innerText=res.prostatus;
				// document.getElementById('productTactics').innerText=res.tsid;
				//
				// document.getElementById('product_Content').innerHTML=res.contents;
				// $("#product_Content").find("img").css({"max-width":"100%"});

		});


	}

	$scope.getFutures=function(){
		productService0.getFutures('',function(res){
			if(res==false){
        return;
      }
			for (var i = 0; i < res.length; i++) {
				res[i].date=new Date(res[i].date).Format("yyyy-MM-dd");
				res[i].marketValue=(res[i].last*res[i].volume).toFixed(2);
				res[i].volamt=res[i].volamt.toFixed(2);
				res[i].last=res[i].last.toFixed(2);
				res[i].deposit=res[i].deposit.toFixed(2);


				if(res[i].dealtype==0){
					res[i].dealtype='买入';
				}else{
					res[i].dealtype='卖出';
				}

			}
			console.log('getFutures',res);
			$scope.futures=res;
		});
	}

	$scope.setHeaderName=function(userInfo){
    usercenterService.getUserInfo(userInfo,function(res){
      if(res==false){
        return;
      }

			if(res.conlevel==7||res.conlevel==2||res.conlevel==1)//只有是砖石会员才会显示策略产品
			{
				document.getElementById('product0Btn').style.display='';
				document.getElementById('product0BigBtn').style.display='';
				document.getElementById('diamondMember').style.display='';


				$scope.getProductSpot();
				$scope.getFutures();
			}else{
				$('#loginModal').remove();
				$state.go('home');
			}
      document.getElementById('header_username').innerHTML=res.tel;
    });
  }

	//获取策略表
	$scope.getTactics = function(tsids){
		var params={};
		params.tacticsIDs=tsids;
		productService0.getTactics(params,function(res){
			if(res.result===false){
				console.log('获取产品策略失败');
			}else {
				console.log('获取产品策略成功',res);
				var Tactics='';
				for (var i = 0; i < res.length; i++) {
					Tactics=Tactics+res[i].tsname+',';
				}
				if (Tactics.length>0) {
					Tactics=Tactics.substring(0,Tactics.length-1);
				}
				document.getElementById('productTactics').innerText=Tactics;
			}
		});
  }

	//获取产品风险信息
	$scope.getRiskLevelInfo = function(risklevelid){
		var params={};
		params.risklevelid=risklevelid;
		productService0.getRiskLevelInfo(params,function(res){
			if(res.result===false){
				console.log('获取产品风险信息失败');
			}else {
				console.log('获取产品风险信息成功',res);

				$scope.productDetails.risklevelInfo=res;
			}
		});
	}

	//获取产品系列信息
	$scope.getSeriesInfo= function(seriesid){
		var params={};
		params.seriesid=seriesid;
		productService0.getSeriesInfo(params,function(res){
			if(res.result===false){
				console.log('获取产品系列失败');
			}else {
				console.log('获取产品系列成功',res);

				$scope.productDetails.seriesInfo=res;
			}
		});
	}

	//获取单位净值
	$scope.getNetAssetValue=function(productID,netdate){
		if (typeof productID=='undefined'|| productID==''||
				 typeof netdate=='undefined') {
					 return;
		}
		var queryNetAssetValu={};
		queryNetAssetValu.productID=productID;
		queryNetAssetValu.netdate=netdate;
		productService0.getNetAssetValue(queryNetAssetValu,function(res){
			if(res.result===false){
				console.log('getNetAssetValue failed');
				return;
			}
			res.date=new Date(res.date).Format("yyyy-MM-dd");
			console.log('getNetAssetValue',res);
			if(!isNaN(res.net))
				res.net=res.net.toFixed(3);
			$scope.NetAssetValue=res;
		})

	}

  $scope.setContent = function()
  {
    $scope.getProductDetails();

  }


	$scope.categoryChartsInit = function(){
		$scope.myCategoryEcharts = echarts.init(document.getElementById('myCategoryEcharts'));

			var option = {
			baseOption:{
				title: {
		        text: '净值走势图'
		    },
		    tooltip: {
		        trigger: 'axis'
		    },
		    legend: {
		        data:['净值','累计净值']
		    },
				grid: {
						 left: 80,
						// top: 80,
						 right: 80
						// bottom: 0
				},
		    xAxis: {
		        type: 'category',
		        boundaryGap: false,
						data: []
					},
		    yAxis: {
		        type: 'value'
		    },
				dataZoom: [
					{
						type: 'inside',
						xAxisIndex: 0 ,
						start: 0,
						end: 100
					},{
						start: 0,
						end: 10,
						handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',
						handleSize: '80%',
						handleStyle: {
								color: '#fff',
								shadowBlur: 3,
								shadowColor: 'rgba(0, 0, 0, 0.6)',
								shadowOffsetX: 2,
								shadowOffsetY: 2
						},
						left: 80,
						right: 80
				}],
		    series: [
		        {
		            name:'净值',
		            type:'line',
		            data:[]
		        },
		        {
		            name:'累计净值',
		            type:'line',
		            data:[]
		        }
		    ]
			},
			media: [
				{
						option: {
							grid: {
								left: 80,
							 right: 80
							}
						}
				},
				{
					query: {
						maxWidth: 750
					 },
					option: {
						grid: {
								left: 40,
								right:40
						},
						yAxis: {
							// axisTick:{inside:true},
				      // axisLabel:{inside:true}

				    }

					}
				}
				// {
				// 	query: {
				// 		minWidth: 450,
				// 		maxWidth:600
				// 	 },
				// 	option: {
				// 		grid: {
				// 				left: 0,
				//
				// 				width:"50%"
				// 		}
				// 	}
				// }

      ]

		};

		$scope.myCategoryEcharts.setOption(option);
		window.onresize = $scope.myCategoryEcharts.resize;


		$scope.myCategoryEcharts.on('datazoom', function (params) {
			console.log(params);

			if (typeof params.start != 'undefined') {
				var start=Math.floor(params.start*$scope.showData.length/100);
				var end=Math.ceil(params.end*$scope.showData.length/100);
			}else if (typeof params.batch != 'undefined'){
				var start=Math.floor(params.batch[0].start*$scope.showData.length/100);
				var end=Math.ceil(params.batch[0].end*$scope.showData.length/100);
			}
			else {
				return;
			}
			++end;
			end=end>$scope.showData.length?$scope.showData.length:end;
			// console.log(start,end);

			var arrData=$scope.showData.slice(start,end);
			var max=getMaximum(arrData);

			if (typeof(max)=='undefined'||max<=0) {
				var option={
					max:1,
					interval:0.2
				};
			}else{
				var option=getMaxAndInterval(max);
			}

			$scope.myCategoryEcharts.setOption({
				yAxis: {
					max:option.max,
					interval:option.interval
				}
			});

		});



		$scope.myCategoryEcharts.on('legendselectchanged', function (params) {
				var totalData=[];
				$scope.showData=[];

				for (x in params.selected){
					console.log('x in params.selected',x);
					switch (x) {
						case '净值':
						if(params.selected[x]){
							for (var i = 0; i < $scope.chartsData.categoryNetData.length; i++) {
								$scope.showData.push($scope.chartsData.categoryNetData[i]);
							}

								totalData.push(minNet);
								totalData.push(maxNet);
							}
							break;

						case '累计净值':
						if(params.selected[x]){
							for (var i = 0; i < $scope.chartsData.categoryTotalNetData.length; i++) {
								$scope.showData.push($scope.chartsData.categoryTotalNetData[i]);
							}
								totalData.push(minTotalNet);
								totalData.push(maxTotalNet);
							}
							break;
					}
				}


				// var min=getMinimum(totalData);
				var max=getMaximum($scope.showData);
				console.log('max',max,$scope.showData);

				if (typeof(max)=='undefined'||max<=0) {
					var option={
						max:1,
						interval:0.2
					};
				}else{
					var option=getMaxAndInterval(max);
				}



				console.log('max',max,minNet,maxNet,minTotalNet,maxTotalNet,totalData);
				$scope.myCategoryEcharts.setOption({
					yAxis: {
						max:option.max,
						interval:option.interval
					}
				});


		});


		// 图例开关的行为只会触发 legendselectchanged 事件
		// $scope.myCategoryEcharts.on('legendselectchanged', function (params) {
		// 		var totalData=[];
		//
		// 		for (x in params.selected){
		// 			console.log('x in params.selected',x);
		// 			switch (x) {
		// 				case '净值':
		// 				if(params.selected[x]){
		// 						totalData.push(minNet);
		// 						totalData.push(maxNet);
		// 					}
		// 					break;
		//
		// 				case '累计净值':
		// 				if(params.selected[x]){
		// 						totalData.push(minTotalNet);
		// 						totalData.push(maxTotalNet);
		// 					}
		// 					break;
		// 			}
		// 		}
		// 		var min=getMinimum(totalData);
		// 		var max=getMaximum(totalData);
		// 		if (typeof(min)=='undefined'||typeof(max)=='undefined') {
		// 			return;
		// 		}
		//
		// 		console.log('min',min,'max',max,minNet,maxNet,minTotalNet,maxTotalNet);
		//
		// 		var minY=min-(max-min)/2;
		// 		minY=minY.toFixed(4);
		// 		var maxY=max+(max-min)/2;
		// 		maxY=maxY.toFixed(4);
		// 		// var interval2=(max-min)*0.4;
		// 		// interval2=interval2.toFixed(4);
		// 		// console.log('interval2',interval2);
		//
		// 		$scope.myCategoryEcharts.setOption({
		// 			yAxis: {
		// 					max:maxY,
		// 					min:minY
		//
		// 			}
		// 		});
		//
		//
		// });
	}



	$scope.getProductSpot = function(){
		var product={};
		product.protype=2;

		productService0.getProductSpot(product,function(res){
			if(res===false){
				console.log('产品界面获取productID失败');
			}else{
				for (var i = 0; i < res.length; i++) {
					res[i].marketValue=res[i].volamt*res[i].volume;
					res[i].marketValue=res[i].marketValue.toFixed(2);
					res[i].volamt=	res[i].volamt.toFixed(2);
					res[i].last=	res[i].last.toFixed(2);
				}
				$scope.productSpots=res;
				console.log($scope.productSpots);
			}
		});

	}

	$scope.getNetProduct = function(){
		productService0.getProductID('',function(res){
			if(res===false){
				console.log('产品界面获取productID失败');
			}else{
				var product={};
				product.productID=res.productID;
				productService0.getNetProduct(product,function(res){
					if(res===false){
						console.log('查询netProduct失败');
					}else {
						$scope.netProductDatas=res;

						if ($scope.netProductDatas.length>0) {
							$scope.accReturnRate=(($scope.netProductDatas[0].totalnet-1)*100).toFixed(2)+'%';
						}
						else {
							$scope.accReturnRate='--';
							return;
						}
						console.log('getNetProduct',res);


						if(res.length>0){
							minNet=res[0].net;
							minTotalNet=res[0].totalnet;
							maxNet=res[0].net;
							maxTotalNet=res[0].totalnet;
						}
						else {
							return;
						}

						for(var i=$scope.netProductDatas.length-1;i>=0;--i){

							if(minNet>res[i].net)
								minNet=res[i].net;
							if(maxNet<res[i].net)
								maxNet=res[i].net;
							if(minTotalNet>res[i].totalnet)
								minTotalNet=res[i].totalnet;
							if(maxTotalNet<res[i].totalnet)
								maxTotalNet=res[i].totalnet;

							$scope.netProductDatas[i].netStr=$scope.netProductDatas[i].net.toFixed(3);
							$scope.netProductDatas[i].totalnetStr=$scope.netProductDatas[i].totalnet.toFixed(3);
							$scope.netProductDatas[i].accrateStr=($scope.netProductDatas[i].accrate*100).toFixed(2)+'%';
							$scope.netProductDatas[i].yearrateStr=($scope.netProductDatas[i].yearrate*100).toFixed(2)+'%';


							var datetime= new Date($scope.netProductDatas[i].datetime.replace(/-/g,"/"));
							var xcoordinate=[datetime.getFullYear(), datetime.getMonth()+1, datetime.getDate()].join('/');

							$scope.chartsData.date.push(xcoordinate);
							$scope.chartsData.categoryNetData.push($scope.netProductDatas[i].net);
							$scope.chartsData.categoryTotalNetData.push($scope.netProductDatas[i].totalnet);
							$scope.showData.push($scope.netProductDatas[i].net);
							$scope.showData.push($scope.netProductDatas[i].totalnet);
						}

						var min=minNet>minTotalNet?minTotalNet:minNet;
						var max=maxNet>maxTotalNet?maxNet:maxTotalNet;

						//数据显示在中间的位置
						// var minY=min-(max-min)/2;
						// minY=minY.toFixed(4);
						// var maxY=max+(max-min)/2;
						// maxY=maxY.toFixed(4);
						// console.log(minNet,maxNet,minTotalNet,maxTotalNet);
						// console.log(max,min,'minY',minY,'maxY',maxY);

						//数据显示在不顶格的位置
						if (typeof(max)=='undefined'||max<=0) {
							var option={
								max:1,
								interval:0.2
							};
						}else{
							var option=getMaxAndInterval(max);
						}
						console.log(option);

						$scope.myCategoryEcharts.setOption({
										xAxis: {
												data: $scope.chartsData.date
										},
										yAxis: {
														max:option.max,
														//splitNumber:splitNumber,
														interval:option.interval
														//min:0
										},
										series: [{
															name: '净值',
															data: $scope.chartsData.categoryNetData
														},{
															name: '累计净值',
															data: $scope.chartsData.categoryTotalNetData
														}]
							});
							// console.log($scope.myCategoryEcharts.getOption());


					}
				});
			}
		});


	}



	$scope.productViewInit = function(){
		UserInfoService.cspCheckLoginState('', function(res){
      if(res.loginState!==true){
				$('#loginModal').remove();
        $state.go('home');
        return;
      }else {
        console.log('cspCheckLoginState',res.uid);
				$scope.uid=res.uid;
				$scope.setHeaderName(res);
        UserInfoService.cspCheckRiskState({},function(result) {
				if(!(result.result === 'succeed' && result.riskstate === true)) {
						event.preventDefault();// 取消默认跳转行为
						$state.go("risklevel");//跳转风险评测
					}else {

					}
        });
      }
    });

	}


		$scope.goPerformance=function($event){
			$scope.infoLoadPath='';//产品详情加载的页面
			document.getElementById('productPerf').style.display='';


			$("#productShowOption .item").removeClass("active");
			$($event.target).addClass("active");

		}
		$scope.goSubscribeInfo=function($event){
			document.getElementById('productPerf').style.display='none';

			$scope.infoLoadPath='/tpls/productView/subscribeInfo.html';//产品详情加载的页面

			$scope.getRiskLevelInfo($scope.productDetails.risklevelid);
			$scope.getSeriesInfo($scope.productDetails.seriesid);

			$("#productShowOption .item").removeClass("active");
			$($event.target).addClass("active");

		}
		$scope.goNotice=function($event){
			document.getElementById('productPerf').style.display='none';

			$scope.infoLoadPath='/tpls/productView/productNotice.html';//产品详情加载的页面
			$scope.getProductNotices($scope.productDetails.id);

			$("#productShowOption .item").removeClass("active");
			$($event.target).addClass("active");
		}

		$scope.goIntroduction=function($event){
			document.getElementById('productPerf').style.display='none';

			$scope.infoLoadPath=$scope.productDetails.contents;//产品详情加载的页面

			$("#productShowOption .item").removeClass("active");
			$($event.target).addClass("active");
		}


		$scope.getProductNotices=function(productID){
			var params={};
			params.productID=productID;
			productService0.getProductNotices(params,function(res){
				if (res.result==false) {
					reuturn;
				}

				for (var i = 0; i < res.length; i++) {
					res[i].filename=res[i].path.substring(6);
				}

				$scope.productNotices=res;
				console.log(res);
			});
		}



});

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
 cspCtrls.controller('randomCtrl',
 function($scope,$state,wishListService, allocateStockService, randomService) {
/*
* 全局变量定义
*/

 $scope.currentSelectTrid = '';
 $scope.currentSelectTridName = '';
 $scope.currentSelectTid = 0;
 $scope.currentSelectTidName = '';



   $scope.randomInit = function(){
     document.getElementById('csp_header_containter').style.display = "none";
     document.getElementById('csp_footer').style.display = "none";
     document.getElementById('homeSpaceDiv_37px').style.display = "none";
     window.scrollTo(0,0);
   }
   // 初始化页面
   $(document).ready(function(){
     // 获取该登录maid下的交易单元
          var a= {maid:''};
          a.maid = 1;
          allocateStockService.getModel(a, function(res){
            $scope.model = res;
            if($scope.model.length>5){
              $scope.isActive=true;
            }else{
              $scope.isActive=false;
            }

            //  该页面时下拉框的初始化
                 $('.js-trid').dropdown({
                     onChange: function(value, text, $choice){


                        $scope.$apply(function(){
                          $scope.currentSelectTrid = value.split('(')[1].replace(')', '');
                          $scope.currentSelectTridName = value;
                        })

                     },
                     on: 'hover'
                 })

          })
 })

 /**
  * @func $watch
  * @desc 监控currentSelectTrid，只有在选择了交易单元的情况下，才能进行下一步操作
  * @author ll
  * @param
  */
$scope.$watch('currentSelectTrid',function(){
  console.log('$scope.currentSelectTrid',$scope.currentSelectTrid)
  if($scope.currentSelectTrid){
    var a= {trid:''};
    a.trid = $scope.currentSelectTrid;

     wishListService.getTidModel(a, function(res){

       $scope.tidModel = res;
      if(res.length==0){
        $scope.currentSelectTid = '';
        $scope.currentSelectTidName = '单元小组';
        $('.js_tid').text($scope.currentSelectTidName)
      }else{

        if(res.length>5){
          $scope.isTidActive = true;
        }else{
          $scope.isTidActive = false;
        }


        //  该页面时下拉框的初始化
             $('.js-tid').dropdown({
                 onChange: function(value, text, $choice){
                 $scope.$apply(function(){
                   console.log(value);
                   $scope.currentSelectTid = value.split('(')[1].split(')')[0];
                     console.log('$scope.currentSelectTid',$scope.currentSelectTid)
                     //  $scope.currentSelectTidName = value;
                    })

                 },
                 on: 'hover'
             })
      }


    })


}
})

$scope.$watch('currentSelectTid',function(){
  if($scope.currentSelectTid){
     groupDisplay($scope.currentSelectTid);
     var a = {gid:$scope.currentSelectTid}
     randomService.getTname(a,function(data){
       $scope.currentSelectTidName =data.title;
       $('.js_tid').text($scope.currentSelectTidName)
     })
  }
})

/**
 * @func randomDivOnBtn
 * @desc 分券按钮，用于弹出提示
 * @author ll
 * @param
 */
$scope.randomDivOnBtn = function (){
  if( $scope.currentSelectTrid){
      jQuery('.js-random-allocated-comfirm').modal('show');
  }
  else{
      jQuery('.js-choose-random-trid').modal('show')
  }
}

/**
* @desc 一键分券中的确定分券
* @author ll
* @param
*/
$scope.randomAllocatedConfirm = function() {
    updateModalState('js-random-allocated-comfirm', 'hide');
    var a = {trid:''};
    a.trid = $scope.currentSelectTrid;

    randomService.getWishTid(a,function(wishData){
        if(typeof wishData[0]!=='undefined'){
            $scope.currentSelectTid=wishData[0].gid;
            groupOutput($scope.currentSelectTrid,$scope.currentSelectTid);
            $(".js-wait-random-div").addClass("active")
            setTimeout(function(){
                $(".js-wait-random-div").removeClass("active")
            },3000);
        }else{
            csp.notify('notice', {
                msg: '该小组无人有心愿清单，无从分券',
                delay: 5000,
            });
            console.log('该小组无人有心愿清单，无从分券')
        }
    });
}

/**
* @desc 分券并显示最小gid的分券结果
* @author ll
* @param {String} trid - 选择的交易单元id
* @param {String} tid - 选择显示结果的小组Id
*/
function groupOutput(trid,gid) {
    console.log("分券trid",trid);
    if(!trid){
        //请选择分券单元
        jQuery('.js-choose-random-trid').modal('show')
    }
    else{
        var a = {trid:'',maid:''};
        a.maid = '1';
        a.trid = trid;
        randomService.unitRandmDiv(a,function(dataR) {
        if(dataR.successOr) {
            console.log("分券成功",dataR.successOr);
            randomService.deleWishList(a,function(data){
                if(data.delWish){
                    console.log("上一次的心愿清单清除")
                }
            });
            var b = {trid:'', valueStr:''};
            b.trid = trid;


            if (dataR.UnitWish.length > 0) {
                var tempStr = '';
                for (var i = 0; i < dataR.UnitWish.length; i++) {
                    for(var j=0;j<dataR.UnitWish[i].children.length;j++){
                      tempStr += '("';
                      tempStr += dataR.UnitWish[i].gid;
                      tempStr += '","';
                      tempStr += dataR.UnitWish[i].children[j].cindex;
                      tempStr += '","';
                      tempStr += dataR.UnitWish[i].children[j].cid;
                      tempStr += '","';
                      tempStr += dataR.UnitWish[i].children[j].cname;
                      tempStr += '","';
                      tempStr += dataR.UnitWish[i].children[j].amount;
                      tempStr += '","';
                      tempStr += dataR.UnitWish[i].children[j].post_allocated_amount;
                      tempStr += '","';

                      tempStr +=  dataR.UnitWish[i].children[j].allocated_value;
                      tempStr += '","';

                      tempStr +=  trid;
                      tempStr += '"),';
                    }

                }
                if (tempStr.length > 0) {
                    b.valueStr = tempStr.substring(0, tempStr.length - 1);
                }
                b.valueStr += 'ON DUPLICATE KEY UPDATE post_allocated_amount = values(post_allocated_amount),post_allocated_value = values(post_allocated_value), amount=amount+values(amount)';


                randomService.writeResults(b,function(data){
                    if(data.writeS){
                        console.log("分券结果数据插入成功",data.writeS);
                        groupDisplay(gid);
                        $scope.currentSelectTid = gid;
                        var a = {gid:$scope.currentSelectTid}
                        randomService.getTname(a,function(data){
                          $scope.currentSelectTidName =data.title;
                          $('.js_tid').text($scope.currentSelectTidName)
                        })
                        randomService.randomOver(a,function(dataOver){
                            if(dataOver.randomOverFlag){
                              console.log('该轮分券完毕，总券还有剩余，可继续进行下一轮分券')
                                csp.notify('notice', {
                                msg: '该轮分券完毕，总券还有剩余，可继续进行下一轮分券',
                                delay: 15000,
                                });
                            }else{
                                console.log('该单元总券已全部分配完。您可点击小组查看最终分券结果。')
                                csp.notify('notice', {
                                msg: '该单元总券已全部分配完。您可点击小组查看最终分券结果。',
                                delay: 15000,
                                });
                            }
                        })

                    }
                })
              }
/*
            randomService.writeSec(a,function(data){
                if(data.writeS){
                    console.log("总券剩余数量写入成功")
                    // socket.join(trid,function(err,data){
                    //     console.log(err,data)
                    // })
                    // socket.emit('allocatedOver');
                    randomService.randomOver(a,function(dataOver){
                        if(dataOver.randomOverFlag){
                          console.log('该轮分券完毕，总券还有剩余，可继续进行下一轮分券')
                            // csp.notify('notice', {
                            // msg: '该轮分券完毕，总券还有剩余，可继续进行下一轮分券',
                            // delay: 15000,
                            // });
                        }else{
                            console.log('该单元总券已全部分配完。您可点击小组查看最终分券结果。')
                            // csp.notify('notice', {
                            // msg: '该单元总券已全部分配完。您可点击小组查看最终分券结果。',
                            // delay: 15000,
                            // });
                        }
                    })
                }

            })
            // insertEx(trid);



*/
        }
      });
    }
}

/**
* @desc 更新弹出层的显示状态
* @param {String} className - 弹出层的类名
* @param {String} showState - 弹出层的显示状态
*/
 function updateModalState(className, showState) {
    jQuery('.' + className).modal(showState);
}

/**
 * @func formatNumber
 * @desc 格式化数字
 * @param {number} num 需要被格式化的数字
 * @param {int} [precision] 格式化后的精度
 */
function formatNumber(num, precision) {
    var parts;
    // 判断是否为数字
    if (!isNaN(parseFloat(num)) && isFinite(num)) {
        num = Number(num);
        // 处理小数点位数
        num = (typeof precision !== 'undefined' ? num.toFixed(precision) : num).toString();
        // 分离数字的小数部分和整数部分
        parts = num.split('.');
        // 整数部分加[separator]分隔, 借用一个著名的正则表达式
        parts[0] = parts[0].toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1' + ',');

        return parts.join('.');
    }
    return NaN;
}

/**
 * @desc 显示小组分券结果，及小组相关信息
 * @param {gid} gid 显示的小组id
 */
function groupDisplay(gid) {
  var a = {gid:''};
  a.gid = gid;
    randomService.getRandmR(a, function(receiveData) {

        $scope.randmR = receiveData;
        jQuery(".js-random-output").attr("disabled",false)
        console.log("显示当前tid的分券结果信息",a.gid);

        randomService.getTname(a,function(data){
          $scope.currentSelectTidName =data.title;
          $('.js_tid').text($scope.currentSelectTidName)
        })
        randomService.getInfobyGid(a,function(data) {
          $(".js-tid-bp").html(" 小组杠杆bp:" + formatNumber(data.t_bp,2));
          $(".js-tid-allocated-value").html("分券市值:" + formatNumber(data.t_allocated_bp,2));
        })

    })
}
/**
 * @desc 页面上的清零按钮，用于弹出是否确定清零的弹框
 */
$scope.clearRandom = function(){
    if(!$scope.currentSelectTrid){
        //请选择清零的单元
        jQuery('.js-choose-clear-trid').modal('show');
    }
    else{
        jQuery('.js-clear-random').modal('show');

    }
}
/**
 * @desc 确定对选中的单元进行清零
 * @param {gid} gid 显示的小组id
 */
$scope.clearTrid = function(){
    //  console.log('clear trid',sessionData.trid);
    var a = {maid:'', trid:''};
    a.maid = '1';
    a.trid = $scope.currentSelectTrid;
     randomService.recoverStock(a,function(dataS){
         if(dataS.recoverStock){
             //总券剩余数量恢复了
             console.log("总券剩余数量恢复了")
         }else{
             console.log("总券剩余数量恢复出错")
         }
     })
     randomService.deleResults(a,function(data){
         if(data.deleteR){
             groupDisplay(-1);
             $scope.currentSelectTidName = '单元小组';
             $('.js_tid').text($scope.currentSelectTidName)
             console.log('清零成功，可以重新分券啦～')
             csp.notify('notice', {
                 msg: '清零成功，可以重新分券啦～',
                 delay: 5000,
             });
         }
     });
    //  delExchangeData(sessionData.maid);
 }
$scope.noWishGo = function(){
     console.log("是否有小组没有心愿清单--->get");
     var a = {trid:''};
     a.trid = $scope.currentSelectTrid;
     randomService.noWishList(a,function(data){
         console.log("0为全有心愿清单，1为有人没有心愿清单",data.noWish)
         if(data.noWish==1){
             jQuery('.js-someone-no-wishlist').modal('show');
         }else if(data.noWish==-1) {
             //全都没有心愿清单
             jQuery('.js-all-no-wish').modal('show');

         }
         else{
             $scope.randomAllocatedConfirm();
         }

     })
 }


 /**
  * @func
  * @desc 结果导出
  * @author ll
  */
 //unit 单元id tid 小组id
$scope.randomOutput = function() {
     if(!$scope.currentSelectTid){

         csp.notify('notice', {
             msg: '请选择导出的小组',
             delay: 5000,
         });
     }else{
        var id = $scope.currentSelectTid
        var url = "/random/exportExcel/"+id;
        window.location = url;
     }
 }
/*
*/
})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
 
cspCtrls.controller('regCtrl',function($scope,$state) {
	$scope.toLogin = function() {
		$state.go('home.login')
	}
})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */

cspCtrls.controller('csp_resetCtrl',function($scope,$interval,ResetpassService){
	$scope.timePromise = undefined;
	$scope.cspResetInit = function() {
		$scope.loadpath = 'tpls/resetpass/resetpass.html';
		document.getElementById('csp_header_comment_label').className = "csp_header_label";
		document.getElementById('csp_header_home_label').className = "csp_header_label";
		document.getElementById('csp_header_product_label').className = "csp_header_label";
		document.getElementById('csp_header_product0_label').className = "csp_header_label ";

	}
	$scope.cspResetPassLoadReady = function() {
		if($scope.loadpath === 'tpls/resetpass/resetpass.html') {
			//计算一下屏幕高度*0.8
            var height = document.documentElement.clientHeight * 0.8 - 20;
            var minHeight = height + "px";
            document.getElementById('csp_reset_form').style.minHeight = minHeight;
		}
		else {
			//计算一下屏幕高度*0.8
            var height = document.documentElement.clientHeight * 0.8 - 20;
            var minHeight = height + "px";
            document.getElementById('csp_reset_success_container').style.minHeight = minHeight;
		}
	}
	$scope.cspResetPhoneFocus = function() {
		document.getElementById('csp_reset_phone_tips').style.display = "none";
		document.getElementById('csp_reset_phone_br').style.display = "block";
	}
	$scope.cspResetPhoneBlur = function(phone) {
		if(phone === undefined || phone === "") {
			document.getElementById('csp_reset_phone_tips').style.display = "block";
			document.getElementById('csp_reset_phone_tips').style.visibility = "visible";
			document.getElementById('csp_reset_phone_label').innerHTML = "手机号码不能为空";
			document.getElementById('csp_reset_phone_br').style.display = "none";
		}
	}
	$scope.cspResetImgCodeFocus = function() {
		document.getElementById('csp_reset_imgcode_tips').style.display = "none";
		document.getElementById('csp_reset_imgcode_br').style.display = "block";
	}
	$scope.cspResetImgCodeBlur = function(imgcode) {
		if(imgcode === undefined || imgcode === "") {
			document.getElementById('csp_reset_imgcode_tips').style.display = "block";
			document.getElementById('csp_reset_imgcode_tips').style.visibility = "visible";
			document.getElementById('csp_reset_imgcode_label').innerHTML = "图片验证码不能为空";
			document.getElementById('csp_reset_imgcode_br').style.display = "none";
		}
	}
	$scope.cspResetRefreshImgCode = function() {
		var time = Math.random()*10;
		document.getElementById('csp_reset_imgcode_id').src = "/resetcode?width=120&height=40&time="+time;
		document.getElementById('csp_reset_imgcode_tips').style.display = "none";
		document.getElementById('csp_reset_imgcode_br').style.display = "block";
	}
	$scope.cspResetCodeFocus = function() {
		document.getElementById('csp_reset_code_tips').style.display = "none";
		document.getElementById('csp_reset_code_br').style.display = "block";
	}
	$scope.cspResetCodeBlur = function(code) {
		if(code === undefined || code === "") {
			document.getElementById('csp_reset_code_tips').style.display = "block";
			document.getElementById('csp_reset_code_tips').style.visibility = "visible";
			document.getElementById('csp_reset_code_label').innerHTML = "手机验证码不能为空";
			document.getElementById('csp_reset_code_br').style.display = "none";
		}
	}
	$scope.cspResetPassFocus = function() {
		document.getElementById('csp_reset_pass_tips').style.display = "none";
		document.getElementById('csp_reset_pass_br').style.display = "block";
	}
	$scope.cspResetPassBlur = function(pass) {
		if(pass === undefined || pass === "") {
			document.getElementById('csp_reset_pass_tips').style.display = "block";
			document.getElementById('csp_reset_pass_tips').style.visibility = "visible";
			document.getElementById('csp_reset_pass_label').innerHTML = "新密码不能为空";
			document.getElementById('csp_reset_pass_br').style.display = "none";
		}
		else {
			if(!(/^[a-zA-Z0-9]{6,20}$/.test(pass))) {
				document.getElementById('csp_reset_pass_tips').style.display = "block";
				document.getElementById('csp_reset_pass_tips').style.visibility = "visible";
				document.getElementById('csp_reset_pass_label').innerHTML = "密码必须为6-20位字母或数字";
				document.getElementById('csp_reset_pass_br').style.display = "none";
			}
		}
	}
	$scope.cspResetPassrepFocus = function() {
		document.getElementById('csp_reset_passrep_tips').style.display = "none";
		document.getElementById('csp_reset_passrep_br').style.display = "block";
	}
	$scope.cspResetPassrepBlur = function(pass,passrep) {
		if(passrep === undefined || passrep === "") {
			document.getElementById('csp_reset_passrep_tips').style.display = "block";
			document.getElementById('csp_reset_passrep_tips').style.visibility = "visible";
			document.getElementById('csp_reset_passrep_label').innerHTML = "确认密码不能为空";
			document.getElementById('csp_reset_passrep_br').style.display = "none";
		}
		else {
			if(pass === undefined || pass === "") {
				document.getElementById('csp_reset_passrep_tips').style.display = "block";
				document.getElementById('csp_reset_passrep_tips').style.visibility = "visible";
				document.getElementById('csp_reset_passrep_label').innerHTML = "请先输入密码";
				document.getElementById('csp_reset_passrep_br').style.display = "none";
			}
			else {
				if(pass !== passrep) {
					document.getElementById('csp_reset_passrep_tips').style.display = "block";
					document.getElementById('csp_reset_passrep_tips').style.visibility = "visible";
					document.getElementById('csp_reset_passrep_label').innerHTML = "两次密码不一致";
					document.getElementById('csp_reset_passrep_br').style.display = "none";
				}
			}
		}
	}

	//点击获取验证码
	$scope.cspResetGetCode = function(phone,imgcode) {

		if(phone === undefined || phone === "") {
			document.getElementById('csp_reset_phone_tips').style.display = "block";
			document.getElementById('csp_reset_phone_tips').style.visibility = "visible";
			document.getElementById('csp_reset_phone_label').innerHTML = "请先输入正确的手机号码";
			document.getElementById('csp_reset_phone_br').style.display = "none";
		}
		else if(imgcode === undefined || imgcode === "") {
			document.getElementById('csp_reset_imgcode_tips').style.display = "block";
			document.getElementById('csp_reset_imgcode_tips').style.visibility = "visible";
			document.getElementById('csp_reset_imgcode_label').innerHTML = "图片验证码不能为空";
			document.getElementById('csp_reset_imgcode_br').style.display = "none";
		}
		else {
			//判断图片验证码是否正确
			var imgcodejson = {};
			imgcodejson.imgcode = imgcode;
			ResetpassService.cspCheckImgCode(imgcodejson,function(imgcoderes) {
				if(imgcoderes.result === "succeed") {
					//查询数据库
					var json = {};
					json.phone = phone;
					ResetpassService.cspResetCheckPhone(json,function(result) {
						if(result.result === "succeed") {
							//表示账号存在，发送验证码
							ResetpassService.cspResetGetCode(json,function(res) {
								if(res.result === "succeed") {
									//短信验证码发送成功
									var second = 60;
									$scope.timePromise = undefined;
									$scope.timePromise = $interval(function(){
										if(second<=0){
										  $interval.cancel($scope.timePromise);
										  $scope.timePromise = undefined;
										  second = 60;
										  document.getElementById('csp_reset_code_button_label').innerHTML = "获取验证码";
										  document.getElementById('csp_reset_code_button').removeAttribute("disabled");
										}else{
										  second--;
										  var show = second + 1;
										  document.getElementById('csp_reset_code_button_label').innerHTML = show + "秒后重新获取";
										  document.getElementById('csp_reset_code_button').disabled = "disabled";
										}
									},1000,100);
									alert("我们已经向您的手机发送了验证码，5分钟有效");
								}
								else {
									//发送失败
									document.getElementById('csp_reset_code_tips').style.display = "block";
									document.getElementById('csp_reset_code_tips').style.visibility = "visible";
									document.getElementById('csp_reset_code_label').innerHTML = result.reason;
									document.getElementById('csp_reset_code_br').style.display = "none";
								}
							});
						}
						else {
							//账号不存在
							document.getElementById('csp_reset_code_tips').style.display = "block";
							document.getElementById('csp_reset_code_tips').style.visibility = "visible";
							document.getElementById('csp_reset_code_label').innerHTML = result.reason;
							document.getElementById('csp_reset_code_br').style.display = "none";
						}
					});
				}
				else {
					document.getElementById('csp_reset_imgcode_tips').style.display = "block";
					document.getElementById('csp_reset_imgcode_tips').style.visibility = "visible";
					document.getElementById('csp_reset_imgcode_label').innerHTML = "图片验证码错误";
					document.getElementById('csp_reset_imgcode_br').style.display = "none";
				}
			});
		}
	}

	//点击提交
	$scope.cspResetPassSubmit = function(phone,imgcode,code,pass,passrep) {
		//先检查图片验证码，若不正确，不执行任何操作
		if(imgcode === undefined || imgcode === "") {
			document.getElementById('csp_reset_imgcode_tips').style.display = "block";
			document.getElementById('csp_reset_imgcode_tips').style.visibility = "visible";
			document.getElementById('csp_reset_imgcode_label').innerHTML = "图片验证码不能为空";
			document.getElementById('csp_reset_imgcode_br').style.display = "none";
		}
		else {
			var phone_error = 0;
			var code_error = 0;
			var pass_error = 0;
			var passrep_error = 0;
			//先清空所有错误状态
			document.getElementById('csp_reset_phone_tips').style.display = "none";
			document.getElementById('csp_reset_phone_br').style.display = "block";
			document.getElementById('csp_reset_imgcode_tips').style.display = "none";
			document.getElementById('csp_reset_imgcode_br').style.display = "block";
			document.getElementById('csp_reset_code_tips').style.display = "none";
			document.getElementById('csp_reset_code_br').style.display = "block";
			document.getElementById('csp_reset_pass_tips').style.display = "none";
			document.getElementById('csp_reset_pass_br').style.display = "block";
			document.getElementById('csp_reset_passrep_tips').style.display = "none";
			document.getElementById('csp_reset_passrep_br').style.display = "block";
			//检查手机号
			if(phone === undefined || phone === "") {
				document.getElementById('csp_reset_phone_tips').style.display = "block";
				document.getElementById('csp_reset_phone_tips').style.visibility = "visible";
				document.getElementById('csp_reset_phone_label').innerHTML = "请先输入正确的手机号码";
				document.getElementById('csp_reset_phone_br').style.display = "none";
				phone_error = 1;
			}
			//检查密码
			if(pass === undefined || pass === "") {
				document.getElementById('csp_reset_pass_tips').style.display = "block";
				document.getElementById('csp_reset_pass_tips').style.visibility = "visible";
				document.getElementById('csp_reset_pass_label').innerHTML = "新密码不能为空";
				document.getElementById('csp_reset_pass_br').style.display = "none";
				pass_error = 1;
			}
			else {
				if(!(/^[a-zA-Z0-9]{6,20}$/.test(pass))) {
					document.getElementById('csp_reset_pass_tips').style.display = "block";
					document.getElementById('csp_reset_pass_tips').style.visibility = "visible";
					document.getElementById('csp_reset_pass_label').innerHTML = "密码必须为6-20位字母或数字";
					document.getElementById('csp_reset_pass_br').style.display = "none";
					pass_error = 1;
				}
			}
			//检查密码确认
			if(passrep === undefined || passrep === "") {
				document.getElementById('csp_reset_passrep_tips').style.display = "block";
				document.getElementById('csp_reset_passrep_tips').style.visibility = "visible";
				document.getElementById('csp_reset_passrep_label').innerHTML = "确认密码不能为空";
				document.getElementById('csp_reset_passrep_br').style.display = "none";
				passrep_error = 1;
			}
			else {
				if(pass === undefined || pass === "") {
					document.getElementById('csp_reset_passrep_tips').style.display = "block";
					document.getElementById('csp_reset_passrep_tips').style.visibility = "visible";
					document.getElementById('csp_reset_passrep_label').innerHTML = "请先输入密码";
					document.getElementById('csp_reset_passrep_br').style.display = "none";
					passrep_error = 1;
				}
				else {
					if(pass !== passrep) {
						document.getElementById('csp_reset_passrep_tips').style.display = "block";
						document.getElementById('csp_reset_passrep_tips').style.visibility = "visible";
						document.getElementById('csp_reset_passrep_label').innerHTML = "两次密码不一致";
						document.getElementById('csp_reset_passrep_br').style.display = "none";
						passrep_error = 1;
					}
				}
			}
			//检查验证码
			if(code === undefined || code === "") {
				document.getElementById('csp_reset_code_tips').style.display = "block";
				document.getElementById('csp_reset_code_tips').style.visibility = "visible";
				document.getElementById('csp_reset_code_label').innerHTML = "手机验证码不能为空";
				document.getElementById('csp_reset_code_br').style.display = "none";
			}
			else {
				var json = {};
				json.phone = phone;
				json.code = code;
				ResetpassService.cspCheckCode(json,function(result) {
					if(result.result === "succeed") {
						//检查提交
						if(phone_error + code_error + pass_error + passrep_error === 0) {
							var jsonmit = {};
							jsonmit.phone = phone;
							jsonmit.pass = pass;
							ResetpassService.cspUpdateUser(jsonmit,function(res) {
								if(res.result === "succeed") {
									$interval.cancel($scope.timePromise);
									$scope.timePromise = undefined;
									ResetpassService.cspDeleteSession();
									$scope.loadpath = 'tpls/resetpass/resetsuccess.html';
									var second = 5;
									$scope.timePromise = undefined;
									$scope.timePromise = $interval(function(){
										if(second<=0){
										  $interval.cancel($scope.timePromise);
										  $scope.timePromise = undefined;
										  second = 5;
										  window.location.href = "../";
										  console.log("sfsd");
										}else{
											second--;
										  document.getElementById('csp_reset_success_time_label').innerHTML = second +1;

										}
									},1000,100);
								}
								else {
									alert("数据库异常，请稍候重试!");
								}
							})
						}
					}
					else {
						document.getElementById('csp_reset_code_tips').style.display = "block";
						document.getElementById('csp_reset_code_tips').style.visibility = "visible";
						document.getElementById('csp_reset_code_label').innerHTML = result.reason;
						document.getElementById('csp_reset_code_br').style.display = "none";
					}
				})
			}
		}
	}

	//点击跳转
	$scope.cspResetSuccessHref = function () {
		$interval.cancel($scope.timePromise);
		$scope.timePromise = undefined;
	}
})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */

cspCtrls.controller('csp_riskCtrl',function($scope,UserInfoService,RisklevelService,$state) {

	$scope.cspRisklevelInit = function() {
		console.log("进入了风险评测111");
		$scope.score0 = 5;
		$scope.score1 = 5;
		$scope.score2 = 5;
		$scope.score3 = 5;
		$scope.score4 = 5;
		$scope.score5 = 5;
		$scope.score6 = 5;
		$scope.score7 = 5;
		$scope.score8 = 5;
		$scope.score9 = 5;
		$scope.csp_risk_idtype = '1';
		$scope.riskloadpath = 'tpls/risklevel/risklevel.html';
		$scope.riskkind = "";
		$scope.riskcontent = "";
		$scope.riskstate = 0;
		document.getElementById('csp_header_comment_label').className = "csp_header_label";
		document.getElementById('csp_header_home_label').className = "csp_header_label";
		document.getElementById('csp_header_product_label').className = "csp_header_label";
		document.getElementById('csp_header_product0_label').className = "csp_header_label ";

	}

	$scope.cspUserMenuMouseMove = function() {
		$('.menu.csp_risk_user_menu').show();
	}
	$scope.cspUserMenuMouseOut = function() {
		$('.menu.csp_risk_user_menu').hide();
	}

	$scope.cspRiskChangeAnswer = function(obj,score) {
		switch (obj) {
			case 0:
				$scope.score0 = score;
				break;
			case 1:
				$scope.score1 = score;
				break;
			case 2:
				$scope.score2 = score;
				break;
			case 3:
				$scope.score3 = score;
				break;
			case 4:
				$scope.score4 = score;
				break;
			case 5:
				$scope.score5 = score;
				break;
			case 6:
				$scope.score6 = score;
				break;
			case 7:
				$scope.score7 = score;
				break;
			case 8:
				$scope.score8 = score;
				break;
			case 9:
				$scope.score9 = score;
				break;
			default:
				break;
		}
	}

	$scope.cspRiskCommit = function(name,phone,idnumber) {
		var total = $scope.score0 + $scope.score1 + $scope.score2 + $scope.score3 + $scope.score4 + $scope.score5 +$scope.score6 + $scope.score7 +$scope.score8 + $scope.score9;
		var nameerror = 0;
		var iderror = 0;
		if(name === undefined || name === "") {
			nameerror = 1;
			document.getElementById('csp_risk_userinfo_left_label_1').style.color = "red";

		}
		if(idnumber === undefined || idnumber === "") {
			iderror = 1;
			document.getElementById('csp_risk_userinfo_right_label_2').style.color = "red";
		}
		else  {
			var idnumjson = {};
			idnumjson.idnumber = idnumber;
			if(!RisklevelService.cspRiskCheckId(idnumjson)) {
				iderror = 1;
				document.getElementById('csp_risk_userinfo_right_label_2').style.color = "red";
			}
		}
		if(nameerror + iderror === 0 ) {
			var riskcode = 0;
			if(total <= 22) {
				riskcode = 1;
			}
			else if(total <= 44) {
				riskcode = 2;
			}
			else if(total <= 66) {
				riskcode = 3;
			}
			else if(total <= 88) {
				riskcode = 4;
			}
			else {
				riskcode = 5;
			}
			var json = {};
			json.name = name;
			json.phone = phone;
			json.idnumber = idnumber;
			json.riskcode = riskcode;
			RisklevelService.cspRiskCommit(json,function(res) {
				if(res.result === "succeed") {
					$scope.riskloadpath = 'tpls/risklevel/risksuccess.html';
					switch (riskcode) {
						case 1:
							$scope.riskkind = "保守型——低风险级别产品";
							$scope.riskcontent = "您的风险承担能力水平比较低，您关注资产的安全性远超于资产的收益性，所以低风险 、高流动性的投资品种比较适合您，这类投资的收益相对偏低。";
							break;
						case 2:
							$scope.riskkind = "稳健型——较低风险级别产品";
							$scope.riskcontent = "您有比较有限的风险承受能力，对投资收益比较敏感，期望通过短期、持续、渐进的投资获得高于定期存款的回报。所以较低等级风险的产品如保本保息的固定收益类，比较适合您，适当回避风险的同时保证收益，跑赢通胀。";
							break;
						case 3:
							$scope.riskkind = "平衡型——中等风险级别产品";
							$scope.riskcontent = "您有一定的风险承受能力，对投资收益比较敏感，期望通过长期且持续的投资获得高于平均水平的回报，通常更注重十年甚至更长期限内的平均收益。所以中等风险收益的投资品种比较适合您，回避风险的同时有一定的收益保证。";
							break;
						case 4:
							$scope.riskkind = "积极型——较高风险级别产品";
							$scope.riskcontent = "您有中高的风险承受能力，愿意承担可预见的投资风险去获取更多的收益，一般倾向于进行中短期投资。所以中高等级的风险收益投资品种比较适合您，以一定的可预见风险换取超额收益。";
							break;
						case 5:
							$scope.riskkind = "激进型——高风险级别产品";
							$scope.riskcontent = "您有较高的风险承受能力，是富有冒险精神的积极型选手。在投资收益波动的情况下，仍然保持积极进取的投资理念。短期内投资收益的下跌被您视为加注投资的利好机会。您适合从事灵活、风险与报酬都比较高的投资，不过要注意不要因一时的高报酬获利而将全部资金投入高风险操作，务必做好风险管理与资金调配工作。";
							break;
						default:
							break;
					}
					$scope.riskstate = 1;
					window.scrollTo(0,0);
				}
				else {
					alert("插入数据库失败")
				}
			})
		}
		else {
			var height = document.getElementById('csp_risk_userinfo_div').offsetTop;
			window.scrollTo(0,height-170);
		}
	}

	$scope.cspRiskNameFocus = function() {
		document.getElementById('csp_risk_userinfo_left_label_1').style.color = "black";
	}

	$scope.cspRiskIdnumberFocus = function() {
		document.getElementById('csp_risk_userinfo_right_label_2').style.color = "black";
	}

	$scope.cspRiskLoad = function() {
		if($scope.riskstate === 0) {
			RisklevelService.cspRiskGetPhone({},function(res) {
				if(res.result === "succeed") {
					$scope.csp_risk_phone = res.data.tel;
					$scope.csp_risk_name  = res.data.name;
					$scope.csp_risk_idnumber = res.data.number;
					if(res.data.name !== "" ) {
						$scope.nameread = true;
					}
					else {
						$scope.nameread = false;
					}
					if(res.data.number !== "") {
						$scope.numberread = true;
					}
					else {
						$scope.numberread = false;
					}
				}
				else {
					window.location.href = "../";
				}
			});
		}
		if($scope.riskstate === 1) {
			document.getElementById('csp_risk_success_kind').innerHTML = $scope.riskkind;
			document.getElementById('csp_risk_success_content').innerHTML = $scope.riskcontent;
		}
	}

	$scope.cspRiskReriskMove = function() {
		document.getElementById('csp_risk_rerisk_label').style.color = "#0d357f";
	}

	$scope.cspRiskReriskOut = function() {
		document.getElementById('csp_risk_rerisk_label').style.color = "rgb(205,127,50)";
	}

	$scope.cspRiskRerisk = function() {
		$scope.score0 = 5;
		$scope.score1 = 5;
		$scope.score2 = 5;
		$scope.score3 = 5;
		$scope.score4 = 5;
		$scope.score5 = 5;
		$scope.score6 = 5;
		$scope.score7 = 5;
		$scope.score8 = 5;
		$scope.score9 = 5;
		$scope.csp_risk_idtype = '1';
		$scope.riskloadpath = 'tpls/risklevel/risklevel.html';
		RisklevelService.cspRiskGetPhone({},function(res) {
			if(res.result === "succeed") {
				$scope.csp_risk_phone = res.phone;
			}
			else {
				window.location.href = "../";
			}
		});
		$scope.riskkind = "";
		$scope.riskcontent = "";
		$scope.riskstate = 0;
	}

	$scope.cspRiskNextMove = function() {
		document.getElementById('csp_risk_next_label').style.color = "#0d357f";
	}

	$scope.cspRiskNextOut = function() {
		document.getElementById('csp_risk_next_label').style.color = "rgb(205,127,50)";
	}
	$scope.cspRiskNext = function() {
		$('#loginModal').remove();
		$state.go('home')
	}

})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
cspCtrls.controller('sendMessageCtrl',
function($scope,$state,$timeout,UserInfoService,customerGroupService,messageService) {
    $scope.allGroup=[];//保存所有的群组信息,包括未分组
    $scope.selectedCustomers=[];//已选择的客户的全部信息
    $scope.allMessage=[];//保存所有的短信信息
    $scope.selectMessage={};//保存当前选中的短信模板
    $scope.editMessage={};//保存当前选中编辑的短信模板
    $scope.selectedMessageIndex=0;//保存当前选中的短信的索引


    $scope.messageLoadPath='';

    $scope.sendingMessage=false;//发送短信中

    $(document).ready(function(){
      //设置头和尾不可见
      document.getElementById('csp_header_containter').style.display = "none";
      document.getElementById('csp_footer').style.display = "none";


      messageService.getMessageType('',function(res){
        if (res.messageType=='editMessage') {//编辑信息
          $scope.messageLoadPath='tpls/sendMessage/manageMessage.html';

        }
        else {
          $scope.messageLoadPath='tpls/sendMessage/sendMessage.html';
          console.log('已选中的人员',customerGroupService.selectedCustomers);
          $scope.getCustomersFromID(customerGroupService.selectedCustomers);
          $scope.getAllGroup();
        }

      });

      $scope.getAllMessage();

    });
    $scope.getAllGroup=function(){
      //获取所有的分组
      customerGroupService.getAllGroup('',function(res){
        if (res==false) {
          return;
        }
        console.log('getAllGroup',res);
        $scope.allGroup=res;
        var ungroupedObj={};
        ungroupedObj.gid=-1;
        ungroupedObj.gname='未分组';
        customerGroupService.getUngroupedAmount('',function(res){
          console.log('getAllGroup',res,res.result==false);
          if (res.result==false) {
            return;
          }
          ungroupedObj.customerAmount=res.customerAmount;
          $scope.allGroup.push(ungroupedObj);

        });

      });
    }

    $scope.getCustomersFromID=function(customerIDs){
      var params={};
      params.customerIDs=customerIDs;
      if(customerIDs.length==0){
        return;
      }
      if(customerIDs.length==1){
        params.single=true;
      }
      customerGroupService.getCustomersFromID(params,function(res){
        if (res.result==false) {
          return;
        }
        $scope.selectedCustomers=res;
      });
    }

    $scope.messageCtrlInit=function(){
      UserInfoService.cspCheckLoginState({},function(result) {
        if(result.result === "succeed") {
          if(result.loginState) {
            UserInfoService.cspCheckAuth({},function(res) {
              if(res.result === 'succeed') {
                $scope.cspCustomerLoadPath = "tpls/customerGroup/cspusers.html";

              }
              else {
                $state.go('usercenter');
              }
            });
          }
          else {
            $('#loginModal').remove();
            $state.go('home');
          }
        }
        else {
          $('#loginModal').remove();
          $state.go('home');
        }
      });
    }

    //在分组权限界面获取Customers,将会直接写入allGroup数组对应的分组中
    $scope.getCustomersToDetail=function(groupid){


      for (var i = 0; i < $scope.allGroup.length; i++) {
        if ($scope.allGroup[i].gid==groupid) {

          if ($scope.allGroup[i].show==true) {
            $scope.allGroup[i].show=false;
            // delete $scope.allGroup[i].customers;
            return;
          }
          $scope.allGroup[i].show=true;//只要点击了就设置为显示了该分组

          break;
        }

      }
      //如果已经获取过数据,则不用再次获得
      if($scope.allGroup[i].haveData)
        return;

      var params={'gid':groupid};
      customerGroupService.getCustomers(params,function(res){
        if (res==false) {
          return;
        }

        for (var i = 0; i < $scope.allGroup.length; i++) {
          if ($scope.allGroup[i].gid==groupid) {
            $scope.allGroup[i].customers=[];
            for (var j = 0; j < res.length; j++) {
              $scope.allGroup[i].customers.push(res[j]);
            }
            $scope.allGroup[i].haveData=true;
            break;

          }
        }

      });
    }

    $scope.overGroup=function(group){

      group.showAdd=true;
    }
    $scope.outGroup=function(group){

      group.showAdd=false;
    }

    $scope.addSelectedGroup=function (groupid,e){
      e.stopPropagation();

      var params={};
      params.gid=groupid;
      console.log(params,groupid);
      customerGroupService.getCustomers(params,function(res){
        if (res.result==false) {
          return;
        }


        for (var i = 0; i < res.length; i++) {
          var repeat=false;
          for (var j = 0; j < $scope.selectedCustomers.length; j++) {
            if ($scope.selectedCustomers[j].customerid==res[i].customerid) {
              repeat=true;
              break;
            }
          }

          if (!repeat) {
            $scope.selectedCustomers.push(res[i]);
          }
        }

      });

    }

    $scope.addSelectedCustomer=function (customer){
      for (var i = 0; i < $scope.selectedCustomers.length; i++) {
        if ($scope.selectedCustomers[i].customerid==customer.customerid) {
          return;
        }
      }
      $scope.selectedCustomers.push(customer);
    }

    $scope.deleteSelectedCustomer=function (customerid){
      for (var i = 0; i < $scope.selectedCustomers.length; i++) {
        if ($scope.selectedCustomers[i].customerid==customerid) {
          $scope.selectedCustomers.splice(i,1);
          return;
        }
      }

    }

    $scope.changeSelectMessage=function(){
    }

    //适合在发送短信界面获取短信模板信息
    $scope.getAllMessage=function (){
      messageService.getAllMessage('',function(res){
        if (res.result==false) {
          return;
        }
        $scope.allMessage=res;
        //如果之前选择了一个短信模板,则直接指向该模板
        if (typeof $scope.selectMessage.id !='undefined') {
          for (var i = 0; i < $scope.allMessage.length; i++) {
            if ($scope.selectMessage.id==$scope.allMessage[i].id) {

              $scope.selectedMessageIndex=i;
              break;
            }
          }
        }
        $scope.allMessage[$scope.selectedMessageIndex].active=true;
        $scope.selectMessage=$scope.allMessage[$scope.selectedMessageIndex];//是引用过去了
        $scope.editMessage=$.extend({},$scope.allMessage[$scope.selectedMessageIndex]);//拷贝当前对象

        console.log('getAllMessage',$scope.selectedMessageIndex,res);

      });
    }

    $scope.sendMessage=function(msg){
      var params={};
      params.tels=[];
      for (var i = 0; i < $scope.selectedCustomers.length; i++) {
        params.tels.push($scope.selectedCustomers[i].tel);
      }
      if (params.tels.length<2) {
        params.single=true;
      }
      params.msgid=msg.msgid;
      console.log('sendMessage2',params,msg);

      messageService.sendMessage(params,function(res){
        if (res.result==false) {
          $scope.showError(res.reason);
          return;
        }
        console.log('sendMessage',res);
      });
    }

    $scope.cancelSend=function(){
      customerGroupService.selectedCustomers=[];
      $scope.selectedCustomers=[];

    }

    $scope.editMessageBtn=function(selectMessage){
      $scope.selectMessage=selectMessage;
      $scope.getAllMessage();

      var params={};
      params.messageType='editMessage';
      messageService.setMessageType(params,function(res){
        if (res.result==false) {
          return;
        }
        $scope.sendingMessage=true;
        $scope.messageLoadPath='tpls/sendMessage/manageMessage.html';
      });
    }

    $scope.clickMessageTemplate=function(message,$event,index){
      console.log('clickMessageTemplate',index);
      $scope.selectedMessageIndex=index;
      $scope.editMessage=$.extend({},message);
      document.getElementById('createMsgBtn').style.display='none';
      document.getElementById('editMsgBtn').style.display='';
      document.getElementById('deleteMsgBtn').style.display='';
      document.getElementById('editMessageHeader').innerHTML='编辑短信模板';
      $('.messagediv').removeClass('active');
      $('.messagediv').slice(index,index+1).addClass('active');
      // $($event.target).parents('tr').addClass('active');

    }

    $scope.createMessage=function(){

      $scope.editMessage={};
      $scope.editMessage.mname='';
      $scope.editMessage.msgid='';
      $scope.editMessage.mcontent='';

      document.getElementById('createMsgBtn').style.display='';
      document.getElementById('editMsgBtn').style.display='none';
      document.getElementById('deleteMsgBtn').style.display='none';
      document.getElementById('editMessageHeader').innerHTML='新建短信模板';

    }

    $scope.saveCreateMessage=function(){

      messageService.saveCreateMessage($scope.editMessage,function(res){
        if (res.result==false) {
          $scope.showError(res.reason);
          return;
        }
        $scope.getAllMessage();
        console.log('saveCreateMessage',res);
      });
    }

    $scope.saveEditMessage=function(){
      messageService.saveEditMessage($scope.editMessage,function(res){
        if (res.result==false) {
          $scope.showError(res.reason);
          return;
        }
        $scope.getAllMessage();

        console.log('saveEditMessage',res);
      });
    }

    $scope.showError=function(reason){
      $('html,body').scrollTop(0); //不带动画

      document.getElementById('errorReason').innerHTML=reason;
      document.getElementById('errorMessage').style.display='';
      if ($scope.timeout) {
        $timeout.cancel($scope.timeout);
      }
      $scope.timeout=$timeout(function () {
        document.getElementById('errorMessage').style.display='none';
      }, 5000);

    }

    $scope.cancelEditMessage=function(){

      document.getElementById('createMsgBtn').style.display='none';
      document.getElementById('editMsgBtn').style.display='';
      document.getElementById('deleteMsgBtn').style.display='';
      document.getElementById('editMessageHeader').innerHTML='编辑短信模板';

      for (var i = 0; i < $scope.allMessage.length; i++) {
        if ($scope.allMessage[i].id==$scope.editMessage.id) {
          $scope.editMessage.msgid=$scope.allMessage[i].msgid;
          $scope.editMessage.mname=$scope.allMessage[i].mname;
          $scope.editMessage.mcontent=$scope.allMessage[i].mcontent;
          break;
        }
      }

    }

    $scope.deleteMessage=function(){
      var params={};
      params.id=$scope.editMessage.id;
      messageService.deleteMessage(params,function(res){
        if (res.result==false) {
          $scope.showError(res.reason);
          return;
        }
        $scope.getAllMessage();
        console.log('deleteMessage',res);
      });
    }

    $scope.returnCustomerGroup=function(){
      $state.go('managecenter');
    }

    $scope.goSendMessage=function(){
      $scope.getAllGroup();

      var params={'messageType':'sendMessage'};

      messageService.setMessageType(params,function(res){
          $scope.messageLoadPath='tpls/sendMessage/sendMessage.html';
        });
    }




})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */

cspCtrls.controller('allProductsCtrl',
function($scope,$state,$http,$timeout,productService,UserInfoService,usercenterService){
   $scope.products=[];// 保存所有产品的数组信息
   $scope.NetAssetValue;
   $scope.allTactics=[];
   $scope.allProRiskLevel=[];
   $scope.allProductSeries =[];

   $scope.currProRiskLevel=[];//当前选择的风险等级
   $scope.currProductSeries=[];//当前选择的产品系列


   //程序不会修改的配置
   $scope.maxPageSize=3;//一次显示的记录数量
   $scope.pageRows=10;//一页显示的记录数量

   //productname:存在且不为空表示搜索产品名称
   //  var option={page:1请求页数,pageRows一页的数量,tacticsID:''请求策略,sortField:''排序默认按照年化收益率排序}
   $scope.filterCondition={ 'pageRows'    :$scope.pageRows,
                            'page'        :1,
                            'tacticsID'   :-1,//表示全部
                            'riskLevelID' :-1,
                            'seriesID'    :-1
                            };
   $scope.searchProductName='';//保存当前筛选的产品名称



   $scope.productAmount=0;//总的记录数量
   $scope.allPage=0;//总页数
   $scope.currentpage=1;//当前页数
   $scope.pageArr=[];
   $scope.showAll=false;

   $scope.getProducts=function(){
     productService.getProducts('',function(res){
       if (res.result===false) {
         console.log(res.reason);
       }
       console.log('getProducts',res);
       for (var i = 0; i < res.length; i++) {
         res[i].releasetime=new Date(res[i].releasetime).Format("yyyy-MM-dd");
         res[i].netdate=new Date(res[i].netdate).Format("yyyy-MM-dd");
         res[i].number=(i+1).toString();

         $scope.getProductLatestNet(res[i].id);
       }
       $scope.products=res;
     });

   }

   $scope.setHeaderName=function(userInfo){
     usercenterService.getUserInfo(userInfo,function(res){
       if(res==false){
         return;
       }
       if(res.conlevel==7||res.conlevel==2||res.conlevel==1)//只有是砖石会员才会显示策略产品
       {
         document.getElementById('product0Btn').style.display='';
         document.getElementById('product0BigBtn').style.display='';
       }
       document.getElementById('header_username').innerHTML=res.tel;
     });
   }

   $scope.overList=function($event){
     $($event.target).addClass("overList");
   }
   $scope.outList=function($event){
     $($event.target).removeClass("overList");
   }

   $scope.getProductAmount=function(condition){
     productService.getProductAmount(condition,function(res){
       if(res.result==false){
         return;
       }
       console.log('getProductAmount',res,condition);

       $scope.productAmount=res.productAmount;
       if(res.productAmount==0){
         document.getElementById('pageList').style.display='none';
         $scope.products=[];
         return;
       }

      document.getElementById('pageList').style.display='';
      $scope.getProductsByFilter(condition);



       $scope.allPage=Math.ceil($scope.productAmount/$scope.pageRows);
       $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);
     });

   }

  $scope.gotoPage=function(pageObj){
    $scope.currentpage=pageObj;
    console.log('$scope.currentpage',$scope.currentpage);
    $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);


    $scope.filterCondition.page=pageObj;
    $scope.getProductsByFilter($scope.filterCondition);
  }

  $scope.goFirstPage=function(){

      $scope.currentpage=1;
      $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);

      $scope.filterCondition.page=1;
      $scope.getProductsByFilter($scope.filterCondition);

  }
  $scope.goLastPage=function(){
    $scope.currentpage=$scope.allPage;
    $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);

    $scope.filterCondition.page=$scope.allPage;
    $scope.getProductsByFilter($scope.filterCondition);

  }

  $scope.goPreviousPage=function(){
    if($scope.currentpage>1)
      $scope.currentpage-=1;
      else {
        $scope.currentpage=1;
      }
      $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);

      $scope.filterCondition.page=$scope.currentpage;
      $scope.getProductsByFilter($scope.filterCondition);
  }

  $scope.goNextPage=function(){
    if($scope.currentpage<$scope.allPage)
      $scope.currentpage+=1;
      else {
        $scope.currentpage=$scope.allPage;
      }
      $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);

      $scope.filterCondition.page=$scope.currentpage;
      $scope.getProductsByFilter($scope.filterCondition);
  }







   $scope.getProductsByPage=function(page){
     $scope.filterCondition.page=page;
     $scope.getProductsByFilter($scope.filterCondition);
   }

   //  var option={page:1请求页数,pageRows一页的数量,tacticsID:''请求策略,sortField:''排序字段,order=true;排序顺序}
   $scope.getProductsByFilter=function(option){

     productService.getProductsByFilterWithLatestNet(option,function(res){
       if (res.result===false) {
         console.log(res.reason);
       }
       console.log('getProductsByFilter',res);
       for (var i = 0; i < res.length; i++) {
         res[i].releasetime=new Date(res[i].releasetime).Format("yyyy-MM-dd");
         res[i].netdate=new Date(res[i].netdate).Format("yyyy-MM-dd");
         res[i].number=(i+1).toString();

        if(typeof res[i].net=='undefined'||res[i].net==null){
          res[i].lastNet='--';
          res[i].accReturnRate='--';
          res[i].yearrateStr='--';

          //添加这些属性是为了排序使用的
          res[i].lastNetValue=0;
          res[i].accReturnRateValue=0;
          res[i].yearrateValue=0;
        }
        else {
          res[i].lastNet=res[i].net.toFixed(3).toString();
          res[i].accReturnRate=((res[i].totalnet-1)*100).toFixed(2)+'%';
          res[i].yearrateStr=(res[i].yearrate*100).toFixed(2)+'%';

          res[i].lastNetValue=res[i].net;
          res[i].accReturnRateValue=res[i].totalnet-1;
          res[i].yearrateValue=res[i].yearrate;
        }
       }
       $scope.products=res;
     });

   }

   $scope.allProductsInit = function(){
     UserInfoService.cspCheckLoginState('', function(res){
       if(res.loginState!==true){
         $('#loginModal').remove();
           $state.go('home');
           return;
       }else {
         console.log('cspCheckLoginState',res.uid);
         $scope.uid=res.uid;
         $scope.setHeaderName(res);
         UserInfoService.cspCheckRiskState({},function(result) {
         if(!(result.result === 'succeed' && result.riskstate === true)) {
             event.preventDefault();// 取消默认跳转行为
             $state.go("risklevel");//跳转风险评测
           }
         });
       }
     });

   }

   $scope.tableOver=function($event){
     console.log($event.target);
     $($event.target).addClass('trOverColor');
   }

   $scope.tableOut=function($event){
     $($event.target).removeClass('trOverColor');
   }

   $scope.getProductLatestNet=function(productID){
     var product={};
     product.productID=productID;

     productService.getProductLatestNet(product,function(res){
       if(res.result===false){
         console.log('getProductLatestNet failed');
         return;
       }

       for (var i = 0; i < $scope.products.length; i++) {
         if($scope.products[i].id==res.proid){
           if(typeof res.net=='undefined'){
             $scope.products[i].lastNet='--';
             $scope.products[i].accReturnRate='--';
             $scope.products[i].yearrate='--';

             //添加这些属性是为了排序使用的
             $scope.products[i].lastNetValue=0;
             $scope.products[i].accReturnRateValue=0;
             $scope.products[i].yearrateValue=0;
           }
           else {
             $scope.products[i].lastNet=res.net.toFixed(3).toString();
             $scope.products[i].accReturnRate=(res.accrate*100).toFixed(2)+'%';
             $scope.products[i].yearrate=(res.yearrate*100).toFixed(2)+'%';

             $scope.products[i].lastNetValue=res.net;
             $scope.products[i].accReturnRateValue=res.accrate;
             $scope.products[i].yearrateValue=res.yearrate;

           }
           break;
         }
       }
     });

   }

   $scope.getNetAssetValue=function(productID,netdate){
     if (typeof productID=='undefined'|| productID==''||
          typeof netdate=='undefined') {
            return;
     }
     var queryNetAssetValu={};
     queryNetAssetValu.productID=productID;
     queryNetAssetValu.netdate=netdate;
     productService.getNetAssetValue(queryNetAssetValu,function(res){
       if(res.result===false){
         console.log('getNetAssetValue failed');
         return;
       }

       for (var i = 0; i < $scope.products.length; i++) {
         if($scope.products[i].id==res.proid){
           if(typeof res.net=='undefined'||res.net==''){
             $scope.products[i].net='--';
           }
           else {
             $scope.products[i].net=res.net.toString();
           }
           break;
         }
       }
     });
   }

   $scope.consultProduct=function(productID){
     var product={};
     product.productID=productID;
     productService.setProductID(product,function(res){
       if(res.result===false){
         console.log('产品界面设置当前productid失败');
       }
       else{
         $scope.$broadcast("userBuyProduct", 'name');
         jQuery('#orderModal').remove();
         jQuery('#allPro_orderModal').modal('show');
       }
     });
   }

   $scope.goProductView =  function(productID){
     console.log('productID',productID);
       var product={};
       product.productID=productID;
       productService.setProductID(product,function(res){
         if(res.result===false){
           console.log('产品界面设置当前productid失败');
         }
         else{
           $state.go('productView');
         }
       });

     }

     //获取风险表
   	$scope.getAllProRiskLevel= function(){
   		productService.getAllProRiskLevel('',function(res){
   			if(res.result===false){
   				console.log('获取所有产品风险等级失败');
   			}else {
   				console.log('获取所有产品风险等级成功',res);
          $scope.allProRiskLevel=res;
   			}
   		});
     }

     //获取系列表
     $scope.getAllProductSeries= function(){
       productService.getAllProductSeries('',function(res){
         if(res.result===false){
           console.log('获取所有产品风险等级失败');
         }else {
           console.log('获取所有产品风险等级成功',res);
          $scope.allProductSeries=res;
         }
       });
     }

     //获取策略表
     $scope.getAllTactics = function(){
       productService.getAllTactics('',function(res){
         if(res.result===false){
           console.log('获取所有产品策略失败');
         }else {
           console.log('获取所有产品策略成功',res);
          $scope.allTactics=res;
         }
       });
     }

     	$scope.goSpecifyTactics=function(tacticsID,$event){
        delete $scope.filterCondition.productname;
        $scope.searchProductName='';

        $("table#allProductsTable i").hide();
        $("table#allProductsTable i").removeClass("ascending");
        $("table#allProductsTable i").removeClass("descending");

        $("#tacticsList .item").removeClass("active");
        $($event.target).addClass("active");


        //  var option={page:1请求页数,pageRows一页的数量,tacticsID:''请求策略,sortField:''排序字段,order=true;排序顺序}
        $scope.filterCondition.tacticsID=tacticsID;
        $scope.filterCondition.page=1;
        $scope.currentpage=1;

        $scope.getProductAmount($scope.filterCondition);


      }

      $scope.goSpecifyRiskLevel=function(riskLevelID,$event){
        delete $scope.filterCondition.productname;
        $scope.searchProductName='';

        $("table#allProductsTable i").hide();
        $("table#allProductsTable i").removeClass("ascending");
        $("table#allProductsTable i").removeClass("descending");

        $("#riskLevelDiv .item").removeClass("active");
        $($event.target).addClass("active");

        $scope.filterCondition.riskLevelID=riskLevelID;
        $scope.filterCondition.page=1;
        $scope.currentpage=1;
        console.log('goSpecifyRiskLevel',$scope.filterCondition);
        $scope.getProductAmount($scope.filterCondition);


      }

      $scope.goSpecifySeries=function(seriesID,$event){
        delete $scope.filterCondition.productname;
        $scope.searchProductName='';

        $("table#allProductsTable i").hide();
        $("table#allProductsTable i").removeClass("ascending");
        $("table#allProductsTable i").removeClass("descending");

        $("div#seriesList .item").removeClass("active");
        $($event.target).addClass("active");

        $scope.filterCondition.seriesID=seriesID;
        $scope.filterCondition.page=1;
        $scope.currentpage=1;
        $scope.getProductAmount($scope.filterCondition);

      }
      $scope.searchProduct=function(){
        if ($scope.searchProductName==='') {
          return;
        }
        $scope.filterCondition.productname=$scope.searchProductName;
        console.log('searchProduct',$scope.filterCondition);
        $scope.getProductAmount($scope.filterCondition);
      }

    $scope.sortProductTable=function($event){
      var icon,sortField,className;

      if($event.target.tagName=='I'){
        icon=$($event.target);
        className=$event.target.className;
        sortField=$($event.target).parent(':first').attr("data-sort");
        console.log('$event.target.tagName==I',icon,className,sortField);
      }
      else {
        icon=$($event.target).children('i:first');
        sortField=$event.target.getAttribute("data-sort");
        className=icon[0].className;
        console.log(icon,className,sortField);
      }


      $("table#allProductsTable i").hide();
      $("table#allProductsTable i").removeClass("ascending");
      $("table#allProductsTable i").removeClass("descending");

      //如果包含降序,则升序
      if(className.indexOf('descending')!=-1){
        icon.addClass("ascending");
        $scope.products.sort(function(x,y){
          if(typeof y[sortField]=='number')
            return y[sortField]<x[sortField];
          return x[sortField].localeCompare(y[sortField]);
        });
      }else {
        icon.addClass("descending");
        $scope.products.sort(function(x,y){
          if(typeof y[sortField]=='number')
            return y[sortField]>x[sortField];
          return y[sortField]. localeCompare(x[sortField]);
        });
      }
      icon.show();
    }

  $scope.showAllTactics=function(){
    if(!$scope.showAll){
      document.getElementById('tacticsDiv').style.height='auto';
      document.getElementById('tacticsBtn').innerHTML='收起>';
      $scope.showAll=true;
    }else {
      document.getElementById('tacticsDiv').style.height='38px';
      document.getElementById('tacticsBtn').innerHTML='更多>';
      $scope.showAll=false;
    }

  }

  $scope.showAllRiskLevel=function(){
    if(!$scope.showAll){
      document.getElementById('riskLevelDiv').style.height='auto';
      document.getElementById('riskLevelBtn').innerHTML='收起>';
      $scope.showAll=true;
    }else {
      document.getElementById('riskLevelDiv').style.height='38px';
      document.getElementById('riskLevelBtn').innerHTML='更多>';
      $scope.showAll=false;
    }

  }

  $scope.showAllSeries=function(){
    if(!$scope.showAll){
      document.getElementById('seriesDiv').style.height='auto';
      document.getElementById('seriesBtn').innerHTML='收起>';
      $scope.showAll=true;
    }else {
      document.getElementById('seriesDiv').style.height='38px';
      document.getElementById('seriesBtn').innerHTML='更多>';
      $scope.showAll=false;
    }

  }





   jQuery(document).ready(function(){
     console.log('进入了所有产品中心');
     $('html,body').scrollTop(0); //不带动画

     var warch1=$scope.$watch('allTactics',function(newValue,oldValue,scope){
          $timeout(function(){
            if (40<$('#tacticsList').height()) {
              document.getElementById("tacticsBtn").style.display='';
            }else {
              document.getElementById("tacticsBtn").style.display='none';
            }
            warch1();
          },50);
       console.log('watch',$('#tacticsList').height());
     },true);

     var warch2=$scope.$watch('allProRiskLevel',function(newValue,oldValue,scope){
          $timeout(function(){
            if (40<$('#riskLevelList').height()) {
              document.getElementById("riskLevelBtn").style.display='';
            }else {
              document.getElementById("riskLevelBtn").style.display='none';
            }
            warch2();
          },50);
       console.log('watch',$('#riskLevelList').height());
     },true);

     var warch3=$scope.$watch('allProductSeries',function(newValue,oldValue,scope){
          $timeout(function(){
            if (40<$('#seriesList').height()) {
              document.getElementById("seriesBtn").style.display='';
            }else {
              document.getElementById("seriesBtn").style.display='none';
            }
            warch3();
          },50);
       console.log('watch',$('#seriesList').height());
     },true);
     $(window).resize(function() {
       if (40<$('#tacticsList').height()) {
         document.getElementById("tacticsBtn").style.display='';
       }else {
         document.getElementById("tacticsBtn").style.display='none';
       }

       if (40<$('#riskLevelList').height()) {
         document.getElementById("riskLevelBtn").style.display='';
       }else {
         document.getElementById("riskLevelBtn").style.display='none';
       }

       if (40<$('#seriesList').height()) {
         document.getElementById("seriesBtn").style.display='';
       }else {
         document.getElementById("seriesBtn").style.display='none';
       }
     });





    // var elemToCheck = document.getElementById("tacticsDiv");
    //    if(elemToCheck.addEventListener){ // Firefox, Opera and Safari
    //        elemToCheck.addEventListener('DOMAttrModified', OnAttrModified, false);
    //    } else if(elemToCheck.attachEvent){  // Internet Explorer
    //        elemToCheck.attachEvent('onpropertychange', OnAttrModified);
    //    }

    document.getElementById('csp_header_containter').style.display = "block";
		document.getElementById('csp_footer').style.display = "block";
    document.getElementById('homeSpaceDiv_37px').style.display = "block";


     document.getElementById('csp_header_comment_label').className = "csp_header_label";
     document.getElementById('csp_header_home_label').className = "csp_header_label";
     document.getElementById('csp_header_product0_label').className = "csp_header_label";
     document.getElementById('csp_header_product_label').className = "csp_header_label csp_header_active_label";
     document.getElementById('csp_header_comment_label2').className = "csp_header_label2";
     document.getElementById('csp_header_home_label2').className = "csp_header_label2";
     document.getElementById('csp_header_product0_label2').className = "csp_header_label2";
     document.getElementById('csp_header_product_label2').className = "csp_header_label2 csp_header_active_label2";
     var height = document.documentElement.clientHeight * 0.8;
     height = height+ "px";
     document.getElementById('productsContents').style.minHeight = height;


     $scope.getAllTactics();
     $scope.getAllProRiskLevel();
     $scope.getAllProductSeries();


     $scope.currentpage=1;
     $scope.getProductAmount($scope.filterCondition);



   });

 });

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */

cspCtrls.controller('allProductsCtrl0',
function($scope,$state,$http,$timeout,productService0,UserInfoService,usercenterService){
   $scope.products={};// 保存所有产品的数组信息
   $scope.NetAssetValue;
   $scope.allTactics=[];
   $scope.allProRiskLevel=[];
   $scope.allProductSeries =[];


   $scope.currProRiskLevel=[];//当前选择的风险等级
   $scope.currProductSeries=[];//当前选择的产品系列

  //  $scope.currTactics='';//当前策略id

   //程序不会修改的配置
   $scope.maxPageSize=3;//一次显示的记录数量
   $scope.pageRows=10;//一页显示的记录数量

   //  var option={page:1请求页数,pageRows一页的数量,tacticsID:''请求策略,sortField:''排序字段,order=true;排序顺序}
   $scope.filterCondition={ 'pageRows'    :$scope.pageRows,
                            'page'        :1,
                            'tacticsID'   :-1,//表示全部
                            'riskLevelID' :-1,
                            'seriesID'    :-1};
   $scope.searchProductName='';//保存当前筛选的产品名称


   $scope.productAmount=0;//总的记录数量
   $scope.allPage=0;//总页数
   $scope.currentpage=1;//当前页数
   $scope.pageArr=[];
   $scope.showAll=false;

   $scope.getProducts=function(){

     productService0.getProducts('',function(res){
       if (res.result===false) {
         console.log(res.reason);
       }
       console.log('getProducts',res);
       for (var i = 0; i < res.length; i++) {
         res[i].releasetime=new Date(res[i].releasetime).Format("yyyy-MM-dd");
         res[i].netdate=new Date(res[i].netdate).Format("yyyy-MM-dd");
         res[i].number=(i+1).toString();

         $scope.getProductLatestNet(res[i].id);
       }
       $scope.products=res;
     });

   }

   $scope.setHeaderName=function(userInfo){
     usercenterService.getUserInfo(userInfo,function(res){
       if(res==false){
         return;
       }
       if(res.conlevel==7||res.conlevel==2||res.conlevel==1)//只有是砖石会员才会显示策略产品
       {
         document.getElementById('product0Btn').style.display='';
         document.getElementById('product0BigBtn').style.display='';
       }
       else {
         $('#loginModal').remove();
         $state.go('home');
       }
       document.getElementById('header_username').innerHTML=res.tel;
     });
   }

   $scope.overList=function($event){
     $($event.target).addClass("overList");
   }
   $scope.outList=function($event){
     $($event.target).removeClass("overList");
   }

   $scope.getProductAmount=function(condition){
     productService0.getProductAmount(condition,function(res){
       if(res.result==false){
         return;
       }
       console.log('getProductAmount',res);

       $scope.productAmount=res.productAmount;
       if(res.productAmount==0){
         document.getElementById('pageList').style.display='none';
         $scope.products=[];
         return;
       }

      document.getElementById('pageList').style.display='';
      $scope.getProductsByFilter(condition);


       $scope.allPage=Math.ceil($scope.productAmount/$scope.pageRows);
       $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);
     });

   }

  $scope.gotoPage=function(pageObj){
    $scope.currentpage=pageObj;
    console.log('$scope.currentpage',$scope.currentpage);
    $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);

    $scope.filterCondition.page=pageObj;
    $scope.getProductsByFilter($scope.filterCondition);
  }

  $scope.goFirstPage=function(){

      $scope.currentpage=1;
      $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);

      $scope.filterCondition.page=1;
      $scope.getProductsByFilter($scope.filterCondition);
  }
  $scope.goLastPage=function(){
    $scope.currentpage=$scope.allPage;
    $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);

    $scope.filterCondition.page=$scope.allPage;
    $scope.getProductsByFilter($scope.filterCondition);
  }

  $scope.goPreviousPage=function(){
    if($scope.currentpage>1)
      $scope.currentpage-=1;
      else {
        $scope.currentpage=1;
      }
      $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);

      $scope.filterCondition.page=$scope.currentpage;
      $scope.getProductsByFilter($scope.filterCondition);
  }
  $scope.goNextPage=function(){
    if($scope.currentpage<$scope.allPage)
      $scope.currentpage+=1;
      else {
        $scope.currentpage=$scope.allPage;
      }
      $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);

      $scope.filterCondition.page=$scope.currentpage;
      $scope.getProductsByFilter($scope.filterCondition);
  }



   //分页算法
  var calculateIndexes = function (current, length, displayLength) {
    var indexes = [];
    var start = Math.round(current - displayLength / 2);
    var end =   Math.round(current + displayLength / 2);
    console.log('start',start,'end',end);
    if (start < 1) {
        start = 1;
    }
    if (end !=start+displayLength-1) {
        end = start+displayLength - 1 ;
    }
    if(end>length)
      end=length;

    if(end-displayLength+1<start){
      start=end-displayLength+1>0?end-displayLength+1:1;
    }

    for (var i = start; i <= end; i++) {
      var obj={};
      obj.page=i;
      if (i==current) {
        obj.select=true;
      }else {
        obj.select=false;
      }
      indexes.push(obj);
    }
    console.log(indexes);
    return indexes;
    }



   $scope.getProductsByPage=function(page){
     $scope.filterCondition.page=page;
     $scope.getProductsByFilter($scope.filterCondition);
   }

   //  var option={page:1请求页数,pageRows一页的数量,tacticsID:''请求策略,sortField:''排序字段,order=true;排序顺序}
   $scope.getProductsByFilter=function(option){

     productService0.getProductsByFilterWithLatestNet(option,function(res){
       if (res.result===false) {
         console.log(res.reason);
       }
       console.log('getProducts',res);
       for (var i = 0; i < res.length; i++) {
         res[i].releasetime=new Date(res[i].releasetime).Format("yyyy-MM-dd");
         res[i].netdate=new Date(res[i].netdate).Format("yyyy-MM-dd");
         res[i].number=(i+1).toString();
         res[i].lastNet='--';

        if(typeof res[i].net=='undefined'||res[i].net==null){
          res[i].lastNet='--';
          res[i].accReturnRate='--';
          res[i].yearrateStr='--';

          //添加这些属性是为了排序使用的
          res[i].lastNetValue=0;
          res[i].accReturnRateValue=0;
          res[i].yearrateValue=0;
        }
        else {
          res[i].lastNet=res[i].net.toFixed(3).toString();
          res[i].accReturnRate=((res[i].totalnet-1)*100).toFixed(2)+'%';
          res[i].yearrateStr=(res[i].yearrate*100).toFixed(2)+'%';

          res[i].lastNetValue=res[i].net;
          res[i].accReturnRateValue=res[i].totalnet-1;
          res[i].yearrateValue=res[i].yearrate;
        }

       }
       $scope.products=res;
     });

   }

   $scope.allProductsInit = function(){
     UserInfoService.cspCheckLoginState('', function(res){
       if(res.loginState!==true){
         $('#loginModal').remove();
           $state.go('home');
           return;
       }else {
         console.log('cspCheckLoginState',res.uid);
         $scope.uid=res.uid;
         $scope.setHeaderName(res);
         UserInfoService.cspCheckRiskState({},function(result) {
         if(!(result.result === 'succeed' && result.riskstate === true)) {
             event.preventDefault();// 取消默认跳转行为
             $state.go("risklevel");//跳转风险评测
           }
         });
       }
     });

   }

   $scope.tableOver=function($event){
     console.log($event.target);
     $($event.target).addClass('trOverColor');
   }

   $scope.tableOut=function($event){
     $($event.target).removeClass('trOverColor');
   }

   $scope.getProductLatestNet=function(productID){
     var product={};
     product.productID=productID;

     productService0.getProductLatestNet(product,function(res){
       if(res.result===false){
         console.log('getProductLatestNet failed');
         return;
       }

       for (var i = 0; i < $scope.products.length; i++) {
         if($scope.products[i].id==res.proid){
           if(typeof res.net=='undefined'){
             $scope.products[i].lastNet='--';
             $scope.products[i].accReturnRate='--';
             $scope.products[i].yearrate='--';

             //添加这些属性是为了排序使用的
             $scope.products[i].lastNetValue=0;
             $scope.products[i].accReturnRateValue=0;
             $scope.products[i].yearrateValue=0;
           }
           else {
             $scope.products[i].lastNet=res.net.toFixed(3).toString();
             $scope.products[i].accReturnRate=(res.accrate*100).toFixed(2)+'%';
             $scope.products[i].yearrate=(res.yearrate*100).toFixed(2)+'%';

             $scope.products[i].lastNetValue=res.net;
             $scope.products[i].accReturnRateValue=res.accrate;
             $scope.products[i].yearrateValue=res.yearrate;

           }
           break;
         }
       }
     });

   }

   $scope.getNetAssetValue=function(productID,netdate){
     if (typeof productID=='undefined'|| productID==''||
          typeof netdate=='undefined') {
            return;
     }
     var queryNetAssetValu={};
     queryNetAssetValu.productID=productID;
     queryNetAssetValu.netdate=netdate;
     productService0.getNetAssetValue(queryNetAssetValu,function(res){
       if(res.result===false){
         console.log('getNetAssetValue failed');
         return;
       }

       for (var i = 0; i < $scope.products.length; i++) {
         if($scope.products[i].id==res.proid){
           if(typeof res.net=='undefined'||res.net==''){
             $scope.products[i].net='--';
           }
           else {
             $scope.products[i].net=res.net.toString();
           }
           break;
         }
       }


     });

   }

   $scope.consultProduct=function(productID){
     var product={};
     product.productID=productID;
     productService.setProductID(product,function(res){
       if(res.result===false){
         console.log('产品界面设置当前productid失败');
       }
       else{
         $scope.$broadcast("userBuyProduct", 'name');
         jQuery('#orderModal').modal('show');
       }
     });
   }

   $scope.goProductView =  function(productID){
     console.log('productID',productID);
       var product={};
       product.productID=productID;
       productService0.setProductID(product,function(res){
         if(res.result===false){
           console.log('产品界面设置当前productid失败');
         }
         else{
           $state.go('productView0');
         }
       });

     }
     //获取风险表
   	$scope.getAllProRiskLevel= function(){
   		productService0.getAllProRiskLevel('',function(res){
   			if(res.result===false){
   				console.log('获取所有产品风险等级失败');
   			}else {
   				console.log('获取所有产品风险等级成功',res);
          $scope.allProRiskLevel=res;
   			}
   		});
     }

     //获取系列表
     $scope.getAllProductSeries= function(){
       productService0.getAllProductSeries('',function(res){
         if(res.result===false){
           console.log('获取所有产品风险等级失败');
         }else {
           console.log('获取所有产品风险等级成功',res);
          $scope.allProductSeries=res;
         }
       });
     }

     //获取策略表
   	$scope.getAllTactics = function(){
   		productService0.getAllTactics('',function(res){
   			if(res.result===false){
   				console.log('获取所有产品策略失败');
   			}else {
   				console.log('获取所有产品策略成功',res);
          $scope.allTactics=res;
   			}
   		});
     }

     	$scope.goSpecifyTactics=function(tacticsID,$event){
        delete $scope.filterCondition.productname;
        $scope.searchProductName='';

        $("table#allProductsTable i").hide();
        $("table#allProductsTable i").removeClass("ascending");
        $("table#allProductsTable i").removeClass("descending");

        $("div#tacticsList .item").removeClass("active");
        $($event.target).addClass("active");

        //  var option={page:1请求页数,pageRows一页的数量,tacticsID:''请求策略,sortField:''排序字段,order=true;排序顺序}
        $scope.filterCondition.tacticsID=tacticsID;
        $scope.filterCondition.page=1;
        $scope.currentpage=1;

        $scope.getProductAmount($scope.filterCondition);
      }

      $scope.goSpecifyRiskLevel=function(riskLevelID,$event){
        delete $scope.filterCondition.productname;
        $scope.searchProductName='';

        $("table#allProductsTable i").hide();
        $("table#allProductsTable i").removeClass("ascending");
        $("table#allProductsTable i").removeClass("descending");

        $("#riskLevelDiv .item").removeClass("active");
        $($event.target).addClass("active");

        $scope.filterCondition.riskLevelID=riskLevelID;
        $scope.filterCondition.page=1;
        $scope.currentpage=1;
        $scope.getProductAmount($scope.filterCondition);


      }

      $scope.goSpecifySeries=function(seriesID,$event){
        delete $scope.filterCondition.productname;
        $scope.searchProductName='';

        $("table#allProductsTable i").hide();
        $("table#allProductsTable i").removeClass("ascending");
        $("table#allProductsTable i").removeClass("descending");

        $("div#seriesList .item").removeClass("active");
        $($event.target).addClass("active");

        $scope.filterCondition.seriesID=seriesID;
        $scope.filterCondition.page=1;
        $scope.currentpage=1;
        $scope.getProductAmount($scope.filterCondition);

      }

      $scope.searchProduct=function(){
        if ($scope.searchProductName==='') {
          return;
        }
        $scope.filterCondition.productname=$scope.searchProductName;
        console.log('searchProduct',$scope.filterCondition);
        $scope.getProductAmount($scope.filterCondition);
      }

    $scope.sortProductTable=function($event){
      var icon,sortField,className;

      if($event.target.tagName=='I'){
        icon=$($event.target);
        className=$event.target.className;
        sortField=$($event.target).parent(':first').attr("data-sort");
        console.log('$event.target.tagName==I',icon,className,sortField);
      }
      else {
        icon=$($event.target).children('i:first');
        sortField=$event.target.getAttribute("data-sort");
        className=icon[0].className;
        console.log(icon,className,sortField);
      }

      $("table#allProductsTable i").hide();
      $("table#allProductsTable i").removeClass("ascending");
      $("table#allProductsTable i").removeClass("descending");

      //如果包含降序,则升序
      if(className.indexOf('descending')!=-1){
        icon.addClass("ascending");
        $scope.products.sort(function(x,y){
          if(typeof y[sortField]=='number')
            return y[sortField]>x[sortField];
          return x[sortField].localeCompare(y[sortField]);
        });
      }else {
        icon.addClass("descending");
        $scope.products.sort(function(x,y){

          if(typeof y[sortField]=='number')
            return y[sortField]<x[sortField];
          return y[sortField]. localeCompare(x[sortField]);
        });
      }
      icon.show();
    }

    $scope.showAllTactics=function(){
      if(!$scope.showAll){
        document.getElementById('tacticsDiv').style.height='auto';
        document.getElementById('tacticsBtn').innerHTML='收起>';
        $scope.showAll=true;
      }else {
        document.getElementById('tacticsDiv').style.height='27px';
        document.getElementById('tacticsBtn').innerHTML='更多>';
        $scope.showAll=false;
      }

    }

    $scope.showAllRiskLevel=function(){
      if(!$scope.showAll){
        document.getElementById('riskLevelDiv').style.height='auto';
        document.getElementById('riskLevelBtn').innerHTML='收起>';
        $scope.showAll=true;
      }else {
        document.getElementById('riskLevelDiv').style.height='27px';
        document.getElementById('riskLevelBtn').innerHTML='更多>';
        $scope.showAll=false;
      }

    }

    $scope.showAllSeries=function(){
      if(!$scope.showAll){
        document.getElementById('seriesDiv').style.height='auto';
        document.getElementById('seriesBtn').innerHTML='收起>';
        $scope.showAll=true;
      }else {
        document.getElementById('seriesDiv').style.height='27px';
        document.getElementById('seriesBtn').innerHTML='更多>';
        $scope.showAll=false;
      }

    }

   jQuery(document).ready(function(){
     console.log('进入了所有产品中心');
     $('html,body').scrollTop(0); //不带动画

     var warch1=$scope.$watch('allTactics',function(newValue,oldValue,scope){
          $timeout(function(){
            if (40<$('#tacticsList').height()) {
              document.getElementById("tacticsBtn").style.display='';
            }else {
              document.getElementById("tacticsBtn").style.display='none';
            }
            warch1();
          },50);
       console.log('watch',$('#tacticsList').height());
     },true);

     var warch2=$scope.$watch('allProRiskLevel',function(newValue,oldValue,scope){
          $timeout(function(){
            if (40<$('#riskLevelList').height()) {
              document.getElementById("riskLevelBtn").style.display='';
            }else {
              document.getElementById("riskLevelBtn").style.display='none';
            }
            warch2();
          },50);
       console.log('watch',$('#riskLevelList').height());
     },true);

     var warch3=$scope.$watch('allProductSeries',function(newValue,oldValue,scope){
          $timeout(function(){
            if (40<$('#seriesList').height()) {
              document.getElementById("seriesBtn").style.display='';
            }else {
              document.getElementById("seriesBtn").style.display='none';
            }
            warch3();
          },50);
       console.log('watch',$('#seriesList').height());
     },true);
     $(window).resize(function() {
       if (40<$('#tacticsList').height()) {
         document.getElementById("tacticsBtn").style.display='';
       }else {
         document.getElementById("tacticsBtn").style.display='none';
       }

       if (40<$('#riskLevelList').height()) {
         document.getElementById("riskLevelBtn").style.display='';
       }else {
         document.getElementById("riskLevelBtn").style.display='none';
       }

       if (40<$('#seriesList').height()) {
         document.getElementById("seriesBtn").style.display='';
       }else {
         document.getElementById("seriesBtn").style.display='none';
       }
     });


     document.getElementById('homeSpaceDiv_37px').style.display = "block";
     document.getElementById('csp_header_containter').style.display = "block";
 		 document.getElementById('csp_footer').style.display = "block";
     document.getElementById('csp_header_comment_label').className = "csp_header_label";
     document.getElementById('csp_header_home_label').className = "csp_header_label";
     document.getElementById('csp_header_product_label').className = "csp_header_label";
     document.getElementById('csp_header_product0_label').className = "csp_header_label csp_header_active_label";

     document.getElementById('csp_header_comment_label2').className = "csp_header_label2";
     document.getElementById('csp_header_home_label2').className = "csp_header_label2";
     document.getElementById('csp_header_product_label2').className = "csp_header_label2";
     document.getElementById('csp_header_product0_label2').className = "csp_header_label2 csp_header_active_label2";


     var height = document.documentElement.clientHeight * 0.8;
     height = height+ "px";
     document.getElementById('productsContents').style.minHeight = height;


     $scope.getAllTactics();
     $scope.getAllProRiskLevel();
     $scope.getAllProductSeries();

     $scope.currentpage=1;
     $scope.getProductAmount($scope.currTactics);


   });

 });

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
 cspCtrls.controller('tradeTeamManageCtrl',
 function($scope,$state,allocateStockService) {



   //---------------------需要的初始化变量------------

    $scope.currentSelectTrid = '';
    $scope.currentTridTeam = '';
    $scope.currentSelectTridName = '';
      $scope.editGid = ''
      $scope.delGid = ''
      $scope.tridUnitHeaverBp = 0;
      $scope.tridUnitValue = 0;
    //新建小组时选择的交易员列表
    $scope.selectedTraders = [];
    //新建小组时选择的小组组长
    $scope.selectedLead = [];
    //新建小组时的小组名称
    $scope.teamName = '';
    //不同页面的标志 0表示traderTeamManage页面，1表示新建小组页面，
    $scope.status = 0;
   //---------------------需要的初始化变量------------


   $scope.allocateStockCtrlInit = function(){
     document.getElementById('csp_header_containter').style.display = "none";
     document.getElementById('csp_footer').style.display = "none";
     document.getElementById('homeSpaceDiv_37px').style.display = "none";

     window.scrollTo(0,0);


   }

// 初始化页面
$(document).ready(function(){

      $scope.cspTradeTeamManageLoadPath = 'tpls/allocateStock/tradeTeamManage.html'
      $scope.status  = 0;
})


$scope.cspTradeTeamManageLoadReady = function(){
  if(!($scope.status)){
    // 获取该登录maid下的交易单元
         var a= {maid:''};
         a.maid = 1;
         $scope.editGid = '';
         if($scope.currentSelectTrid){
           $('.js_trid').text($scope.currentSelectTridName)
         }

         allocateStockService.getModel(a, function(res){
           $scope.model = res;

           //  该页面时下拉框的初始化
                $('.js-trid').dropdown({
                    onChange: function(value, text, $choice){

                      //
                       $scope.$apply(function(){
                         $scope.currentSelectTrid = value.split('(')[1].replace(')', '');
                         $scope.currentSelectTridName = value;
                       })

                       console.log("trid-changed:", value);
                       console.log("$scope.currentSelectTrid:", $scope.currentSelectTrid);


                        //
                        // $scope.currentSelectTrid = value.split('(')[1].replace(')', '');
                        //  jQuery(".js-update-view").addClass("active")
                        //  setTimeout($scope.refreshTeam(), 1000);
                        // console.log("trid-changed:", value);
                    },
                    on: 'hover'
                })
           console.log("99999",res)
         })
  }
  else if ($scope.status == 1) {
    // 获取该登录maid下的交易单元
         var a= {maid:''};
         a.maid = 1;

         allocateStockService.getModel(a, function(res){
           $scope.model = res;
           //  该页面时下拉框的初始化
                $('.js-trid-add-new-team').dropdown({
                    onChange: function(value, text, $choice){

                       //
                        $scope.$apply(function(){
                          $scope.currentTridTeam = value.split('(')[1].replace(')', '');
                        })

                        console.log("trid-changed:", value);
                        console.log("$scope.currentTridTeam:", $scope.currentTridTeam);
                    },
                    on: 'hover'
                })

         })

  }
}





   //刷新功能
   $scope.refreshTeam = function(){
     if($scope.currentSelectTrid){
       jQuery(".js-update-view").addClass("active")

       setTimeout($scope.teamsInfo(), 1000);
     }

   }


//新建小组按钮
$scope.addNewTeam = function(){
  $scope.currentTridTeam = '';
  $scope.selectedTraders = [];
  $scope.selectedLead = [];
  $scope.cspTradeTeamManageLoadPath = 'tpls/allocateStock/addNewTeam.html'
  $scope.status  = 1;


}

// 修改按钮

$scope.editTeam = function(gid,gname){
  var gid = gid;
  var gname = gname;
  $scope.editGid = gid;
  console.log('uuuuuuuuuu',gid,gname);
  $scope.teamName = gname;
  $scope.cspTradeTeamManageLoadPath = 'tpls/allocateStock/editTeam.html';
  $scope.status  = 3;
 $scope.getTradersForEdit($scope.currentSelectTrid, gid);
}




//获取交易单元下未分组的交易员信息
$scope.getTradersNotInTeams = function(){
   console.log("$scope.currentTridTeam",$scope.currentTridTeam)
   if($scope.currentTridTeam){
     var a = {trid:''};
     a.trid = $scope.currentTridTeam;
     console.log("$scope.currentTridTeambbbbb",$scope.currentTridTeam)
     allocateStockService.getTradersNotInTeams(a, function(res){
       $scope.traders = res;
       jQuery(".js-update-view").removeClass("active")
       console.log("99999",res)
     })
   }

}

//获取交易单元下未分组以及指定小组的成员信息
$scope.getTradersForEdit = function(currentSelectTrid, gid){
   $scope.selectedTraders = [];
   $scope.selectedLead = []
   if(currentSelectTrid){
     var a = {trid:'',gid:''};
     a.trid = currentSelectTrid;
     a.gid = gid;


     allocateStockService.getTradersForEdit(a, function(res){
       $scope.traders = res;
       var b = {gid:''};
       b.gid = a.gid;
       allocateStockService.getTeamTraders(b, function(res){

         for(var i= 0; i<res.length;i++){
             $scope.selectedTraders.push(res[i].traderid)

             if(res[i].leader==1){
                 $scope.selectedLead.push(res[i].traderid) ;
             }
         }
       })

     })
   }

}
//获取交易单元下的小组详细信息
  $scope.teamsInfo = function(){
    console.log("$scope.currentSelectTrid",$scope.currentSelectTrid);
     jQuery(".js-update-view").removeClass("active")
    if($scope.currentSelectTrid){
      var a = {trid:''};
      a.trid = $scope.currentSelectTrid;

      allocateStockService.teamsInfo(a, function(res){
        $scope.teams = res;
        $scope.tridUnitHeaverBp = 0;
        for(var i=0;i<res.length;i++){
          $scope.tridUnitHeaverBp = $scope.tridUnitHeaverBp+res[i].bp_max
        }
        console.log("99999",res)
      })
    }
  }

//监听
$scope.$watch('currentTridTeam',function(){

  $scope.selectedTraders = [];
  $scope.selectedLead = [];
  $scope.teamName = '';

  $scope.getTradersNotInTeams();
})

//监听
$scope.$watch('currentSelectTrid',function(){

  $scope.selectedTraders = [];
  $scope.selectedLead = [];
  $scope.teamName = '';

  $scope.teamsInfo();
})

//选择该traderid的交易员作为小组成员
$scope.isChecked = function(traderid){
    return $scope.selectedTraders.indexOf(traderid) >= 0 ;
} ;
$scope.updateSelection = function($event,traderid){
    var checkbox = $event.target ;
    var checked = checkbox.checked ;
    if(checked){
        $scope.selectedTraders.push(traderid) ;
    }else{
        var idx = $scope.selectedTraders.indexOf(traderid) ;
        $scope.selectedTraders.splice(idx,1) ;
    }
} ;

//选择该traderid的交易员作为小组组长


  $scope.isLeaderChecked = function(traderid){
    return $scope.selectedLead.indexOf(traderid) >= 0 ;
  }
  $scope.updateSelectionLeader = function($event,traderid){
    var checkbox = $event.target ;
    var checked = checkbox.checked ;
    if(checked){
        $scope.selectedLead.push(traderid) ;
    }else{
        var idx = $scope.selectedLead.indexOf(traderid) ;
        $scope.selectedLead.splice(idx,1) ;
    }
  }

//取消新建小组并返回
$scope.noCreateandBack = function(){
  $scope.currentTridTeam = '';
  $scope.selectedTraders = [];
  $scope.selectedLead = [];
  $scope.cspTradeTeamManageLoadPath = 'tpls/allocateStock/tradeTeamManage.html';
  $scope.status = 0;


}
//确定编辑按钮{

  $scope.editTeamConfirm = function(teamName){
    console.log("teamName",teamName)
    if(!(teamName)){
      $('.creat_team_tips').css("display","block");
      $scope.creatTeamTips = '请输入小组名称'
         setTimeout(function(){
             $scope.creatTeamTips = '';
             $('.creat_team_tips').css("display","none");
         }, 1000);
    }else if(!($scope.selectedTraders.length)){
      $('.creat_team_tips').css("display","block");
      $scope.creatTeamTips = '请选择小组成员'
         setTimeout(function(){
             $scope.creatTeamTips = '';
             $('.creat_team_tips').css("display","none");
         }, 1000);

    }else if (!($scope.selectedLead.length)) {
      $('.creat_team_tips').css("display","block");
      $scope.creatTeamTips = '请为该小组选择组长'
         setTimeout(function(){
             $scope.creatTeamTips = '';
             $('.creat_team_tips').css("display","none");
         }, 1000);
    }else if ($scope.selectedLead.length>1) {

      $('.creat_team_tips').css("display","block");
      $scope.creatTeamTips = '每个小组只能选一人为小组组长'
         setTimeout(function(){
             $scope.creatTeamTips = '';
             $('.creat_team_tips').css("display","none");
         }, 1000);
    }else if( $scope.selectedTraders.indexOf($scope.selectedLead[0])<0){
      $('.creat_team_tips').css("display","block");
      $scope.creatTeamTips = '小组组长只能在小组成员中选择'
         setTimeout(function(){
             $scope.creatTeamTips = '';
             $('.creat_team_tips').css("display","none");
         }, 1000);
    }else{
      var a = {
        trid:'',
        gname:'',
        gid:'',
        traderid:[],
        leaderid:[],
        traderLength:''
      }
      a.trid = $scope.currentSelectTrid;
      a.gname = teamName;
      a.gid = $scope.editGid;
      a.traderid = $scope.selectedTraders;
      a.leaderid = $scope.selectedLead;
      a.traderLength =  $scope.selectedTraders.length;
      allocateStockService.editTeamConfirm(a,function(res){

        $('.creat_team_tips').css("display","block");
        $scope.creatTeamTips = '编辑小组成功.重新编辑小组或通过取消按钮返回'
        setTimeout(function(){
            $scope.creatTeamTips = '';
            $('.creat_team_tips').css("display","none");
        }, 5000);
      })

  }
}
//确定分组按钮
$scope.createTeamConfirm = function(teamName){

  console.log("teamName",teamName)
  if(!(teamName)){
    $('.creat_team_tips').css("display","block");
    $scope.creatTeamTips = '请输入小组名称'
       setTimeout(function(){
           $scope.creatTeamTips = '';
           $('.creat_team_tips').css("display","none");
       }, 1000);
  }else if(!($scope.selectedTraders.length)){
    $('.creat_team_tips').css("display","block");
    $scope.creatTeamTips = '请选择小组成员'
       setTimeout(function(){
           $scope.creatTeamTips = '';
           $('.creat_team_tips').css("display","none");
       }, 1000);

  }else if (!($scope.selectedLead.length)) {
    $('.creat_team_tips').css("display","block");
    $scope.creatTeamTips = '请为该小组选择组长'
       setTimeout(function(){
           $scope.creatTeamTips = '';
           $('.creat_team_tips').css("display","none");
       }, 1000);
  }else if ($scope.selectedLead.length>1) {

    $('.creat_team_tips').css("display","block");
    $scope.creatTeamTips = '每个小组只能选一人为小组组长'
       setTimeout(function(){
           $scope.creatTeamTips = '';
           $('.creat_team_tips').css("display","none");
       }, 1000);
  }else if( $scope.selectedTraders.indexOf($scope.selectedLead[0])<0){
    $('.creat_team_tips').css("display","block");
    $scope.creatTeamTips = '小组组长只能在小组成员中选择'
       setTimeout(function(){
           $scope.creatTeamTips = '';
           $('.creat_team_tips').css("display","none");
       }, 1000);
  }else{

    var a = {
      trid:'',
      gname:'',
      traderid:[],
      leaderid:[],
      traderLength:''
    }
    a.trid = $scope.currentTridTeam;
    a.gname = teamName;
    a.traderid = $scope.selectedTraders;
    a.leaderid = $scope.selectedLead;
    a.traderLength =  $scope.selectedTraders.length;
    allocateStockService.addNewTeam(a,function(res){

      $scope.selectedTraders = [];
      $scope.selectedLead = [];
      $scope.teamName = '';
      $scope.getTradersNotInTeams();
      $('.creat_team_tips').css("display","block");
      $scope.creatTeamTips = '新建小组成功.再新建一个小组或通过取消按钮返回'
      setTimeout(function(){
          $scope.creatTeamTips = '';
          $('.creat_team_tips').css("display","none");


      }, 5000);
    })

  }
}

/**
 * @desc 更新弹出层的显示状态
 * @author ll
 * @param {String} className - 弹出层的类名
 * @param {String} showState - 弹出层的显示状态
 */

 $scope.updateModalState = function(className, showState){
     jQuery('.' + className).modal(showState);
 }

 /**
  * @desc 删除小组信息按钮
  * @author ll
  * @param {String} gid - 删除的小组id
  */


$scope.delTeam = function(gid){
  $scope.delGid = gid;
  $scope.updateModalState('js-team-del-page','toggle');
}

/**
 * @desc 删除小组确定。删除该小组，及小组成员信息，后期将继续删除该小组上的分券结果
 * @author ll
 * @param {String} gid - 删除的小组id
 */
$scope.delTeamConfirm = function(){
  var a = {gid:''};
  a.gid = $scope.delGid;
  allocateStockService.delGid(a, function(res){
    $scope.delGid = '';
  })
}

/**
 * @desc 小组详情按钮
 * @author ll
 * @param {String} gid - 小组名称
 * @param {String} gname - 小组名称
 */
$scope.teamDetail = function(gid,gname){
  var gid = gid;
  var gname = gname;


  $scope.teamName = gname;
  $scope.cspTradeTeamManageLoadPath = 'tpls/allocateStock/tradeTeamDetail.html';
  $scope.status  = 4;
 $scope.getTradersForEdit($scope.currentSelectTrid, gid);

}

//左侧侧边栏的跳转
//跳转到交易小组管理
  // $scope.goTradeTeamManage = function(){
  //   $state.go('tradeTeamManage')
  // }
  // $scope.goOperManage = function(){
  //      $state.go('opermanage');
  // }
  //
  //
  //


 })

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */


//这个controller的数据结构采用字符升序排列,新插入的数据也是升序插入才能正常工作


cspCtrls.controller('unitManageCtrl',
function($scope,$state,$timeout,UserInfoService,unitManageService,operLoginService) {
  $scope.assetManagers=[];//保存所有的资产管理人
  $scope.allUnits=[];//保存所有的单元
  $scope.modalLoadPath='';//modal的加载路径
  $scope.allState=[{'desc':'可用','stat':'0'},{'desc':'冻结','stat':'1'}];

  $scope.selectState=$scope.allState[0];
  $scope.unitName=''; //资产管理人的名字
  $scope.currOperateUnit={};//当前的操作的单元
  $scope.currSelecetedUnit={};//当前的选择的单元


  $scope.unitManage=$scope;//保存自己,在html中通过该属性访问其他属性,因为angularjs自身有点问题

  $scope.editingManager=true;
  $scope.editingAssetUnit=true;
  $scope.editingTradeUnit=true;

  $scope.cookieinfo={};
  $scope.searchField='';

  // 初始化页面
    $(document).ready(function(){
      document.getElementById('csp_header_containter').style.display = "none";
      document.getElementById('csp_footer').style.display = "none";
      document.getElementById('homeSpaceDiv_37px').style.display = "none";
      document.getElementById('uiView').style.minHeight = "100%";

      console.log('unitManageCtrl ready');
      $scope.getAllAssetManagers();
    });


    $scope.unitManageInit = function() {
 		document.getElementById('csp_header_containter').style.display = "none";
  		document.getElementById('csp_footer').style.display = "none";
  		document.getElementById('homeSpaceDiv_37px').style.display = "none";
 		//读取cookie
 		if(!(document.cookie || navigator.cookieEnabled)) {
 			alert("浏览器未开启cookie,网站可能无法正常使用");
 			$state.go('operlogin');
 		}
 		else {
 			$scope.cookieinfo.exist = false;
 			var cookieName = "cspOperLoginInfo=";
 			var clist = document.cookie.split(";");
 			for(var i = 0; i< clist.length; i++) {
 				var ca = clist[i].trim();
 				if(ca.indexOf(cookieName) == 0) {
 					$scope.cookieinfo.cookieExist = true;
 				    var accountInfo = JSON.parse(unescape(ca.substring(cookieName.length,ca.length)));
                     $scope.cookieinfo.login_maid = accountInfo.maid;
     				$scope.cookieinfo.login_oid = accountInfo.oid;
     				$scope.cookieinfo.login_pass = accountInfo.password;
                     break;
 				}
 			}

             console.log("开始自动登录");
 			//检查登录状态及cookie自动登录
 			operLoginService.cspOperCheckAndLogin($scope.cookieinfo,function(res) {
 				if(res.result == "succeed") {

 				}
 				else {
 					$state.go('operlogin');
 				}
 			})
 		}
 	 }

    $scope.showError=function(reason){

      document.getElementById('errorReason').innerHTML=reason;
      document.getElementById('errorMessage').style.display='';
      if ($scope.timeout) {
        $timeout.cancel($scope.timeout);
      }
      $scope.timeout=$timeout(function () {
        document.getElementById('errorMessage').style.display='none';
      }, 5000);

    }

    //获取所有的资产管理人
    $scope.getAllAssetManagers=function(){
      unitManageService.getAllAssetManagers('',function(res){
        if (res.result==false) {
          return;
        }
        // $scope.allUnits=res;
        $scope.allUnits=res;
        for (var i = 0; i < res.length; i++) {
          res[i].id=res[i].maid;
          res[i].name=res[i].maname;
          res[i].type=1;  //1表示资产管理人,2表示资产单元,3表示交易单元
          res[i].haveData=true;
          res[i].show=true;
          res[i].showChild=false;
        }
        // console.log('getAllAssetManagers',$scope.allUnits);
        $scope.getAllAssetUnits();

      });
    }

    //获取所有的资产管理人
    $scope.getAllAssetUnits=function(){
      unitManageService.getAllAssetUnits('',function(res){
        if (res.result===false) {
          return;
        }
        // $scope.allUnits=res;
        $scope.allAssetUnits=res;
        var i = 0;
        for (var j = 0; j < $scope.allUnits.length; j++) {
          for (; i < res.length; i++) {
            res[i].id=res[i].caid;
            res[i].name=res[i].caname;
            res[i].type=2;  //1表示资产管理人,2表示资产单元,3表示交易单元
            res[i].haveData=true;
            res[i].show=false;
            res[i].showChild=false;
            if ($scope.allUnits[j].maid===res[i].maid) {
              // $scope.allUnits.push(res[i]);
              $scope.allUnits.splice(++j,0,res[i])
              // j++;
            }else {
              break;
            }

          }
          var addObj={};
          addObj.type=2;//1表示资产管理人,2表示资产单元,3表示交易单元
          addObj.addAssetUnit=true;//表示该项只用于添加
          addObj.maid=$scope.allUnits[j].maid;
          addObj.show=false;
          $scope.allUnits.splice(++j,0,addObj);
        }

        // console.log('getAllAssetUnits',$scope.allUnits);
        $scope.getAllAssetTraders();
      });
    }

    //获取所有的资产管理人
    $scope.getAllAssetTraders=function(){
      unitManageService.getAllAssetTraders('',function(res){
        if (res.result==false) {
          return;
        }
        // $scope.allUnits=res;
        $scope.allTraderUnits=res;
        console.log('getAllAssetTraders',res);
        var i=0;
        for (var j = 0; j < $scope.allUnits.length; j++) {
          for (; i < res.length; i++) {
            res[i].id=res[i].trid;
            res[i].name=res[i].trname;
            res[i].type=3;  //1表示资产管理人,2表示资产单元,3表示交易单元
            res[i].haveData=true;
            res[i].show=false;
            res[i].showChild=false;
            if ($scope.allUnits[j].maid===res[i].maid&&
              $scope.allUnits[j].caid===res[i].caid&&
            $scope.allUnits[j].addAssetUnit!==true) {
              $scope.allUnits.splice(++j,0,res[i])

            }
            else {
              break;
            }
          }
          if (typeof $scope.allUnits[j].caid != 'undefined'&&
              $scope.allUnits[j].addAssetUnit!==true) {
                var addObj={};
                addObj.type=3;
                addObj.addTradeUnit=true;//表示该项只用于添加
                addObj.caid=$scope.allUnits[j].caid;//资产单元id
                addObj.maid=$scope.allUnits[j].maid;//它的maid等于之前一项的maid
                addObj.show=false;
                $scope.allUnits.splice(++j,0,addObj);
          }


        }
        // console.log($scope.allUnits);

      });
    }

    //获取目标资产管理人下的资产单元
    $scope.getAssetUnitFromCapManager=function(managerid){
      //首先对该资产管理人下的所有资产单元可见性置反
      for (var i = 0; i < $scope.allUnits.length; i++) {
        if ($scope.allUnits[i].maid==managerid) {

          //当前的资产管理人是可见的
          if ($scope.allUnits[i].showChild==true) {
            for (var j = i+1; j < $scope.allUnits.length; j++) {
              if ($scope.allUnits[j].maid==managerid&& $scope.allUnits[j].type>1) {
                $scope.allUnits[j].showChild=false;
                $scope.allUnits[j].show=false;
              }else {
                break;  //后面的直接跳过,因为是该资产管理人的所属都是连续的
              }
            }
          }else{
            for (var j = i+1; j < $scope.allUnits.length; j++) {
              if ($scope.allUnits[j].maid==managerid&& $scope.allUnits[j].type==2) {
                $scope.allUnits[j].show=true;
              }else {
                continue; //后面的不跳过,因为是该资产管理人的所属可能不是连续的
              }
            }
          }
          //当前的资产管理人可见性置反
          $scope.allUnits[i].showChild=!$scope.allUnits[i].showChild;
          break;
        }
      }
      // //如果已经获取过数据,则不用再次获得
      // if( $scope.allUnits[i].haveData==true)
      //   return;
      //
      // //当前的资产管理人单元已经拥有数据
      // $scope.allUnits[i].haveData=true;
      //
      // var params={'maid':managerid};
      // unitManageService.getAssetUnitFromCapManager(params,function(res){
      //   if (res.result==false) {
      //     return;
      //   }
      //
      //
      //   for (var j = 0; j < res.length; j++) {
      //     res[j].id=res[j].caid;
      //     res[j].name=res[j].caname;
      //     res[j].type=2;  //1表示资产管理人,2表示资产单元,3表示交易单元
      //     res[j].show=true;
      //     $scope.allUnits.splice(++i,0,res[j]);
      //
      //   }
      //   var addObj={};
      //   addObj.type=2;
      //   addObj.addAssetUnit=true;//表示该项只用于添加
      //   addObj.maid=managerid;
      //   addObj.show=true;
      //   $scope.allUnits.splice(++i,0,addObj);
      //
      //   console.log(i,$scope.allUnits);
      //
      //
      // });
    }

    $scope.getTransUnitFromAssetUnit=function(assetUnitID){

      for (var i = 0; i < $scope.allUnits.length; i++) {
        if ($scope.allUnits[i].caid==assetUnitID) {

          //当前的资产管理人可见性置反
          $scope.allUnits[i].showChild=!$scope.allUnits[i].showChild;

          for (var j = i+1; j < $scope.allUnits.length; j++) {
            if ($scope.allUnits[j].caid==assetUnitID&&($scope.allUnits[j].type==3)) {
              //当前的资产单元可见性置反
              $scope.allUnits[j].show=!$scope.allUnits[j].show;
            }else {
              break;
            }
          }

          // if ($scope.allUnits[i].showChild==true) {
          //   $scope.allUnits[i].showChild=false;
          //   return;
          // }
          // $scope.allUnits[i].showChild=true;//只要点击了就设置为显示了该分组
          break;
        }
      }
      //如果已经获取过数据,则不用再次获得
      // if($scope.allUnits[i].haveData)
      //   return;
      // $scope.allUnits[i].haveData=true;
      //
      // var params={'caid':assetUnitID};
      // unitManageService.getTransUnitFromAssetUnit(params,function(res){
      //   if (res.result ==false) {
      //     return;
      //   }
      //
      //   for (var j = 0; j < res.length; j++) {
      //     res[j].id=res[j].trid;
      //     res[j].name=res[j].trname;
      //     res[j].type=3;  //1表示资产管理人,2表示资产单元,3表示交易单元
      //     res[j].show=true;
      //     $scope.allUnits.splice(++i,0,res[j]);
      //   }
      //
      //   var addObj={};
      //   addObj.type=3;
      //   addObj.addTradeUnit=true;//表示该项只用于添加
      //   addObj.caid=assetUnitID;//资产单元id
      //   addObj.maid=$scope.allUnits[i].maid;//它的maid等于之前一项的maid
      //   addObj.show=true;
      //   $scope.allUnits.splice(++i,0,addObj);
      // });
    }

    $scope.clickUnit=function(destUnit){
      console.log('clickUnit',destUnit);
      if (destUnit.type==1) {
        $scope.getAssetUnitFromCapManager(destUnit.id);
      }
      else if (destUnit.type==2){

        if (!destUnit.addAssetUnit) {//如果它是展开资产单元的
          $scope.getTransUnitFromAssetUnit(destUnit.id);

        }
        else {
          console.log('添加资产单元');
        }
      }
      else if (destUnit.type==3){
        if(destUnit.addTradeUnit){
          console.log('添加交易单元');

        }
        else {
          console.log('点击交易单元');

        }
      }
    }

    $scope.frozenAssetManager=function(assetManagerID){
      var params={};
      params.maid=assetManagerID;
      unitManageService.frozenAssetManager(params,function(res){
        if (res.result==false) {
          return;
        }
        for (var i = 0; i < $scope.allUnits.length; i++) {
          if ($scope.allUnits[i].type==1&&$scope.allUnits[i].maid==assetManagerID) {
            $scope.allUnits[i].stat='1';
            break;
          }
        }
      });
    }
    $scope.frozenAssetUnit=function(assetUnitID){
      var params={};
      params.caid=assetUnitID;
      unitManageService.frozenAssetUnit(params,function(res){
        if (res.result==false) {
          return;
        }
        for (var i = 0; i < $scope.allUnits.length; i++) {
          if ($scope.allUnits[i].type==2&&$scope.allUnits[i].caid==assetUnitID) {
            $scope.allUnits[i].stat='1';
            break;
          }
        }
      });
    }

    $scope.frozenTradeUnit=function(tradeUnitID){
      var params={};
      params.trid=tradeUnitID;
      unitManageService.frozenTradeUnit(params,function(res){
        if (res.result==false) {
          return;
        }
        for (var i = 0; i < $scope.allUnits.length; i++) {
          if ($scope.allUnits[i].type==3&&$scope.allUnits[i].trid==tradeUnitID) {
            $scope.allUnits[i].stat='1';
            break;
          }
        }
      });
    }

    $scope.unfreezeAssetManager=function(assetManagerID){
      var params={};
      params.maid=assetManagerID;
      console.log('unfreezeAssetManager',$scope.allUnits,assetManagerID);

      unitManageService.unfreezeAssetManager(params,function(res){
        if (res.result==false) {
          return;
        }
        for (var i = 0; i < $scope.allUnits.length; i++) {
          if ($scope.allUnits[i].type==1&&$scope.allUnits[i].maid==assetManagerID) {
            $scope.allUnits[i].stat='0';
            break;
          }
        }
      });
    }
    $scope.unfreezeAssetUnit=function(assetUnitID){
      var params={};
      params.caid=assetUnitID;
      unitManageService.unfreezeAssetUnit(params,function(res){
        if (res.result==false) {
          return;
        }
        for (var i = 0; i < $scope.allUnits.length; i++) {
          if ($scope.allUnits[i].type==2&&$scope.allUnits[i].caid==assetUnitID) {
            $scope.allUnits[i].stat='0';
            break;
          }
        }
      });
    }

    $scope.unfreezeTradeUnit=function(tradeUnitID){
      var params={};
      params.trid=tradeUnitID;
      unitManageService.unfreezeTradeUnit(params,function(res){
        if (res.result==false) {
          return;
        }
        for (var i = 0; i < $scope.allUnits.length; i++) {
          if ($scope.allUnits[i].type==3&&$scope.allUnits[i].trid==tradeUnitID) {
            $scope.allUnits[i].stat='0';
            break;
          }
        }
      });
    }

    $scope.frozen=function(unitObj){
      if (unitObj.type==1) {

        $scope.frozenAssetManager(unitObj.maid);


      }else if (unitObj.type==2) {

        $scope.frozenAssetUnit(unitObj.caid);

      }else if (unitObj.type==3) {

        $scope.frozenTradeUnit(unitObj.trid);

      }
    }

    $scope.unfreeze=function(unitObj){
      if (unitObj.type==1) {
        console.log(unitObj);
        $scope.unfreezeAssetManager(unitObj.id);

      }else if (unitObj.type==2) {

        $scope.unfreezeAssetUnit(unitObj.id);

      }else if (unitObj.type==3) {

        $scope.unfreezeTradeUnit(unitObj.id);

      }
    }

    $scope.addManager=function(){

        $scope.currOperateUnit.maid='';
        $scope.unitName='';

        $scope.editingManager=false;
        $scope.currSelecetedUnit={};

        $scope.selectState=$scope.allState[0];

        $scope.modalLoadPath='tpls/unitManage/assetManager.html';//modal的加载路径
        $('#unitManageModal').modal('show');




    }

    $scope.addAssetUnit=function(prveAssetUnit,index){

      console.log('addAssetUnit',prveAssetUnit);

        $scope.currOperateUnit.maid=prveAssetUnit.maid;
        $scope.currOperateUnit.caid='';
        $scope.unitName='';

        $scope.editingAssetUnit=false;

        $scope.currSelecetedUnit=prveAssetUnit;
        $scope.currSelecetedUnit.index=index;//保存该对象在数组中的位置

        $scope.selectState=$scope.allState[0];

        $scope.modalLoadPath='tpls/unitManage/assetUnit.html';//modal的加载路径
        $('#unitManageModal').modal('show');

    }

    $scope.addTradeUnit=function(prveTradeUnit,index){

      console.log('addTradeUnit',index);

        $scope.currOperateUnit.maid=prveTradeUnit.maid;
        $scope.currOperateUnit.caid=prveTradeUnit.caid;
        $scope.currOperateUnit.trid='';
        $scope.unitName='';

        $scope.editingTradeUnit=false;

        $scope.currSelecetedUnit=prveTradeUnit;
        $scope.currSelecetedUnit.index=index;//保存该对象在数组中的位置

        $scope.selectState=$scope.allState[0];

        $scope.modalLoadPath='tpls/unitManage/tradeUnit.html';//modal的加载路径
        $('#unitManageModal').modal('show');



    }

    $scope.editUnit=function(unitManager){
      $scope.currSelecetedUnit=unitManager;
      $.extend($scope.currOperateUnit,$scope.currSelecetedUnit);
      // document.getElementById('errorMessage').style.display='none';


      //更新名字和状态
      $scope.unitName=$scope.currSelecetedUnit.name;
      var stateIndex=parseInt($scope.currSelecetedUnit.stat);
      $scope.selectState=$scope.allState[stateIndex];

      console.log(stateIndex,$scope.selectState,$scope.allState);

      switch(unitManager.type){
        case 1:
        $scope.editingManager=true;
        $scope.modalLoadPath='tpls/unitManage/assetManager.html';//modal的加载路径
        break;
        case 2:
        $scope.editingAssetUnit=true;
        $scope.modalLoadPath='tpls/unitManage/assetUnit.html';//modal的加载路径
        break;
        case 3:
        $scope.editingTradeUnit=true;
        $scope.modalLoadPath='tpls/unitManage/tradeUnit.html';//modal的加载路径
        break;
      }
      $('#unitManageModal').modal('show');
    }

    // $scope.editAssetUnit=function(unitManager){
    //   $scope.editingManager=true;
    //   $scope.currSelecetedUnit=unitManager;
    //
    //   //更新名字和状态
    //   $scope.unitName=$scope.currSelecetedUnit.name;
    //   var stateIndex=parseInt($scope.currSelecetedUnit.stat);
    //   $scope.selectState=$scope.allState[stateIndex];
    //
    //   console.log(stateIndex,$scope.selectState,$scope.allState);
    //
    //   $scope.modalLoadPath='tpls/unitManage/assetUnit.html';//modal的加载路径
    //   $('#unitManageModal').modal('show');
    // }
    //
    // $scope.editTradeUnit=function(unitManager){
    //   $scope.editingManager=true;
    //   $scope.currSelecetedUnit=unitManager;
    //
    //   //更新名字和状态
    //   $scope.unitName=$scope.currSelecetedUnit.name;
    //   var stateIndex=parseInt($scope.currSelecetedUnit.stat);
    //   $scope.selectState=$scope.allState[stateIndex];
    //
    //   console.log(stateIndex,$scope.selectState,$scope.allState);
    //
    //   $scope.modalLoadPath='tpls/unitManage/tradeUnit.html';//modal的加载路径
    //   $('#unitManageModal').modal('show');
    // }

    $scope.saveOperateManager=function(state){
      var testStr=/^\d+$/;
      if (!testStr.test($scope.currOperateUnit.maid)) {
        $scope.showError('资产管理人id必须全为数字');
        return;
      }

      if ($scope.unitName=='') {
        $scope.showError('名称不能为空');
        return;
      }
      if ($scope.currOperateUnit.maid<1) {
        $scope.showError('单元编号必须大于0');
        return;
      }

      var params={};
      params.stat=state.stat;
      params.maname=$scope.unitName;
      params.maid=$scope.currOperateUnit.maid;

      if ($scope.editingManager) {
        params.maid=$scope.currSelecetedUnit.maid;
        unitManageService.saveEditAssetManager(params,function(res){
          if (res.result==false) {
            $scope.showError(res.reason);

            return;
          }
          $scope.currSelecetedUnit.stat=params.stat;
          $scope.currSelecetedUnit.maname=$scope.unitName;
          $scope.currSelecetedUnit.name=$scope.unitName;

          $('#unitManageModal').modal('hide');

        });

      }
      else {
        unitManageService.createAssetManager(params,function(res){
          if (res.result==false) {
            $scope.showError(res.reason);

            return;
          }
          var unitManager={};
          unitManager.id=res.maid;
          unitManager.maid=res.maid;
          unitManager.stat=params.stat;
          unitManager.type=1;  //1表示资产管理人,2表示资产单元,3表示交易单元
          unitManager.name=params.maname;
          unitManager.show=true;
          unitManager.showChild=false;

          var addObj={};
          addObj.type=2;//1表示资产管理人,2表示资产单元,3表示交易单元
          addObj.addAssetUnit=true;//表示该项只用于添加
          addObj.maid=res.maid;
          addObj.show=false;

          var index= getInsertIndex(unitManager,($scope.allUnits.length-1));

          // console.log('index',$scope.allUnits.length-1,index);
          $scope.allUnits.splice(index,0,unitManager,addObj);
          // $scope.allUnits.push(unitManager);
          $('#unitManageModal').modal('hide');
          console.log('createAssetManager success',params,$scope.unitName);
        });
      }
    }

    $scope.cancelOperatedManager=function(){
      if($scope.editingManager){

        //更新名字和状态
        $scope.unitName=$scope.currSelecetedUnit.name;
        var stateIndex=parseInt($scope.currSelecetedUnit.stat);
        $scope.selectState=$scope.allState[stateIndex];
        console.log($scope.selectState,$scope.allState,$scope.currSelecetedUnit.stat,stateIndex);

      }
      else {
        $scope.unitName=''; //资产管理人的名字

          $scope.selectState=$scope.allState[0];
          console.log($scope.selectState,$scope.allState);
      }
    }

    $scope.saveOperateAssetUnit=function(state){

      var testStr=/^\d+$/;
      if (!testStr.test($scope.currOperateUnit.caid)) {
        $scope.showError('资产单元id必须全为数字');
        return;
      }

      if ($scope.unitName=='') {
        $scope.showError('名称不能为空');
        return;
      }

      if ($scope.currOperateUnit.caid<1) {
        $scope.showError('单元编号必须大于0');
        return;
      }

      var params={};
      params.stat=state.stat;
      params.caname=$scope.unitName;
      params.maid=$scope.currOperateUnit.maid;
      params.caid=$scope.currOperateUnit.maid+'.'+$scope.currOperateUnit.caid;

      if ($scope.editingAssetUnit) {
        unitManageService.saveEditAssetUnit(params,function(res){
          if (res.result==false) {
            $scope.showError(res.reason);

            return;
          }
          $scope.currSelecetedUnit.stat=params.stat;
          $scope.currSelecetedUnit.caname=$scope.unitName;
          $scope.currSelecetedUnit.name=$scope.unitName;

          $('#unitManageModal').modal('hide');

        });

      }
      else {
         console.log(params);
        unitManageService.createAssetUnit(params,function(res){
          if (res.result==false) {
            $scope.showError(res.reason);

            return;
          }
          var assetunit={};
          assetunit.id=res.caid;
          assetunit.maid=res.maid;
          assetunit.caid=res.caid;
          assetunit.stat=params.stat;
          assetunit.type=2;  //1表示资产管理人,2表示资产单元,3表示交易单元
          assetunit.name=params.caname;
          assetunit.caname=params.caname;
          assetunit.show=true;
          assetunit.showChild=false;

          var addObj={};
          addObj.type=3;//1表示资产管理人,2表示资产单元,3表示交易单元
          addObj.addTradeUnit=true;//表示该项只用于添加
          addObj.maid=res.maid;
          addObj.caid=res.caid;
          addObj.show=false;

          var index= getInsertIndex(assetunit,$scope.currSelecetedUnit.index-1);
          console.log('index',index);
          $scope.allUnits.splice(index,0,assetunit,addObj);

          // $scope.allUnits.splice($scope.currSelecetedUnit.index,0,assetunit);
          $('#unitManageModal').modal('hide');
          console.log('createAssetManager success',params,$scope.unitName);
        });
      }
    }

    function getInsertIndex(unit,lastIndex){

      if (unit.type===1) {
        // var currID=unit.maid;
        for (var i = lastIndex; i>=0; i--) {
              if ($scope.allUnits[i].maid<unit.maid) {
                return i+1;
              }
        }
        return 0;
      }else if (unit.type===2){

        var currID=unit.caid.split('.');
        currID=currID[currID.length-1];
        console.log('currID',currID);

        for (var i = lastIndex; i>=0; i--) {
          if (typeof $scope.allUnits[i].caid !='undefined') {
            var existID=$scope.allUnits[i].caid.split('.');
            existID=existID[existID.length-1];
            if (existID<currID) {
              return i+1;
            }
          }else if ($scope.allUnits[i].maid ===unit.maid){
            return i+1;
          }

        }
        return 0;//正常情况下不应该为0,应该出错了
      }else if (unit.type===3){
        var currID=unit.trid.split('.');
        currID=currID[currID.length-1];
        console.log('currID',currID);

        for (var i = lastIndex; i>=0; i--) {

          //判断该单元是否是资产单元
          if (typeof $scope.allUnits[i].trid !='undefined') {

              var existID=$scope.allUnits[i].trid.split('.');
              existID=existID[existID.length-1];

              if (existID<currID) {
                return i+1;
              }
          }else if ($scope.allUnits[i].caid ===unit.caid) {//如果之前的单元是资产单元,则直接加入到其后面
            return i+1;
          }
        }
        return 0;//正常情况下不应该为0,应该出错了
      }

    }

    $scope.cancelOperatedAssetUnit=function(){
      if($scope.editingManager){

        //更新名字和状态
        $scope.unitName=$scope.currSelecetedUnit.name;
        var stateIndex=parseInt($scope.currSelecetedUnit.stat);
        $scope.selectState=$scope.allState[stateIndex];
        console.log($scope.selectState,$scope.allState,$scope.currSelecetedUnit.stat,stateIndex);

      }
      else {
        $scope.unitName=''; //资产单元的名字

          $scope.selectState=$scope.allState[0];
          console.log($scope.selectState,$scope.allState);
      }
    }

    $scope.saveOperateTradeUnit=function(state){
      var testStr=/^\d+$/;
      if (!testStr.test($scope.currOperateUnit.trid)) {
        $scope.showError('交易单元id必须全为数字');
        return;
      }

      if ($scope.unitName=='') {
        $scope.showError('名称不能为空');
        return;
      }

      if ($scope.currOperateUnit.trid<1) {
        $scope.showError('单元编号必须大于0');
        return;
      }


      var params={};
      params.stat=state.stat;
      params.trname=$scope.unitName;
      params.maid=$scope.currOperateUnit.maid;
      params.caid=$scope.currOperateUnit.caid;
      params.trid=$scope.currOperateUnit.caid+'.'+$scope.currOperateUnit.trid;

      console.log(params);
      if ($scope.editingTradeUnit) {

        unitManageService.saveEditTradeUnit(params,function(res){
          if (res.result==false) {
            $scope.showError(res.reason);
            return;
          }
          $scope.currSelecetedUnit.stat=params.stat;
          $scope.currSelecetedUnit.trname=$scope.unitName;
          $scope.currSelecetedUnit.name=$scope.unitName;

          $('#unitManageModal').modal('hide');

        });

      }
      else {
        unitManageService.createTradeUnit(params,function(res){
          if (res.result==false) {
            $scope.showError(res.reason);
            return;
          }
          var unitTrader={};
          unitTrader.id=res.trid;
          unitTrader.maid=params.maid;
          unitTrader.caid=params.caid;
          unitTrader.trid=params.trid;
          unitTrader.stat=params.stat;
          unitTrader.type=3;  //1表示资产管理人,2表示资产单元,3表示交易单元
          unitTrader.name=params.trname;
          unitTrader.trname=params.trname;
          unitTrader.show=true;
          unitTrader.showChild=false;


          var index= getInsertIndex(unitTrader,$scope.currSelecetedUnit.index-1);
          console.log('index',index,$scope.currSelecetedUnit.index);
          $scope.allUnits.splice(index,0,unitTrader);

          // $scope.allUnits.splice($scope.currSelecetedUnit.index,0,unitTrader);

          $('#unitManageModal').modal('hide');
          console.log('createAssetManager success',params,$scope.unitName);
        });
      }
    }

    $scope.cancelOperated=function(){
      document.getElementById('errorMessage').style.display='none';
      $scope.modalLoadPath='';//modal的加载路径

      $scope.editingManager=true;
      $scope.editingAssetUnit=true;
      $scope.editingTradeUnit=true;
      $('#unitManageModal').modal('hide');
      }

      $scope.enterSearch=function(e){
        var keycode = window.event?e.keyCode:e.which;

        if ($scope.searchField=='') {
          for (var i = 0; i < $scope.allUnits.length; i++) {
              $scope.allUnits[i].find=false;
          }
        }

        if(keycode===13){
          console.log('enterSearch');
          for (var i = 0; i < $scope.allUnits.length; i++) {
            if ($scope.allUnits[i].addAssetUnit||
              $scope.allUnits[i].addTradeUnit) {
                continue;
            }

            var str=$scope.allUnits[i].id.toLowerCase();
            if (str.indexOf($scope.searchField)!==-1) {
              $scope.allUnits[i].find=true;
              continue;
            }

            str=$scope.allUnits[i].name.toLowerCase();
            if (str.indexOf($scope.searchField)!==-1) {
              $scope.allUnits[i].find=true;
              // continue;
            }
          }
        }


      }
      $scope.refresh=function(){
        $scope.getAllAssetManagers();
        $scope.searchField='';
      }

});

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */

 cspCtrls.controller('usercenterCtrl',
function($scope,$state,$http,$rootScope,$location,$interval,
	usercenterService,UserInfoService,orderService){

  //程序不会修改的配置
  $scope.maxPageSize=3;//一次显示的记录数量
  $scope.pageRows=10;//一页显示的记录数量

  $scope.includePath='';//user_orderDiv ng-include 的路径

  //可以修改的配置
  $scope.orderAmount=0;//总的记录数量
  $scope.allPage=0;//总页数
  $scope.currentpage=1;//当前页数
  $scope.pageArr=[];
  $scope.currOrderState={osid:-1,osdesc:'全部'};
  $scope.modifyCenterData={
    messageCode:'',
    newPhoneNumber:'',
    newEmail:'',
    modifyType:'modifyPhone'//modifyPhone表示手机,modifyEmail表示邮箱,modifyWeChat
  }
	$scope.passwordObject={
			oldPassword:'',
			firstNewPassword:'',
			secondNewPassword:'',
			uid:''
	};
	$scope.userInfo = {
		uid: '',
		username: '',
		tel:'',
		email:'',
		openid:'',
    unionid:'',
		last_logintm:'',
		risklevel_code:'',
		stat:'',
		tname:'',
		idnumber:'',
		conlevel:'',
		wechatname:''
	};

	$scope.setRiskLevel =function(risklevel){
		console.log("risklevel",risklevel);

    UserInfoService.getRiskLevel('',function(res){
      if(res.result===false){
        console.log('getRiskLevel fail '+res.reason);
      }else {
        console.log(res);
        for (var i = 0; i < res.length; i++) {
          if (res[i].risklevel_code==risklevel) {
            $scope.userInfo.risklevel_code=res[i].risklevel_name;
            break;
          }
        }
      }
    });

		}
    $scope.overList=function($event){
      $($event.target).addClass("overList");
    }
    $scope.outList=function($event){
      $($event.target).removeClass("overList");
    }

	$scope.setUserType =function(usertype){
    UserInfoService.getConLevel('',function(res){
      if(res.result===false){
        console.log('getConLevel fail '+res.reason);
      }else {
        console.log(res);
        for (var i = 0; i < res.length; i++) {
          if (res[i].id==usertype) {
            $scope.userInfo.conlevel=res[i].name;
            break;
          }
        }
      }
    });

		switch (usertype) {
			case 1:
        $('#user_adminbutton').show();
				break;
      case 2:
        $('#user_adminbutton').show();
        break;
			default:
        $('#user_adminbutton').hide();

		}
	}

	$scope.getUserInfo = function(){

    if(typeof $scope.userInfo.uid=='undefined')
    return;

    usercenterService.getUserInfo($scope.userInfo,function(res){
			if(res.result!=false){
				$scope.userInfo=res;

        $scope.setRiskLevel(res.risklevel_code);
        $scope.setUserType(res.conlevel);
				if(res.risklevel_code===0){
					$state.go('risklevel');
				}
        console.log('$scope.userInfo.unionid',$scope.userInfo.unionid,typeof($scope.userInfo.unionid))
        if(typeof($scope.userInfo.unionid)=='undefined'||
          $scope.userInfo.unionid.length==0){
          document.getElementById('user_wechatBtn').innerText='绑定微信';
        }else{
          document.getElementById('user_wechatBtn').innerText='修改微信';
        }
			}
			else{
				$scope.userInfo.username='';
				$scope.userInfo.tel='';
				$scope.userInfo.email='';

				console.log("没查找到数据",res);
			}

    });
	}

  $scope.getOrder=function(option){

    orderService.getOrder(option,function(res){
      if(res.result===false){
        return;
      }
      for (var i = 0; i < res.length; i++) {
        res[i].subtime=new Date(res[i].subtime).Format("yyyy-MM-dd hh:mm:ss");
      }
      $scope.orders=res;
      console.log('getOrder',res);
    });
  }



  // $scope.getOrderByOption=function(option){
  //
  //   orderService.getOrder(option,function(res){
  //     if(res.result===false){
  //       return;
  //     }
  //     for (var i = 0; i < res.length; i++) {
  //       res[i].subtime=new Date(res[i].subtime).Format("yyyy-MM-dd hh:mm:ss");
  //     }
  //     $scope.orders=res;
  //     console.log('getOrder',res);
  //   });
  // }

  $scope.getOrderState=function(){

    orderService.getOrderState('',function(res){
      if(res.result===false){
        return;
      }
      $scope.orderState=res;
      console.log('getOrderState',res);
    });
  }

	$scope.setUserInfo=function(userInfo){
		usercenterService.setUserInfo(userInfo,function(res){
			if(res.result===true){
				console.log("查找到了数据",res);
				$scope.userInfo.username=res.username;
				$scope.userInfo.tel=res.tel;
				$scope.userInfo.email=res.email;
				$scope.userInfo.openid=res.openid;
				$scope.userInfo.last_logintm=res.last_logintm;

				$scope.userInfo.stat=res.stat;
				$scope.userInfo.tname=res.tname;
				$scope.userInfo.idnumber=res.idnumber;

				$scope.userInfo.wechatname=res.wechatname;

				$scope.setRiskLevel(res.risklevel_code);
				$scope.setUserType(res.conlevel);
			}
			else
			{
				$scope.userInfo.username='';
				$scope.userInfo.tel='';
				$scope.userInfo.email='';
				console.log("没查找到数据",res);
			}
		});
	}

	$scope.cancelChage=function(){
		$scope.getUserInfo();
	};

  $scope.saveModifyData=function(){
    document.getElementById('modifyMessageDiv').style.display='none';

    var userphone={};
    userphone.phone=$scope.userInfo.tel;
    userphone.code=$scope.modifyCenterData.messageCode;

    usercenterService.checkUserCenterCode(userphone,function(res){
      if(res.result===false){
        document.getElementById('modifyMessageDiv').style.display='';
        document.getElementById('modifyMessagePara').innerText='您输入的验证码不正确,请重新输入';
      }else{
        if($scope.modifyCenterData.modifyType==='modifyEmail'){
          if (typeof($scope.modifyCenterData.newEmail)=='undefined'||
              $scope.modifyCenterData.newEmail=='') {
                document.getElementById('modifyMessageDiv').style.display='';
                document.getElementById('modifyMessagePara').innerText='您输入的邮箱格式不正确,请重新输入';
                return;
          }

          var data={};
          data.newEmail=$scope.modifyCenterData.newEmail;


          usercenterService.setEmail(data,function(res){
            if(res.result===false){
              console.log('修改邮箱失败');
              document.getElementById('modifyMessageDiv').style.display='';
              document.getElementById('modifyMessagePara').innerText='修改邮箱失败';
            }else {
              console.log('修改邮箱成功');
              $scope.getUserInfo();
              jQuery('#wechat_modal').modal('hide');
            }
          });
        }
        else if($scope.modifyCenterData.modifyType==='modifyPhone'){

          if((!(/^1[34578]\d{9}$/.test($scope.modifyCenterData.newPhoneNumber)))){
            console.log('请输入正确的手机号码');
            document.getElementById('modifyMessageDiv').style.display='';
            document.getElementById('modifyMessagePara').innerText='请输入正确的手机号码';
            return;
          }

          var data={};
          data.newPhoneNumber=$scope.modifyCenterData.newPhoneNumber;
          usercenterService.setPhone(data,function(res){
            console.log('setPhone',res,typeof(res));
            if(res.result===false){
              document.getElementById('modifyMessageDiv').style.display='';
              document.getElementById('modifyMessagePara').innerText='修改Phone失败';
            }else {
              console.log('修改Phone成功');
              $scope.getUserInfo();
              jQuery('#wechat_modal').modal('hide');
            }
          });
        }
      }
    });


  }
	$scope.setPassword=function(passwordObj){
		console.log("setUserPass");
		document.getElementById('user_passmessageDiv').style.display='none';
    document.getElementById('user_passSuccMessage').style.display='none';

		if(passwordObj.oldPassword.length==0||passwordObj.firstNewPassword.length==0||
		passwordObj.secondNewPassword.length==0){
			document.getElementById('user_passmessageContent').innerHTML="您还有密码没有输入完成,请输入完成后重试";
			document.getElementById('user_passmessageDiv').style.display='';
			return;
		}

		if(passwordObj.firstNewPassword!==passwordObj.secondNewPassword){
			document.getElementById('user_passmessageContent').innerHTML="两次输入的密码不一致,请重新输入";
			document.getElementById('user_passmessageDiv').style.display='';
			return;
		}
		passwordObj.uid=$scope.userInfo.uid;
		usercenterService.setPassword(passwordObj,function(res){
			if(res.result===true){
				console.log("修改密码成功");
        $scope.passwordObject.oldPassword='';
        $scope.passwordObject.firstNewPassword='';
        $scope.passwordObject.secondNewPassword='';
        document.getElementById('user_passSuccMessage').style.display='';

			}
			else{
				document.getElementById('user_passmessageContent').innerHTML=res.reason;
				document.getElementById('user_passmessageDiv').style.display='';
			}
		});

	}

	$scope.cancelSetPass=function()
	{
		console.log("cancelSetPass");
		$scope.passwordObject.oldPassword='';
		$scope.passwordObject.firstNewPassword='';
		$scope.passwordObject.secondNewPassword='';
		document.getElementById('user_passmessageDiv').style.display='none';
    document.getElementById('user_passSuccMessage').style.display='none';

	};

  $scope.cancelModify=function(){
    document.getElementById('modifyMessageDiv').style.display='none';
    $scope.modifyCenterData.messageCode='';
    $scope.modifyCenterData.newPhoneNumber='';
    $scope.modifyCenterData.newEmail='';
    jQuery('#wechat_modal').modal('hide');
  };

	$scope.goUserData=function(){
			$scope.getUserInfo();

			document.getElementById('user_dataform').style.display='';
			document.getElementById('user_passform').style.display='none';
      // document.getElementById('user_orderDiv').style.display='none';
      $scope.includePath='';
			// $("#user_databutton").addClass("active");
			// $("#user_passbutton").removeClass("active");
      // $("#user_orderbutton").removeClass("active");

      // if((window.innerHeight-100)>$('#userSegment').height())
      //   $('#userSegment').height(window.innerHeight-100);
	};


	$scope.goModifyPass=function(){


		$scope.passwordObject.oldPassword='';
		$scope.passwordObject.firstNewPassword='';
		$scope.passwordObject.secondNewPassword='';

		document.getElementById('user_dataform').style.display='none';
    // document.getElementById('user_orderDiv').style.display='none';
    $scope.includePath='';
		document.getElementById('user_passform').style.display='';

	};

  $scope.goManageOrder=function(){

    $scope.getOrderAmount();
    // $scope.getAllOrderState();

    $scope.passwordObject.oldPassword='';
    $scope.passwordObject.firstNewPassword='';
    $scope.passwordObject.secondNewPassword='';

    document.getElementById('user_dataform').style.display='none';
    document.getElementById('user_passform').style.display='none';
    // document.getElementById('user_orderDiv').style.display='';
    $scope.includePath='tpls/usercenter/order.html';
  };

  $scope.goOwnedProduct=function(){

    $scope.passwordObject.oldPassword='';
    $scope.passwordObject.firstNewPassword='';
    $scope.passwordObject.secondNewPassword='';

    document.getElementById('user_dataform').style.display='none';
    document.getElementById('user_passform').style.display='none';
    // document.getElementById('user_orderDiv').style.display='';
    $scope.includePath='tpls/usercenter/ownedProducts.html';
  };

  $scope.goOrder=function(){
		// $("#user_orderbutton").addClass("active");
		// $("#user_passbutton").removeClass("active");
    // $("#user_databutton").removeClass("active");

		document.getElementById('user_dataform').style.display='none';
		document.getElementById('user_passform').style.display='none';
    document.getElementById('user_orderDiv').style.display='';


	};

	$scope.goAdmin=function()
	{
		$state.go('managecenter');
	};

  $scope.goToUserPage=function(page,$event){
    document.getElementById('user_passmessageDiv').style.display='none';
    document.getElementById('user_passSuccMessage').style.display='none';

    $('#userlist .item').removeClass('active');
    $($event.target).addClass('active');

    var params={};
    params.centerData={}
    params.centerData.page=page;

    usercenterService.setCenterData(params,function(res){
      if(res.result===false){
        console.log('切换页面失败 ');
      }else{
        if(page===1){
          $scope.goModifyPass();
        }else if(page===2){
          $state.go('managecenter');
        }else if(page===3){
          $scope.goManageOrder();

        }else if(page===4){
          $state.go('allocateStock');
        }
        else if(page===5){
          $scope.goOwnedProduct();

        }else{
          $scope.goUserData();
        }
      }
    });

  }


  $scope.setWeChatAccount=function(account){
    usercenterService.setWeChatAccount(account,function(res){
      if(res.result===false){
        console.log('修改微信失败');
        document.getElementById('user_datamessageDiv').style.display='';
        document.getElementById('user_datamessageContent').innerText=res.reason;
      }
      else{
        console.log('修改微信成功');
        $scope.getUserInfo();
      }
    });
	};
  $scope.hideDataMessageDiv=function(){
    document.getElementById('user_datamessageDiv').style.display='none';

  }

  $scope.goModifyPhone=function(){
    $scope.modifyCenterData.modifyType='modifyPhone';

    $scope.modifyCenterData.messageCode='';
    $scope.modifyCenterData.newPhoneNumber='';
    $scope.modifyCenterData.newEmail='';

    document.getElementById('modifyMessageDiv').style.display='none';
    document.getElementById('user_modifyCenterHeader').innerText='修改手机';
    document.getElementById('user_currentPhone').style.display='';
    document.getElementById('user_currentCode').style.display='';
    document.getElementById('user_modifyPhone').style.display='';
    document.getElementById('user_modifyEmail').style.display='none';
    document.getElementById('user_modifyControl').style.display='';
    document.getElementById('user_modifyWeChat').style.display='none';
    jQuery('#wechat_modal').modal('show');
	};

  $scope.goModifyEmail=function(){
    $scope.modifyCenterData.modifyType='modifyEmail';
    $scope.modifyCenterData.messageCode='';
    $scope.modifyCenterData.newPhoneNumber='';
    $scope.modifyCenterData.newEmail='';

    document.getElementById('modifyMessageDiv').style.display='none';
    document.getElementById('user_modifyCenterHeader').innerText='修改邮箱';
    document.getElementById('user_currentPhone').style.display='';
    document.getElementById('user_currentCode').style.display='';
    document.getElementById('user_modifyPhone').style.display='none';
    document.getElementById('user_modifyEmail').style.display='';
    document.getElementById('user_modifyControl').style.display='';
    document.getElementById('user_modifyWeChat').style.display='none';

    jQuery('#wechat_modal').modal('show');
  };

  $scope.goModifyWeChat=function(){
    $scope.modifyCenterData.modifyType='modifyWeChat';
    $scope.modifyCenterData.messageCode='';
    $scope.modifyCenterData.newPhoneNumber='';
    $scope.modifyCenterData.newEmail='';

    document.getElementById('user_modifyWeChat').style.display='';
    $scope.getWeChatQRCode('');

    if(typeof($scope.userInfo.unionid)=='undefined'||
      $scope.userInfo.unionid.length==0){
      document.getElementById('user_modifyCenterHeader').innerText='绑定微信';
      document.getElementById('user_currentPhone').style.display='none';
      document.getElementById('user_currentCode').style.display='none';
    }
    else{
      document.getElementById('user_modifyCenterHeader').innerText='修改微信';
    }
    document.getElementById('modifyMessageDiv').style.display='none';
    document.getElementById('user_modifyPhone').style.display='none';
    document.getElementById('user_modifyEmail').style.display='none';
    document.getElementById('user_modifyControl').style.display='none';

    var params1={};
    params1.centerData={}
    params1.centerData.page=0;
    params1.centerData.unionid=$scope.userInfo.unionid;//当前微信unionid
    params1.centerData.phone=$scope.userInfo.tel;
    params1.centerData.messageCode=$scope.modifyCenterData.messageCode;

    usercenterService.setCenterData(params1,function(res){
      if(res===false){
        console.log('修改或绑定微信失败');
        return;
      }else {
        jQuery('#wechat_modal').modal('show');
      }
    });



  }

  $scope.getWeChatQRCode=function(msgCode){
    var wechatobj = new WxLogin({
                  id: "wechatQRcode",
                  appid: "wxaec09771f7c5323d",
                  scope: "snsapi_login",
                  redirect_uri: encodeURIComponent("http://csp.smartalpha.cn/#/usercenter"),
                  state: msgCode,
                  style: "black",
                  href: "https://csp.smartalpha.cn:5679/wechatLogin.css"
                });
    $('iframe').css('height','230px');
  }



  //获取修改用户资料的短信验证码
  $scope.getUserCenterCode=function(){

    document.getElementById('modifyMessageDiv').style.display='none';

    if($scope.starTime==true){
      document.getElementById('modifyMessageDiv').style.display='';
      document.getElementById('modifyMessagePara').innerText='短信已发送,请等待';
      return;
    }

    $scope.starTime=true;
    var second =60;
    var userphone={};
    userphone.phone=$scope.userInfo.tel;
    usercenterService.sendUserCenterCode(userphone,function(res){
      if(res.result===false){
        console.log('sendUserCenter',res);

        document.getElementById('modifyMessageDiv').style.display='';
        document.getElementById('modifyMessagePara').innerText='短信已发送,请等待';

        $scope.starTime=false;
        $interval.cancel($scope.timePromise);
      }else {
        document.getElementById("user_codeBtn").innerHTML = "60秒后重新获取";
        $scope.timePromise = $interval(function(){
          if(second<=0){
              $interval.cancel($scope.timePromise);
              $scope.starTime=false;
              document.getElementById('user_codeBtn').innerHTML ="获取验证码";
          }else{
              document.getElementById('user_codeBtn').innerHTML = second + "秒后重新获取";
              second--;
          }
          },1000);
      }
    });
  }
  $scope.goTestRiskLevel=function(){
    $state.go('risklevel');
  }
  $scope.setHeaderName=function(userInfo){

    usercenterService.getUserInfo(userInfo,function(res){
      if(res==false){
        return;
      }
      if(res.conlevel==7||res.conlevel==2||res.conlevel==1)//只有是砖石会员才会显示策略产品
      {
        document.getElementById('product0Btn').style.display='';
        document.getElementById('product0BigBtn').style.display='';
      }
      document.getElementById('header_username').innerText=res.tel;
    });
  }


  $scope.setOrderState=function(orderID,orderState){
    var params={};
    params.orderID=orderID;
    params.orderState=orderState;
    orderService.setOrderState(params,function(res){
      if (res.result==false) {
        return;
      }
      $scope.getOrderAmount();

    });
  }

  $scope.getAllOrderState=function(){

    orderService.getAllOrderState('',function(res){
      if (res.result==false) {
        return;
      }
      $scope.allOrderState=[];

      var obj={osid:-1,osdesc:'全部'};
      $scope.currOrderState=obj;
      $scope.allOrderState.push(obj);
       for (var i = 0; i < res.length; i++) {
         if (res[i].osid==2) {
           continue;
         }
         $scope.allOrderState.push(res[i]);
       }


    });
  }

  $scope.getOrderAmount=function(){
    var params={};
    params.orderState=$scope.currOrderState.osid;
    orderService.getOrderAmount(params,function(res){
      if (res.result==false) {
        return;
      }
      $scope.orderAmount=res.orderAmount;
      console.log($scope.orderAmount);

      if($scope.orderAmount==0){
        document.getElementById('pageList').style.display='none';
        $scope.pageArr=[];
        $scope.orders=[];
        return;
      }
      else {
        document.getElementById('pageList').style.display='';
      }

      $scope.allPage=Math.ceil($scope.orderAmount/$scope.pageRows);
      if ($scope.currentpage>$scope.allPage) {
        $scope.currentpage=$scope.allPage;
      }
      $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);

      var option={};
      option.page=$scope.currentpage;
      option.orderState=$scope.currOrderState.osid;
      option.pageRows=$scope.pageRows;
      $scope.getOrder(option);
    });
  }

  $scope.gotoPage=function(pageObj){
    $scope.currentpage=pageObj;
    console.log('$scope.currentpage',$scope.currentpage);
    $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);

    //  var option={page:1请求页数,pageRows一页的数量,tacticsID:''请求策略,sortField:''排序字段,order=true;排序顺序}
    var option={};
    option.page=pageObj;
    option.orderState=$scope.currOrderState.osid;
    option.pageRows=$scope.pageRows;

    $scope.getOrder(option);
  }

  $scope.goFirstPage=function(){

      $scope.currentpage=1;
      $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);

      var option={};
      option.page=$scope.currentpage;
      option.orderState=$scope.currOrderState.osid;
      option.pageRows=$scope.pageRows;

      $scope.getOrder(option);

  }
  $scope.goLastPage=function(){
    $scope.currentpage=$scope.allPage;
    $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);

    var option={};
    option.page=$scope.currentpage;
    option.orderState=$scope.currOrderState.osid;
    option.pageRows=$scope.pageRows;

    $scope.getOrder(option);
  }

  $scope.goPreviousPage=function(){
    if($scope.currentpage>1)
      $scope.currentpage-=1;
      else {
        $scope.currentpage=1;
      }
      $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);

      var option={};
      option.page=$scope.currentpage;
      option.orderState=$scope.currOrderState.osid;
      option.pageRows=$scope.pageRows;

      $scope.getOrder(option);
  }
  $scope.goNextPage=function(){
    if($scope.currentpage<$scope.allPage)
      $scope.currentpage+=1;
      else {
        $scope.currentpage=$scope.allPage;
      }
      $scope.pageArr=calculateIndexes($scope.currentpage,$scope.allPage,$scope.maxPageSize);

      var option={};
      option.page=$scope.currentpage;
      option.orderState=$scope.currOrderState.osid;
      option.pageRows=$scope.pageRows;

      $scope.getOrder(option);
  }

  $scope.selectOrderState=function(obj){

    $scope.currOrderState=obj;
    console.log('selectOrderState',$scope.currOrderState);

  }
  $scope.findOrder=function(){
    $scope.currentpage=1;
    $scope.getOrderAmount();

  }

  $scope.userCenterInit=function(){
    UserInfoService.cspCheckLoginState('', function(res){
      if(!res.loginState){
        $('#loginModal').remove();
          $state.go('home');
          return;
      }else {
        console.log('cspCheckLoginState',res.uid);
				$scope.userInfo.uid=res.uid;
        $scope.setHeaderName(res);
        UserInfoService.cspCheckRiskState({},function(result) {
				if(!(result.result === 'succeed' && result.riskstate === true)) {
						event.preventDefault();// 取消默认跳转行为
						$state.go("risklevel");//跳转风险评测
					}
        });
      }
    });
  }

	jQuery(document).ready(function(){
    console.log('进入了用户中心');
    $('html,body').scrollTop(0); //不带动画
    document.getElementById('csp_header_containter').style.display = "block";
		document.getElementById('csp_footer').style.display = "block";
    document.getElementById('homeSpaceDiv_37px').style.display="block";


    document.getElementById('csp_header_comment_label').className = "csp_header_label";
    document.getElementById('csp_header_home_label').className = "csp_header_label";
    document.getElementById('csp_header_product_label').className = "csp_header_label";
    document.getElementById('csp_header_product0_label').className = "csp_header_label ";




    //设置user_codeInput变化就更二维码
    $('#user_codeInput').bind("input propertychange",function(){
      console.log('user_codeInput',$scope.modifyCenterData.messageCode);
      if($scope.modifyCenterData.modifyType==='modifyWeChat'){
        $scope.getWeChatQRCode($scope.modifyCenterData.messageCode);
      }
    });

    var height = document.documentElement.clientHeight*0.8;
    var minHeight = height + "px";
    document.getElementById('userSegment').style.minHeight = minHeight;

    //直接获取用户的数据,解决先跳转密码,在切换到用户中心没有数据的问题
    $scope.getUserInfo();
    //获取当前应该跳转的页面
    usercenterService.getCenterData('',function(res){
      console.log('getCenterData',res,typeof(res));
      if(res.result===false){
        console.log('getCenterData 失败');
      }
      else if (res.page===1) {
        $scope.goModifyPass();
        document.getElementById('user_databutton').className="item";
        document.getElementById('user_passbutton').className="active item";

      }
      else if (res.page===3) {
        $scope.goManageOrder();
        document.getElementById('user_databutton').className="item";
        document.getElementById('user_orderbutton').className="active item";
      }
      else if(res.page===5){
        $scope.goOwnedProduct();
        document.getElementById('user_databutton').className="item";
        document.getElementById('user_ownedProductbutton').className="active item";
      }
      else {
        $scope.goUserData();

        var wechatCode={};
        wechatCode.code=$location.search().code;
        res.messageCode=$location.search().state;
        console.log('wechatCode.code',wechatCode.code,res);
        if( typeof(wechatCode.code)=='undefined'||
          wechatCode.code.length==0 ){
            console.log('没有code就表示没有使用修改微信');
            return;//没有code就表示没有使用修改微信
        }

        if( !(typeof(res.unionid)=='undefined'||
          res.unionid.length==0) ){
            var userphone={};
            userphone.phone=res.phone;
            userphone.code=res.messageCode;
            usercenterService.checkUserCenterCode(userphone,function(res){
              console.log('checkUserCenterCode',res);
              if(res.result===false){
                document.getElementById('user_datamessageDiv').style.display='';
                document.getElementById('user_datamessageContent').innerText='修改微信出错,验证码不正确';
              }else{
                console.log('验证码正确');
                UserInfoService.cspCheckWechatCode(wechatCode,function(wechatResult){
                  if(wechatResult.result===false){
                    console.log('获取微信数据失败');
                    document.getElementById('user_datamessageDiv').style.display='';
                    document.getElementById('user_datamessageContent').innerText='获取微信数据失败,请重试';
                    return;
                  }
                  else {
                    console.log('获取微信数据成功',wechatResult);
                    var wechatAccount={};
                    wechatAccount.uid=$scope.userInfo.uid;
                    wechatAccount.openid=wechatResult.openid;
                    wechatAccount.unionid=wechatResult.unionid;
                    wechatAccount.nickname=wechatResult.nickname;
                    $scope.setWeChatAccount(wechatAccount);
                  }
                });
              }
            });
        }else {
          console.log('之前没有绑定微信,直接绑');
          UserInfoService.cspCheckWechatCode(wechatCode,function(wechatResult){
            if(wechatResult.result===false){
              console.log('获取微信数据失败');
              document.getElementById('user_datamessageDiv').style.display='';
              document.getElementById('user_datamessageContent').innerText='获取微信数据失败,请重试';

              return;
            }
            else {
              console.log('获取微信数据成功',wechatResult);
              var wechatAccount={};
              wechatAccount.uid=$scope.userInfo.uid;
              wechatAccount.openid=wechatResult.openid;
              wechatAccount.unionid=wechatResult.unionid;
              wechatAccount.nickname=wechatResult.nickname;
              $scope.setWeChatAccount(wechatAccount);
            }
          });
        }

      }
    });

	});



})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */

cspCtrls.controller('cspWchatRegCtrl',function($scope,$interval,WchatRegService,$state) {
	$scope.timePromise = undefined;
	$scope.cspWchatRegInit = function() {
		document.getElementById('csp_header_comment_label').className = "csp_header_label";
		document.getElementById('csp_header_home_label').className = "csp_header_label";
		document.getElementById('csp_header_product_label').className = "csp_header_label";
		document.getElementById('csp_header_product0_label').className = "csp_header_label ";

		$scope.wchatstatepath = 'tpls/usercenter/checkphone.html';
		$scope.wchatRegState = 1;
		WchatRegService.cspCheckWchatState({},function(res) {
			if(res.result !== 'succeed') {
				$('#loginModal').remove();
				$state.go('home');
			}
		})
	}
	$scope.cspwchatregPhoneFocus = function() {
		document.getElementById('csp_wchatreg_phone_tips').style.display = "none";
		document.getElementById('csp_wchatreg_phone_br').style.display = "block";
	}
	$scope.cspwchatregPhoneBlur = function(phone) {
		if(phone === undefined || phone === "") {
			document.getElementById('csp_wchatreg_phone_tips').style.display = "block";
			document.getElementById('csp_wchatreg_phone_tips').style.visibility = "visible";
			document.getElementById('csp_wchatreg_phone_label').innerHTML = "手机号码不能为空";
			document.getElementById('csp_wchatreg_phone_br').style.display = "none";
		}
	}
	$scope.cspwchatregImgCodeFocus = function() {
		document.getElementById('csp_wchatreg_imgcode_tips').style.display = "none";
		document.getElementById('csp_wchatreg_imgcode_br').style.display = "block";
	}
	$scope.cspwchatregImgCodeBlur = function(imgcode) {
		if(imgcode === undefined || imgcode === "") {
			document.getElementById('csp_wchatreg_imgcode_tips').style.display = "block";
			document.getElementById('csp_wchatreg_imgcode_tips').style.visibility = "visible";
			document.getElementById('csp_wchatreg_imgcode_label').innerHTML = "图片验证码不能为空";
			document.getElementById('csp_wchatreg_imgcode_br').style.display = "none";
		}
	}
	$scope.cspwchatregRefreshImgCode = function() {
		var time = Math.random()*10;
		document.getElementById('csp_wchatreg_imgcode_id').src = "/wchatregcode?width=120&height=40&time="+time;
		document.getElementById('csp_wchatreg_imgcode_tips').style.display = "none";
		document.getElementById('csp_wchatreg_imgcode_br').style.display = "block";
	}
	$scope.cspwchatregCodeFocus = function() {
		document.getElementById('csp_wchatreg_code_tips').style.display = "none";
		document.getElementById('csp_wchatreg_code_br').style.display = "block";
	}
	$scope.cspwchatregCodeBlur = function(code) {
		if(code === undefined || code === "") {
			document.getElementById('csp_wchatreg_code_tips').style.display = "block";
			document.getElementById('csp_wchatreg_code_tips').style.visibility = "visible";
			document.getElementById('csp_wchatreg_code_label').innerHTML = "手机验证码不能为空";
			document.getElementById('csp_wchatreg_code_br').style.display = "none";
		}
	}

	//点击获取验证码
	$scope.cspwchatregGetCode = function(phone,imgcode) {
		if(phone === undefined || phone === "" || (!(/^1[34578]\d{9}$/.test(phone)))) {
			document.getElementById('csp_wchatreg_phone_tips').style.display = "block";
			document.getElementById('csp_wchatreg_phone_tips').style.visibility = "visible";
			document.getElementById('csp_wchatreg_phone_label').innerHTML = "请先输入正确的手机号码";
			document.getElementById('csp_wchatreg_phone_br').style.display = "none";
		}
		else if(imgcode === undefined || imgcode === "") {
			document.getElementById('csp_wchatreg_imgcode_tips').style.display = "block";
			document.getElementById('csp_wchatreg_imgcode_tips').style.visibility = "visible";
			document.getElementById('csp_wchatreg_imgcode_label').innerHTML = "图片验证码不能为空";
			document.getElementById('csp_wchatreg_imgcode_br').style.display = "none";
		}
		else {
			//判断图片验证码是否正确
			var imgcodejson = {};
			imgcodejson.imgcode = imgcode;
			WchatRegService.cspCheckWchatImgCode(imgcodejson,function(result) {
				if(result.result === "succeed" ) {
					if(result.error === false) {
						//发送短信验证码
						var phonejson = {};
						phonejson.phone = phone;
						WchatRegService.cspWchatRegSendCode(phonejson,function(res) {
							if(res.result === "succeed") {
								if(res.error === false) {
									var second = 60;
									$scope.timePromise = undefined;
									$scope.timePromise = $interval(function(){
										if(second<=0){
										  $interval.cancel($scope.timePromise);
										  $scope.timePromise = undefined;
										  second = 60;
										  document.getElementById('csp_wchatreg_code_button_label').innerHTML = "获取验证码";
										  document.getElementById('csp_wchatreg_code_button').removeAttribute("disabled");
										}else{
										  document.getElementById('csp_wchatreg_code_button_label').innerHTML = second + "秒后重新获取";
										  document.getElementById('csp_wchatreg_code_button').disabled = "disabled";
										  second--;
										}
									},1000,100);
									alert("我们已经向您的手机发送了验证码，5分钟有效");
								}
								else {
									//发送失败
									document.getElementById('csp_wchatreg_code_tips').style.display = "block";
									document.getElementById('csp_wchatreg_code_tips').style.visibility = "visible";
									document.getElementById('csp_wchatreg_code_label').innerHTML = "短信验证码发送失败，请更换手机号或重试";
									document.getElementById('csp_wchatreg_code_br').style.display = "none";
								}
							}
							else {
								//发送失败
								document.getElementById('csp_wchatreg_code_tips').style.display = "block";
								document.getElementById('csp_wchatreg_code_tips').style.visibility = "visible";
								document.getElementById('csp_wchatreg_code_label').innerHTML = "短信验证码发送失败，请更换手机号或重试";
								document.getElementById('csp_wchatreg_code_br').style.display = "none";
							}
						})
					}
					else {
						document.getElementById('csp_wchatreg_imgcode_tips').style.display = "block";
						document.getElementById('csp_wchatreg_imgcode_tips').style.visibility = "visible";
						document.getElementById('csp_wchatreg_imgcode_label').innerHTML = "图片验证码错误";
						document.getElementById('csp_wchatreg_imgcode_br').style.display = "none";
					}
				}
				else {
					document.getElementById('csp_wchatreg_imgcode_tips').style.display = "block";
					document.getElementById('csp_wchatreg_imgcode_tips').style.visibility = "visible";
					document.getElementById('csp_wchatreg_imgcode_label').innerHTML = "图片验证码错误";
					document.getElementById('csp_wchatreg_imgcode_br').style.display = "none";
				}
			})
		}
	}

	//点击提交
	$scope.cspwchatregPassSubmit = function(phone,imgcode,code) {
		//先检查图片验证码，若不正确，不执行任何操作
		if(imgcode === undefined || imgcode === "") {
			document.getElementById('csp_wchatreg_imgcode_tips').style.display = "block";
			document.getElementById('csp_wchatreg_imgcode_tips').style.visibility = "visible";
			document.getElementById('csp_wchatreg_imgcode_label').innerHTML = "图片验证码不能为空";
			document.getElementById('csp_wchatreg_imgcode_br').style.display = "none";
		}
		else {
			//先清空所有错误状态
			document.getElementById('csp_wchatreg_phone_tips').style.display = "none";
			document.getElementById('csp_wchatreg_phone_br').style.display = "block";
			document.getElementById('csp_wchatreg_imgcode_tips').style.display = "none";
			document.getElementById('csp_wchatreg_imgcode_br').style.display = "block";
			document.getElementById('csp_wchatreg_code_tips').style.display = "none";
			document.getElementById('csp_wchatreg_code_br').style.display = "block";
			//检查手机号
			if(phone === undefined || phone === "") {
				document.getElementById('csp_wchatreg_phone_tips').style.display = "block";
				document.getElementById('csp_wchatreg_phone_tips').style.visibility = "visible";
				document.getElementById('csp_wchatreg_phone_label').innerHTML = "请先输入正确的手机号码";
				document.getElementById('csp_wchatreg_phone_br').style.display = "none";
			}
			else if(code === undefined || code === "") {
				document.getElementById('csp_wchatreg_code_tips').style.display = "block";
				document.getElementById('csp_wchatreg_code_tips').style.visibility = "visible";
				document.getElementById('csp_wchatreg_code_label').innerHTML = "手机验证码不能为空";
				document.getElementById('csp_wchatreg_code_br').style.display = "none";
			}
			else {
				var codejson = {};
				codejson.phone = phone;
				codejson.code = code;
				WchatRegService.cspWchatRegCheckCode(codejson,function(result) {
					if(result.result === "succeed") {
						if(result.match === true) {
							//写入数据库
							WchatRegService.cspWchatRegDB(codejson,function(res) {
								if(res.result === "succeed") {
									//跳转界面
									$interval.cancel($scope.timePromise);
									$scope.timePromise = undefined;
									$scope.wchatstatepath = 'tpls/usercenter/wchatregsuccess.html';
									$scope.wchatRegState = 2;
								}
								else {
									alert("数据库异常，请稍候重试!");
								}
							})
						}
						else {
							document.getElementById('csp_wchatreg_code_tips').style.display = "block";
							document.getElementById('csp_wchatreg_code_tips').style.visibility = "visible";
							document.getElementById('csp_wchatreg_code_label').innerHTML = "验证码错误";
							document.getElementById('csp_wchatreg_code_br').style.display = "none";
						}
					}
					else {
						document.getElementById('csp_wchatreg_code_tips').style.display = "block";
						document.getElementById('csp_wchatreg_code_tips').style.visibility = "visible";
						document.getElementById('csp_wchatreg_code_label').innerHTML = "验证码错误";
						document.getElementById('csp_wchatreg_code_br').style.display = "none";
					}
				})
			}
		}
	}

	$scope.cspWchatRegLoad = function() {
		if($scope.wchatRegState === 2) {
			console.log("dfjfldsljfd");
			var second = 1;
			$scope.timePromise = undefined;
			$scope.timePromise = $interval(function(){
				switch (second % 5) {
					case 1:
						document.getElementById('csp_wchatreg_success_time_label').innerHTML = "。";
						break;
					case 2:
						document.getElementById('csp_wchatreg_success_time_label').innerText = "。。";
						break;
					case 3:
						document.getElementById('csp_wchatreg_success_time_label').innerText = "。。。";
						break;
					case 4:
						document.getElementById('csp_wchatreg_success_time_label').innerText = "。。。。";
						break;
					default:
						document.getElementById('csp_wchatreg_success_time_label').innerText = "";
						break;
				}
				second ++;
			},1000,100);
			WchatRegService.cspWchatAutoLogin({},function(loginres) {
				$interval.cancel($scope.timePromise);
				$scope.timePromise = undefined;
				$scope.wchatRegState = 1;
				console.log(loginres);
				if(loginres.result === "succeed") {
					console.log("跳转了");
					$('#loginModal').remove();
					$state.go('home');
				}
				else {
					//先不管
				}
			})
		}
	}
})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */

cspCtrls.controller('wechatCtrl',
function($scope,$state,$http,$rootScope,usercenterService,UserInfoService)
{

jQuery(document).ready(function(){
  if(!document.getElementById('treatyCheckBox').checked){
    document.getElementById('login_container2').style.display='none';
    document.getElementById('wechatLoginCheckBoxTips').style.display='';
  }

  console.log('login_container2');
  var wechatobj = new WxLogin({
                id: "login_container2",
                appid: "wxaec09771f7c5323d",
                scope: "snsapi_login",
                redirect_uri: encodeURIComponent("http://csp.smartalpha.cn/#/home"),
                state: "STATE",
                style: "black",
                href: "https://csp.smartalpha.cn:5679/wechatLogin.css"});
                // href: "https://www.2ciyun.com/css/weixin.css"});
  });
  // console.log('iframe',$('iframe').height();
  $('iframe:first').css('height','230px');
  console.log("iframe first",$('iframe:first'), $('iframe:first').contents().find('.qrcode:first'));
  $('iframe:first').contents().find('.qrcode').css('width','50px')
  // $('iframe:first').document.find('.qrcode:first').css('width', '50px');
})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
 cspCtrls.controller('wishListCtrl',
 function($scope,$state,wishListService, allocateStockService, wishListService) {
/*
* 全局变量定义
*/

 $scope.currentSelectTrid = '';
 $scope.currentSelectTridName = '';
 $scope.currentSelectTid = 0;
 $scope.currentSelectTidName = '';
 // $scope.wishListTips = '';
 var drapingId = "";
 var isAddrow = false;
 $scope.surplusBp =  0;
 $scope.marketPrice = 0;


 $scope.BPvalue = 0;


   $scope.wishListCtrlInit = function(){
     document.getElementById('csp_header_containter').style.display = "none";
     document.getElementById('csp_footer').style.display = "none";
     document.getElementById('homeSpaceDiv_37px').style.display = "none";
     window.scrollTo(0,0);
   }
   // 初始化页面
   $(document).ready(function(){
     // 获取该登录maid下的交易单元
          var a= {maid:''};
          a.maid = 1;
          allocateStockService.getModel(a, function(res){
            $scope.model = res;

            //  该页面时下拉框的初始化
                 $('.js-trid').dropdown({
                     onChange: function(value, text, $choice){


                        $scope.$apply(function(){
                          $scope.currentSelectTrid = value.split('(')[1].replace(')', '');
                          $scope.currentSelectTridName = value;
                        })

                     },
                     on: 'hover'
                 })

          })

          // $(".groupWish-view").addClass("active");

          $scope.tableOperator();

          /**从左表拖动一条记录到右表*/
          $(".js-table-container,.group-wish-list-table").droppable({
              drop: function(event, ui) {

                console.log("drapingId-------------",drapingId)
                  if (drapingId !== undefined && drapingId !== "" && drapingId !== null) {
                      if (isAddrow) {
                          /** 增加一条记录 */
                          console.log('isAddrow',isAddrow)
                          var leftRowObj = $('#left' + drapingId);

                          console.log('leftRowObj------',leftRowObj)
                          var rightRowObj = $('#right' + drapingId);
                          if (rightRowObj.length > 0) {
                              console.log("exist");

                                    // $('.wish_list_tips').css("display","block");
                                    // $scope.wishListTips = '该股票已存在于心愿清单，可进行数量更改或删除操作'
                                    //   $('.wish_list_tips').text($scope.wishListTips)
                                    //    setTimeout(function(){
                                    //        $scope.wishListTips = '';
                                    //        $('.wish_list_tips').css("display","none");
                                    //    }, 3000);

                                       csp.notify('notice', {
                                           msg: '该股票已存在于心愿清单，可进行数量更改或删除操作',
                                           delay: 5000,
                                       });

                              return ;
                          } else {

                            var surBp =$(".js-surplusBp-value").text().split(':')[1];
                            $scope.surplusBP = $scope.unformat(surBp);
                            console.log($scope.surplusBP,surBp)

                              var calRlt = $scope.calCurMarketValue(drapingId, 100,$scope.surplusBP);
                              var cAmount = $scope.calCurUnitAmount(drapingId, 100);

                              if (calRlt) {
                                  var stockNum = 0;
                                  var rowObjs = $(leftRowObj).children();
                                          if(cAmount){
                                              stockNum = 100
                                          }else{
                                              stockNum = $(rowObjs[5]).html();
                                          }
                                  var stockNo = $(rowObjs[1]).html();
                                  var stockName = $(rowObjs[2]).html();
                                  var marketVal = $scope.formatNumber(100 * $scope.calStockUnitPrice(stockNo.split('.')[0]),2);
                                  var idStr = "right" + drapingId;
                                  var insertHtmlStr = '<tr class="js-right-row" id="' + idStr + '"><td>' + 0 + '</td><td>'
                                                  + stockNo + '</td><td>' + stockName + '</td><td class="js-amount-right">'
                                                  + '<div class="ui icon input js-stock-num"><input type="text" value="'
                                                  + stockNum + '" ><div class="js-num-change"><i class="caret up link icon"></i>'
                                                  + '<i class="caret down link icon"></i></div></div></td><td class="js-num-right">'
                                                  + marketVal + '</td>'
                                                  + '<td><i class="trash outline big link icon" data-content="移除"></i>'
                                                  + '</td></tr>';
                                  var tableConObjs = $(this).children();
                                  var tableConObj = tableConObjs[0];
                                  var tableObjs = $(tableConObj).children();
                                  var tableObj = tableObjs[0];
                                  var tbodyObj = tableObjs[1];
                                  var bodyObjs = $(tableObj).next().children();
                                  if (bodyObjs.length > 0) {
                                      $(tbodyObj).append(insertHtmlStr);
                                  } else {
                                      $(tableObj).next().append(insertHtmlStr);
                                  }
                                  $scope.updateCurMaketValue();
                              } else {
                                  // 弹出对话框提示超过了BP值
                                  //$('.overBP.modal').modal('show');
                                  csp.notify('notice', {
                                      msg: '超出剩余杠杆BP,无法添加进心愿清单',
                                      delay: 5000,
                                  });

                                  //      $scope.wishListTips = '超出剩余杠杆BP,无法添加进心愿清单'
                                  //      $('.wish_list_tips').css("display","block")
                                  //       $('.wish_list_tips').text($scope.wishListTips)
                                  //
                                  //          setTimeout(function(){
                                  //              $scope.wishListTips = '';
                                  //              $('.wish_list_tips').css("display","none");
                                  //          }, 3000);
                                  //
                                  //
                                  // console.log("超出剩余杠杆BP_拖动");
                              }
                              /** 注释掉了整手判断的条件 */
                              // else{
                              //     console.log("ready 超过数量")
                              //     csp.notify('notice', {
                              //         msg: '该券在券表中数量不足100，无法添加进心愿清单',
                              //         delay: 15000,
                              //     });
                              //     console.log("超出券表中该支证券数量");
                              //     return ;
                              // }
                          }
                        }
                      }
                      $scope.tableOperator();
                      $scope.dealRightTableNo();
                  }
              })


   })


   //监听
   $scope.$watch('currentSelectTrid',function(){
     console.log('$scope.currentSelectTrid',$scope.currentSelectTrid)
     if($scope.currentSelectTrid){
       var a= {trid:''};
       a.trid = $scope.currentSelectTrid;
        $scope.refreshUnitStocks($scope.currentSelectTrid)
        wishListService.getTidModel(a, function(res){

          $scope.tidModel = res;
         if(res.length==0){
           $scope.currentSelectTid = '';
           $scope.currentSelectTidName = '交易单元小组';
           $('.js_tid').text($scope.currentSelectTidName)
         }else{


           //  该页面时下拉框的初始化
                $('.js-tid').dropdown({
                    onChange: function(value, text, $choice){
                    $scope.$apply(function(){
                      console.log(value);
                      $scope.currentSelectTid = value.split('(')[1].split(')')[0];
                        console.log('$scope.currentSelectTid',$scope.currentSelectTid)
                        //  $scope.currentSelectTidName = value;
                       })

                    },
                    on: 'hover'
                })
         }


       })


  }
})

$scope.$watch('currentSelectTid',function(){
  if($scope.currentSelectTid){
    $scope.refreshBP($scope.currentSelectTid)
    $scope.refreshGroupWish($scope.currentSelectTrid,$scope.currentSelectTid)

  }
})


/**
 * @func clearTable
 * @desc 清空表格
 * @author ll
 * @param {string} idStr 想要清空的表格id
 */
$scope.clearTable = function(idStr){
    try{
        var thistable = document.getElementById(idStr);
        var trs = thistable.getElementsByTagName("tr");
        for(var i = trs.length - 1; i > 0; i--) {
            thistable.deleteRow(i);
        }
    }catch(e){

    }


}

/**
 * @func dragLeftTable
 * @desc 左表拖动
 * @author ll
 */
 $scope.dragLeftTable = function(){
    //左边表格拖拽操作
    $(".js-left-table").draggable({
        cursor: "move",
        cursorAt: { top: -2, left: -2 },
        helper: "clone",
        start: function() {
            var rows = $(this).children();
            var stockNo = $(rows[1]).html();
            drapingId = stockNo.split('.')[0];
            isAddrow = true;
        }
    });
}

/**
 * @func refreshUnitStocks
 * @desc 刷新券表界面
 * @author ll
 */
 $scope.refreshUnitStocks = function(curTrid){
    var a = {trid:''};
    a.trid = curTrid;
    wishListService.getUnitStocks(a,function(data) {

            $scope.clearTable("left-table")
            if (data.length >= 0) {
                var insertHtmlStr = '';
                for (var i = 0; i < data.length; i++) {
                    var index = i+1
                    var stockNo = data[i].cid;
                    var stockName = data[i].cname;
                    var stockNum = $scope.formatNumber(data[i].totalsa);
                    var idStr = "left" + data[i].cid.split('.')[0];
                    var marketVal = $scope.formatNumber(data[i].preclose,2);
                    var surplusNum = $scope.formatNumber(data[i].totalsa-data[i].allocatedsa);
                    var surplusVal = $scope.formatNumber((data[i].totalsa-data[i].allocatedsa)*data[i].preclose,2);
                    var tempInsertHtmlStr = '<tr class="js-left-table ui-widget-content" id="'
                                          + idStr + '"><td>'+index+'</td><td>' + stockNo + '</td><td>'
                                          + stockName + '</td><td class="js-num-left">'
                                          + stockNum + '</td><td class="js-num-left">'
                                          + marketVal + '</td><td class="js-num-left">'
                                          + surplusNum + '</td><td class="js-num-left">'
                                          +surplusVal+'</td></tr>';
                    insertHtmlStr += tempInsertHtmlStr;
                }
                if (insertHtmlStr.length > 0) {
                    //console.log("getUnitStocks insertHtmlStr--->", insertHtmlStr);
                    $(".js-left-tbody").append(insertHtmlStr);
                    //tableOperator();
                    /** 左边表格拖拽操作 */
                    $scope.dragLeftTable()
                }
            }
        $(".groupWish-view").removeClass("active");
    });
}


/**
 * @func formatNumber
 * @desc 格式化数字
 * @param {number} num 需要被格式化的数字
 * @param {int} [precision] 格式化后的精度
 * @author lizhexi
 */
$scope.formatNumber = function(num, precision) {
    var parts;
    // 判断是否为数字
    if (!isNaN(parseFloat(num)) && isFinite(num)) {
        num = Number(num);
        // 处理小数点位数
        num = (typeof precision !== 'undefined' ? num.toFixed(precision) : num).toString();
        // 分离数字的小数部分和整数部分
        parts = num.split('.');
        // 整数部分加[separator]分隔, 借用一个著名的正则表达式
        parts[0] = parts[0].toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1' + ',');

        return parts.join('.');
    }
    return NaN;
}


/**
 * @func unformat
 * @desc 将加了千位符的各字符串转换为数字
 * @param {String} str 需要被转换为数字的字符串
 * @author ll
 */
$scope.unformat = function(str){
    var num =str.split(",")
    var realnum = +(num.join(''))
    return realnum;
}

/**
 * @func updateCurMaketValue
 * @desc 更新心愿清单总市值
 * @author wangxiong
 */
 $scope.updateCurMaketValue =  function() {
    var curTotalVal = 0.0;
    var rowObjs = $(".js-right-table").children();
    for (var i = 0; i < rowObjs.length; i++) {
        var rows = $(rowObjs[i]).children();
        var marketValObj = rows[4];
        var marketVal = $scope.unformat($(marketValObj).text());
        curTotalVal += parseFloat(marketVal);
        var cnameObj = rows[2];
        var cname=$(cnameObj).text();
    }
    $scope.marketPrice = curTotalVal.toFixed(2)
    var curTotalValStr = "市值:" + $scope.formatNumber(curTotalVal,2);

    $(".js-market-value").html(curTotalValStr);

}

/**
 * @func calStockUnitAmount
 * @desc 获取左侧表该股剩余股票数量
 * @author lizhexi
 */
$scope.calStockUnitAmount = function(stockNo) {
    var leftRowObj = $('#left' + stockNo);
    var leftrowObjs = $(leftRowObj).children();
    var unitAmount = $scope.unformat($(leftrowObjs[5]).text());
    return unitAmount;
}

/**
 * @func calCurUnitAmount
 * @desc 判断心愿清单某支股票数量是否超过券表中数量
 * @author lizhexi
 * @param Boolean  rlt  false-超过不可继续操作 true-未超过可继续操作
 */
$scope.calCurUnitAmount = function(stockNo, stockNum) {
    var rlt = false;
    var unitAmount = $scope.calStockUnitAmount(stockNo);
    if (stockNum >unitAmount) {
        rlt = false;
    }else{
        rlt = true;
    }
    return rlt;
}
/**
 * @func calStockUnitPrice
 * @desc 获取左侧表格指定股票单价
 * @author wangxiong
 */
$scope.calStockUnitPrice = function(stockNo) {
    var leftRowObj = $('#left' + stockNo);
    var leftrowObjs = $(leftRowObj).children();
    var unitPrice = $scope.unformat($(leftrowObjs[4]).text())
    return unitPrice;
}

/**
 * @func calCurMarketValue
 * @desc 判断心愿清单市值是否超过BP
 * @author wangxiong
 * @param Boolean  rlt  false-超过不可继续操作 true-未超过可继续操作
 */
$scope.calCurMarketValue = function(stockNo, stockNum, surplusBp) {
    var rlt = false;
    var unitPrice = $scope.calStockUnitPrice(stockNo);
    var curTotalVal = 0.0;
    var rowObjs = $(".js-right-table").children();
    for (var i = 0; i < rowObjs.length; i++) {
        var rows = $(rowObjs[i]).children();
        console.log('rows[1].text()', $(rows[1]).text())
        if (stockNo === $(rows[1]).text().split('.')[0]) {
            continue;
        }
        var marketValObj = rows[4];
        var marketVal = $scope.unformat($(marketValObj).text());
        curTotalVal += parseFloat(marketVal);
    }
    console.log(curTotalVal,stockNum,unitPrice,surplusBp)
    if (curTotalVal + stockNum * unitPrice > surplusBp) {
        rlt = false;
    }else{
        rlt = true;
    }
    return rlt;
}
/**
 * @func dealRightTableNo
 * @desc 处理右表编号
 * @author wangxiong
 */
$scope.dealRightTableNo = function() {
    var rowObjs = $(".js-right-table").children();
    for (var i = 0; i < rowObjs.length; i++) {
        var rows = $(rowObjs[i]).children();
        var rowNo = rows[0];
        $(rowNo).text(i + 1);
    }
}


/**
 * @func delayInputDeal
 * @desc 判断输入数量是否是数字。目前未判断是否为整百。可以日后改。
 * @author wangxiong
 */
$scope.delayInputDeal = function(data) {
    var curNumStr = $(data).val();
    var oldValue =$(data).attr("value");
    if(/^\d+$/.test(curNumStr)){
        /** 判断输入数量是否为正整数 */
        var dealNumStr = curNumStr.replace(/\D/g,'');
        //console.log("oldVaue-->",oldValue,"dealNumStr-->",dealNumStr);
        $(data).val(dealNumStr);
        var stockNo = $(data).parent().parent().prev().prev().text();
        //console.log("stockNo-->",stockNo)
            var tempStr = dealNumStr;
            var surBp =$(".js-surplusBp-value").text().split(':')[1];
            $scope.surplusBP = $scope.unformat(surBp);

            /** 注释掉了整手判断的条件 */
            // if (tempStr % 100 == 0) {
                 var cAmount = $scope.calCurUnitAmount(stockNo.split('.')[0], parseInt(tempStr));
                    if(cAmount){


                         var rlt = $scope.calCurMarketValue(stockNo.split('.')[0],parseInt(tempStr),$scope.surplusBP);

                            if(rlt) {
                               $(data).attr("value",dealNumStr)
                               //console.log("cAmount--->",cAmount,"rlt-->",rlt,"替换成功",$(data).attr("value"));
                            }else{
                                $(data).val(oldValue);
                                csp.notify('notice', {
                                    msg: '超出剩余杠杆BP，请重新确认数量',
                                    delay: 5000,
                                });
                                // $('.wish_list_tips').css("display","block");
                                // $scope.wishListTips = '超出剩余杠杆BP，请重新确认数量'
                                //     $('.wish_list_tips').text($scope.wishListTips)
                                //    setTimeout(function(){
                                //        $scope.wishListTips = '';
                                //        $('.wish_list_tips').css("display","none");
                                //    }, 3000);
                                //
                                console.log("超出剩余杠杆BP_input");
                            }
                        }else{
                            $(data).val(oldValue);
                            csp.notify('notice', {
                                msg: '超出券表中该支证券数量,请重新确认数量',
                                delay: 5000,
                            });
                            // $('.wish_list_tips').css("display","block");
                            // $scope.wishListTips = '超出券表中该支证券数量,请重新确认数量'
                            //     $('.wish_list_tips').text($scope.wishListTips)
                            //    setTimeout(function(){
                            //        $scope.wishListTips = '';
                            //        $('.wish_list_tips').css("display","none");
                            //    }, 3000);

                            console.log("超出券表中该支证券数量");
                        }
            // } else {
            //     //TODO modal
            //     csp.notify('notice', {
            //         msg: '请输入以100股为单位的数据',
            //         delay: 15000,
            //     });
            //     $(data).val(oldValue);
            // }
            var unitPrice = $scope.calStockUnitPrice(stockNo.split('.')[0]);
            tempStr = $(data).val();
            var curVal = $scope.formatNumber(tempStr * unitPrice,2);
            $(data).parent().parent().next().html(curVal);
            $scope.updateCurMaketValue();
    }else{
        $(data).val(oldValue);
        csp.notify('notice', {
            msg: '请输入正确格式数量',
            delay: 5000,
        });
        // $('.wish_list_tips').css("display","block");
        // $scope.wishListTips = '请输入正确格式数量'
        //     $('.wish_list_tips').text($scope.wishListTips)
        //    setTimeout(function(){
        //        $scope.wishListTips = '';
        //        $('.wish_list_tips').css("display","none");
        //    }, 3000);

    }


}

/**
 * @func tableOperator
 * @desc 操作心愿单
 * @author wangxiong
 */
$scope.tableOperator = function() {
        $scope.dragLeftTable()
        $(".js-right-row").draggable({
            cursor: "move",
            cursorAt: { top: -2, left: -2 },
            helper: "clone",
            start: function() {
                var rows = $(this).children();
                var stockNo = $(rows[1]).html();
                drapingId = stockNo.split('.')[0];
                isAddrow = false;
            }
        });
        //数量增加100
        $(".caret.up.link").unbind("click").click(function() {
            var curNumStr = $(this).parent().prev().val();
            if (curNumStr == null || curNumStr == undefined || curNumStr == '') {
                curNumStr = '0';
            }
            var stockNo = $(this).parent().parent().parent().prev().prev().html();
            var stockInput = $(this).parent().prev().val();
            console.log("curNumStr", curNumStr);
            console.log("stockNo", stockNo);
            console.log("stockInput", stockInput);
            var surBp =$(".js-surplusBp-value").text().split(':')[1];
            $scope.surplusBP = $scope.unformat(surBp);
            console.log('input',$scope.surplusBP,surBp)
             var rlt = $scope.calCurMarketValue(stockNo.split('.')[0], parseInt(stockInput) + 100, $scope.surplusBP);
             var cAmount=$scope.calCurUnitAmount(stockNo.split('.')[0], parseInt(stockInput) + 100);
            if(cAmount){
                    if (rlt) {
                        var curNum = 0;
                        curNum = parseInt(curNumStr) + 100;
                        $(this).parent().prev().val(curNum);
                        $(this).parent().prev().attr("value",curNum);
                        var unitPrice = $scope.calStockUnitPrice(stockNo.split('.')[0]);
                        var curVal = $scope.formatNumber(curNum * unitPrice,2);

                        $(this).parent().parent().parent().next().html(curVal);
                    } else {
                        //TODO 对话框

                        csp.notify('notice', {
                            msg: '超出剩余杠杆BP，请重新确认心愿清单',
                            delay: 5000,
                        });
                        // $('.wish_list_tips').css("display","block");
                        // $scope.wishListTips = '超出剩余杠杆BP，请重新确认心愿清单'
                        //   $('.wish_list_tips').text($scope.wishListTips)
                        //    setTimeout(function(){
                        //        $scope.wishListTips = '';
                        //        $('.wish_list_tips').css("display","none");
                        //    }, 3000);

                        //console.log("超出剩余杠杆");
                        console.log("数量增加失败-->", stockNo);
                    }
               }else{

                 csp.notify('notice', {
                     msg: '超出券表中该支证券数量,请重新确认数量',
                     delay: 5000,
                 });
                //  $('.wish_list_tips').css("display","block");
                //  $scope.wishListTips = '超出券表中该支证券数量,请重新确认数量'
                //    $('.wish_list_tips').text($scope.wishListTips)
                //     setTimeout(function(){
                //         $scope.wishListTips = '';
                //         $('.wish_list_tips').css("display","none");
                //     }, 3000);

                   console.log("超出券表中该支证券数量");
               }
            $scope.updateCurMaketValue();
        });

        //数量减少100
        $(".caret.down.link").unbind("click").click(function() {
            var stockNo = $(this).parent().parent().parent().prev().prev().html();
            var curNumStr = $(this).parent().prev().val();
            var curNum = 0;
                    curNum = parseInt(curNumStr) - 100;
                    if (curNum >=0) {
                        $(this).parent().prev().val(curNum);
                        $(this).parent().prev().attr("value",curNum);
                        var unitPrice = $scope.calStockUnitPrice(stockNo.split('.')[0]);
                        var curVal = $scope.formatNumber(curNum * unitPrice,2);
                        $(this).parent().parent().parent().next().html(curVal);
                    } else if (curNum >= -100) {
                        $(this).parent().prev().val(0);
                        $(this).parent().prev().attr("value",0);
                        $(this).parent().parent().parent().next().html(formatNumber(0,2));
                    }

            $scope.updateCurMaketValue();
        });

        //防止非法字符
        $("input").focus(function(){
            var inputObj = this
            var $inputObj = $(inputObj)
            var oldValue = $inputObj.attr("value")
                $inputObj.off("keyup").on("keyup",function(event) {
                    if(event.keyCode == "13"){
                      $inputObj.blur();
                   }
                 });
                    $inputObj.unbind("blur").blur(function(){
                           $scope.delayInputDeal(inputObj);


                  })

        })
        //隐藏按钮、显示按钮
        $(".input").on("mouseenter mouseleave", function(event) {
            var $me = $(this);
            if( event.type == "mouseenter"){
                $(this).children(".js-num-change").show();
            }else if(event.type == "mouseleave" ){
                 $(this).children(".js-num-change").hide();
            }
        });

        //删除记录
        $(".trash, .outline").on("click", function() {
            $(this).parent().parent().remove();
            $scope.dealRightTableNo();
            $scope.updateCurMaketValue();
        });


// //右边拖动自行处理
$(".js-right-row").droppable({
    accept:".js-right-row ",
    drop: function(event, ui) {
        if (drapingId !== undefined && drapingId !== "" && drapingId !== null) {

                //移动一条记录
                var dragRowObj = $('#right' + drapingId);
                var htmlStr = $(dragRowObj).html();
                var rowObjs = $(dragRowObj).children();
                var stockNo = $(rowObjs[1]).html();
                var stockName = $(rowObjs[2]).html();
                var stockNum1 = $(rowObjs[3]).children();
                var stockNum2 = $(stockNum1[0]).children();
                var stockNum = $(stockNum2[0]).val();
                var marketVal = $(rowObjs[4]).html();
                var idStr = "right" + drapingId;

                var insertHtmlStr = '<tr class="js-right-row" id="' + idStr + '"><td>' + 0 + '</td><td>'
                                + stockNo + '</td><td>' + stockName + '</td><td class="js-amount-right">'
                                + '<div class="ui icon input js-stock-num"><input type="text" value="'
                                + stockNum + '" ><div class="js-num-change"><i class="caret up link icon"></i>'
                                + '<i class="caret down link icon"></i></div></div></td><td class="js-num-right">'
                                + marketVal + '</td>'
                                + '<td><i class="trash outline big link icon" data-content="移除"></i>'
                                + '</td></tr>';
                var curRow = this;
                var parentObj = $(curRow);
                var pId = $(parentObj).attr("id");
                console.log("----->", pId);
                console.log("--->", 'right' + drapingId);
                if (pId == undefined || pId == "" || pId == null || pId === ('right' + drapingId)) {
                    return ;
                } else {
                    $(curRow).before(insertHtmlStr);
                    $(dragRowObj).remove();
                }
            $scope.tableOperator();
            $scope.dealRightTableNo();
        }
    }
});
}
/**
 * @func saveWishLists
 * @desc 保存用户心愿清单数据
 * @author
 */

 function wishList() {
     this.stockIndex = "";
     this.stockNo = "";
     this.stockName = "";
     this.stockNum = "";
     this.marketVal = "";
 }
$scope.saveWishLists = function() {
  var surBp =$(".js-surplusBp-value").text().split(':')[1];
  var surBp1= $scope.unformat(surBp);
  console.log('hhhhhh',surBp,surBp1);
    if( $scope.currentSelectTid  === 0){
      csp.notify('notice', {
          msg: '请先选择小组',
          delay: 5000,
      });
      // $('.wish_list_tips').css("display","block");
      // $scope.wishListTips = '请先选择小组'
      //   $('.wish_list_tips').text($scope.wishListTips)
      //    setTimeout(function(){
      //        $scope.wishListTips = '';
      //        $('.wish_list_tips').css("display","none");
      //    }, 3000);

    }else if( ($scope.marketPrice-surBp1)>0){
      console.log($scope.marketPrice,surBp1)
      csp.notify('notice', {
          msg: '心愿清单市值超过剩余杠杆BP值，不能进行该操作',
          delay: 5000,
      });
      // $('.wish_list_tips').css("display","block");
      // $scope.wishListTips = '心愿清单市值超过剩余杠杆BP值，不能进行该操作'
      //   $('.wish_list_tips').text($scope.wishListTips)
      //    setTimeout(function(){
      //        $scope.wishListTips = '';
      //        $('.wish_list_tips').css("display","none");
      //    }, 3000);

    }else{
            //获取当前表格中的值
            var wishLists = new Array();
            var stockIndex = "";
            var stockNo = "";
            var stockName = "";
            var stockNum = "";
            var valueStr = "";
            var trdate = new Date();
            var rowObjs = $(".js-right-table").children();
            for (var i = 0; i < rowObjs.length; i++) {
                var tempWishList = new wishList();
                var rows = $(rowObjs[i]).children();
                tempWishList.stockIndex = $(rows[0]).text();
                tempWishList.stockNo = $(rows[1]).text();
                tempWishList.stockName = $(rows[2]).text();
                var stockNumRowObjs = $(rows[3]).children();
                var stockNumInputObjs = $(stockNumRowObjs[0]).children();
                var stockNumObj = $(stockNumInputObjs[0]);
                var stockunitAmount = $scope.calStockUnitAmount(tempWishList.stockNo.split('.')[0]);
                tempWishList.stockNum = $(stockNumObj).val();
                if(stockunitAmount < tempWishList.stockNum){
                  csp.notify('notice', {
                      msg: '心愿清单中存在证券数量超过券表中其对应数量的',
                      delay: 5000,
                  });
                  // $('.wish_list_tips').css("display","block");
                  // $scope.wishListTips = '心愿清单中存在证券数量超过券表中其对应数量的'
                  //   $('.wish_list_tips').text($scope.wishListTips)
                  //    setTimeout(function(){
                  //        $scope.wishListTips = '';
                  //        $('.wish_list_tips').css("display","none");
                  //    }, 3000);
                  //

                    return ;
                }
                console.log("stockNumObj--->", tempWishList.stockNum);
                wishLists.push(tempWishList);
            }
            if (wishLists.length > 0) {
                var tempStr = '';
                for (var i = 0; i < wishLists.length; i++) {
                    tempStr += '("';
                    tempStr += wishLists[i].stockIndex;
                    tempStr += '","';
                    tempStr += wishLists[i].stockNo;
                    tempStr += '","';
                    tempStr += wishLists[i].stockName;
                    tempStr += '","';
                    tempStr += wishLists[i].stockNum;
                    tempStr += '","';
                    tempStr += trdate;
                    tempStr += '","';
                    tempStr += $scope.currentSelectTid;
                    tempStr += '","';

                    tempStr +=  $scope.currentSelectTrid;
                    tempStr += '"),';
                }
                if (tempStr.length > 0) {
                    valueStr = tempStr.substring(0, tempStr.length - 1);
                }
            //    console.log("valueStr", valueStr);
            }
            var a = {valueStr:'',gid:''};
            a.valueStr = valueStr;
            a.gid = $scope.currentSelectTid;
            wishListService.submitWishList(a,function(reveiveData) {
              csp.notify('notice', {
                  msg: '保存成功',
                  delay: 5000,
              });
              // $('.wish_list_tips').css("display","block");
              // $scope.wishListTips = '保存成功'
              //   $('.wish_list_tips').text($scope.wishListTips)
              //    setTimeout(function(){
              //        $scope.wishListTips = '';
              //        $('.wish_list_tips').css("display","none");
              //    }, 3000);

            });
        }
}

/**
 * @func refreshBP
 * @desc  刷新小组BP

 */
 $scope.refreshBP = function(curTid){
    console.log("curBP tid-->",curTid);
    var a = {gid:''};
    a.gid = curTid;

    wishListService.getGroupBpValue(a,function(data){
      var bpData = data.bpData
      var surplusHeaverBP = data.surplusHeaverBP


        $scope.BPvalue = parseFloat(bpData).toFixed(2);
        $scope.surplusBP = parseFloat(surplusHeaverBP).toFixed(2);



               console.log("获取BP值成功",$scope.surplusBP)
               $(".js-bp-value").html("BP:" + $scope.formatNumber($scope.BPvalue ,2));
               $(".js-surplusBp-value").html("剩余杠杆BP:" + $scope.formatNumber($scope.surplusBP ,2))

 })


}

/**
 * @func refreshGroupWish
 * @desc  刷新小组心愿清单

 */
$scope.refreshGroupWish = function(curTrid,curTid){

  var a = {gid:'',trid:''};
  a.gid = curTid;
  a.trid = curTrid;
  wishListService.getGroupWishList(a,function(data) {

            var rows = data.groupWishListdata
                $scope.clearTable("right-table")
            if (rows.length >= 0) {
                var insertHtmlStr = '';
                for (var i = 0; i < rows.length; i++) {
                    var stockNo = rows[i].cid;
                    var stockName = rows[i].cname;
                    var stockNum = rows[i].amount;
                    var stockIndex = rows[i].cindex;
                    var marketVal = $scope.formatNumber(stockNum*rows[i].preclose,2);
                    var idStr = "right" + rows[i].cid.split('.')[0];
                    var tempInsertHtmlStr = '<tr class="js-right-row" id="' + idStr + '"><td>' + stockIndex + '</td><td>'
                                    + stockNo + '</td><td>' + stockName + '</td><td class="js-amount-right">'
                                    + '<div class="ui icon input js-stock-num"><input type="text" value="'
                                    + stockNum + '" ><div class="js-num-change"><i class="caret up link icon"></i>'
                                    + '<i class="caret down link icon"></i></div></div></td><td class="js-num-right">'
                                    + marketVal + '</td>'
                                    + '<td><i class="trash outline big link icon" data-content="移除"></i>'
                                    + '</td></tr>';
                    insertHtmlStr += tempInsertHtmlStr;
                }
                if (insertHtmlStr.length > 0) {
                    $(".js-right-table").append(insertHtmlStr);
                     $scope.tableOperator();

                }

                $(".groupWish-view").removeClass("active");
            }
               $scope.updateCurMaketValue();

    });
}


})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
var cspFilters = angular.module('cspFilters', []);
cspFilters.filter('', function(){
  // return function(input, tid){
  //   var output ;
  //   if (input.tid == tid){
  //     output=input;
  //   }
  //
  //   return output;
  //
  // }
})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */

function cspManageProductFileChange(obj) {
	var filename = obj.value;
	if(filename === "") {
		//删除掉上次的
		document.getElementById('csp_manage_product_delete_button').click();
	}
	else {
		var file = filename.substring(12);
		var filekindarr = filename.split(".");
		var kind = "";
		if(filekindarr.length > 1) {
			kind = filekindarr[filekindarr.length -1].toLowerCase();
		}
		if(!(kind === "jpg" || kind === "png" || kind === "bmp")) {
			//error
			document.getElementById('csp_manage_product_error_button').click();
		}
		else {
			//上传
			document.getElementById('csp_manage_product_right_button').click();
		}
	}
}

function cspManageSelectFile() {
	document.getElementById("csp_manage_file_input").click();
}

function cspManageanalogProductFileChange(obj) {
	var filename = obj.value;
	if(filename === "") {
		//删除掉上次的
		document.getElementById('csp_manage_analogProduct_delete_button').click();
	}
	else {
		var file = filename.substring(12);
		var filekindarr = filename.split(".");
		var kind = "";
		if(filekindarr.length > 1) {
			kind = filekindarr[filekindarr.length -1].toLowerCase();
		}
		if(!(kind === "jpg" || kind === "png" || kind === "bmp")) {
			//error
			document.getElementById('csp_manage_analogProduct_error_button').click();
		}
		else {
			//上传
			document.getElementById('csp_manage_analogProduct_right_button').click();
		}
	}
}

function cspModuleFileChange(obj) {
	var filename = obj.value;
	if(filename === "") {
	}
	else {
		var file = filename.substring(12);
		var filekindarr = filename.split(".");
		var kind = "";
		if(filekindarr.length > 1) {
			kind = filekindarr[filekindarr.length -1].toLowerCase();
		}
		if(!(kind === "jpg" || kind === "png" || kind === "bmp")) {
			document.getElementById("csp_module_file_tips_label").innerText = "仅支持JPG,PNG,BMP格式的图片";
		}
		else {
			document.getElementById('csp_module_file_commit').click();
		}
	}
}

function cspManageImportLoadFileChange(obj) {
	var filename = obj.value;
	if(filename === "") {
	}
	else {
		var file = filename.substring(12);
		var filekindarr = filename.split(".");
		var kind = "";
		if(filekindarr.length > 1) {
			kind = filekindarr[filekindarr.length -1].toLowerCase();
		}
		if(!(kind === "csv" || kind === "xlsx" || kind === "xls")) {
			document.getElementById('csp_manage_import_file_error_btn').click();
		}
		else {
			document.getElementById('csp_manage_import_file_load_btn').click();
		}
	}
}

 function cspCustomerImportLoadFileChange (obj) {
	var filename = obj.value;
	if(filename === "") {
	}
	else {
		var file = filename.substring(12);
		var filekindarr = filename.split(".");
		var kind = "";
		if(filekindarr.length > 1) {
			kind = filekindarr[filekindarr.length -1].toLowerCase();
      console.log("yyyyyyyyyy",kind);
		}


		if(!(kind === "csv" || kind === "xlsx" || kind === "xls")) {
      document.getElementById('csp_customer_import_file_error_btn').click();

		}
		// else {
		// 	document.getElementById('csp_manage_import_file_load_btn').click();
		// }
	}
}





function cspModuleImgLoad(obj) {
	if(obj.width > obj.height ) {
		obj.style.width = "auto";
		obj.style.height = "150px";
	}
	else {
		obj.style.width = "150px";
		obj.style.height = "auto";
	}
	//设置上下左右居中
	var left = (150 -obj.width)/2 + "px";
	var top = (150-obj.height)/2 + "px";
	obj.style.marginLeft = left;
	obj.style.marginTop = top;

}

function cspModuleBigImgLoad(obj) {
	console.log(window.innerWidth,window.innerHeight);
	console.log(obj.src,obj.width,obj.height);
	if(obj.width >= window.innerWidth && obj.height < window.innerHeight) {
		console.log("宽缩小，高自动");
		obj.style.width = "100%";
		obj.style.height = "auto";
	}
	if(obj.width >= window.innerWidth && obj.height >= window.innerHeight) {
		if((obj.width*1000/window.innerWidth) > (obj.height*1000/window.innerHeight)) {
			console.log("宽缩小，高自动");
			obj.style.width = "100%";
			obj.style.height = "auto";
		}
		else {
			console.log("高缩小，宽自动");
			obj.style.width = "auto";
			obj.style.height = "100%";
		}
	}
	if(obj.width < window.innerWidth && obj.height >= window.innerHeight) {
		console.log("高缩小，宽自动");
		obj.style.width = "auto";
		obj.style.height = "100%";
	}
	var left = (-obj.width)/2 + "px";
	var top = (-obj.height)/2 + "px";
	console.log(left,top);
	obj.style.marginLeft = left;
	obj.style.marginTop = top;
}

// 对Date的扩展，将 Date 转化为指定格式的String
// 月(M)、日(d)、小时(h)、分(m)、秒(s)、季度(q) 可以用 1-2 个占位符，
// 年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3 位的数字)
Date.prototype.Format = function(fmt)
{ //author: meizz
	var o = {
		"M+" : this.getMonth()+1,                 //月份
		"d+" : this.getDate(),                    //日
		"h+" : this.getHours(),                   //小时
		"m+" : this.getMinutes(),                 //分
		"s+" : this.getSeconds(),                 //秒
		"q+" : Math.floor((this.getMonth()+3)/3), //季度
		"S"  : this.getMilliseconds()             //毫秒
	};
	if(/(y+)/.test(fmt))
		fmt=fmt.replace(RegExp.$1, (this.getFullYear()+"").substr(4 - RegExp.$1.length));
	for(var k in o)
		if(new RegExp("("+ k +")").test(fmt))
	fmt = fmt.replace(RegExp.$1, (RegExp.$1.length==1) ? (o[k]) : (("00"+ o[k]).substr((""+ o[k]).length)));
	return fmt;
}

function cspManageThemesMouseOver(obj) {
	obj.style.backgroundColor = "#d5d5d5";
}

function cspManageThemesMouseOut(obj) {
	obj.style.backgroundColor = "white";
}


function getMinimum(arr){
	var min=arr[0];
	for (var i = 1; i < arr.length; i++) {
		if(min>arr[i])
			min=arr[i];
	}
	return min;
}

//主要用于图表的显示,默认
function getMaximum(arr){
	var max=arr[0];
	for (var i = 1; i < arr.length; i++) {
		if(max<arr[i])
			max=arr[i];
	}
	return max;
}

function cspManageSpotLoadFileChange(obj) {
	var filename = obj.value;
	if(filename === "") {
	}
	else {
		var file = filename.substring(12);
		var filekindarr = filename.split(".");
		var kind = "";
		if(filekindarr.length > 1) {
			kind = filekindarr[filekindarr.length -1].toLowerCase();
		}
		if(!(kind === "csv" || kind === "xlsx" || kind === "xls")) {
			document.getElementById('csp_manage_spot_file_error_btn').click();
		}
		else {
			document.getElementById('csp_manage_spot_file_load_btn').click();
		}
	}
}

function cspManageFuturesLoadFileChange(obj) {
	var filename = obj.value;
	if(filename === "") {
	}
	else {
		var file = filename.substring(12);
		var filekindarr = filename.split(".");
		var kind = "";
		if(filekindarr.length > 1) {
			kind = filekindarr[filekindarr.length -1].toLowerCase();
		}
		if(!(kind === "csv" || kind === "xlsx" || kind === "xls")) {
			document.getElementById('csp_manage_futures_file_error_btn').click();
		}
		else {
			document.getElementById('csp_manage_futures_file_load_btn').click();
		}
	}
}

function loadStockFileChange(obj) {
	var filename = obj.value;
	if(filename === "") {
		document.getElementById('stockfile_error_btn').click();
	}
	else {
		// var file = filename.substring(12);
		var filekindarr = filename.split(".");
		var kind = "";
		if(filekindarr.length > 1) {
			kind = filekindarr[filekindarr.length -1].toLowerCase();
		}
		else {
			document.getElementById('stockfile_error_btn').click();
		}

		if(!(kind === "csv" || kind === "xlsx" || kind === "xls")) {
			document.getElementById('stockfile_error_btn').click();
		}
		else {
			document.getElementById('stockfile_load_btn').click();
		}
	}
}

//分页算法,current表示当前的，length表示总的页数，displayLength表示一次显示的分页数
function calculateIndexes(current, length, displayLength) {
 var indexes = [];
	current=current>length?length:current;

 var start = Math.round(current - displayLength / 2);
 var end =   Math.round(current + displayLength / 2);
 console.log('start',start,'end',end);
 if (start < 1) {
		 start = 1;
 }
 if (end !=start+displayLength-1) {
		 end = start+displayLength - 1 ;
 }
 if(end>length)
	 end=length;

 if(end-displayLength+1<start){
	 start=end-displayLength+1>0?end-displayLength+1:1;
 }

 for (var i = start; i <= end; i++) {
	 var obj={};
	 obj.page=i;
	 if (i==current) {
		 obj.select=true;
	 }else {
		 obj.select=false;
	 }
	 indexes.push(obj);
 }
 console.log(indexes);
 return indexes;
 }

 //操作登录界面背景图片
 function cspOperLoginBgChange() {
	 if(window.innerHeight <= 400) {
		 document.getElementById("csp_oper_login_html").style.height = "400px";
	 }
	 else {
		 document.getElementById("csp_oper_login_html").style.height = "100%";
	 }
 }



 //新建公告选择文件
 function cspManageNewNoticeFileChange(obj) {
	 var filename = obj.value;
 	if(filename === "") {
 		//删除掉上次的
 		document.getElementById('csp_manage_newnotice_file_delete_button').click();
 	}
 	else {
 		var file = filename.substring(12);
 		var filekindarr = filename.split(".");
 		var kind = "";
 		if(filekindarr.length > 1) {
 			kind = filekindarr[filekindarr.length -1].toLowerCase();
			if(kind === "pdf") {
				document.getElementById('csp_manage_newnotice_file_right_button').click();
			}
 		}
 	}
 }

 //导入用户选择文件
 function cspManageLoadUserLoadFileChange(obj) {
	 var filename = obj.value;
 	if(filename === "") {
 	}
 	else {
 		var file = filename.substring(12);
 		var filekindarr = filename.split(".");
 		var kind = "";
 		if(filekindarr.length > 1) {
 			kind = filekindarr[filekindarr.length -1].toLowerCase();
 		}
 		if(!(kind === "csv" || kind === "xlsx" || kind === "xls")) {
 			document.getElementById('csp_manage_futures_file_error_btn').click();
 		}
 		else {
 			document.getElementById('csp_manage_futures_file_load_btn').click();
 		}
 	}
 }

 //导入已购产品选择文件
 function cspManageLoadBoughtLoadFileChange(obj) {
	 var filename = obj.value;
   	 if(filename === "") {
     }
   	 else {
	    var file = filename.substring(12);
	    var filekindarr = filename.split(".");
	    var kind = "";
	    if(filekindarr.length > 1) {
		    kind = filekindarr[filekindarr.length -1].toLowerCase();
	    }
	    if(!(kind === "csv" || kind === "xlsx" || kind === "xls")) {
		    document.getElementById('csp_manage_loadbought_file_error_btn').click();
	    }
	    else {
		    document.getElementById('csp_manage_loadbought_file_load_btn').click();
	    }
    }
 }


 //传入最大值,返回设置图表的最大值和分段间隔
 var getMaxAndInterval = function(max)
 {
 	var splitNumber=5;//分割的块数
 	var interval=max/splitNumber;
 	var newinterval = interval;
 	var n = 0;

 	//获取数的十为底的次数,1为0,0.1为0
 	if(interval < 1)
 	{
 		var n = 1;
 		while(interval < 1)
 		{
 			interval = interval*10;
 			n = n - 1;
 		}
 	}
 	else
 	{
 		while(interval >= 1)
 		{
 			interval = interval/10;
 			n = n + 1;
 		}
 	}
 	console.log('n',n);

 	newinterval = Math.ceil(newinterval/Math.pow(10,n-1))*Math.pow(10,n-1);

 	if (Math.abs(n)+1<=20) {
 		n=Math.abs(n)+1;
 	}
	else{
		n=20;
	}
 	newinterval = parseFloat(newinterval.toFixed(n));

 	if(max >= newinterval*splitNumber - 0.5*newinterval)
 	{
 		max = newinterval * (splitNumber + 1);
 		splitNumber = splitNumber + 1;
 	}
 	else
 	{
 		max = newinterval*splitNumber;
 	}
	max = parseFloat(max.toFixed(n));

 	var obj={};
 	obj.max=max;
 	obj.interval=newinterval;

 	return obj;
 }

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */

/**
 * 配置路由。
 * 注意这里采用的是ui-router这个路由，而不是ng原生的路由。
 * ng原生的路由不能支持嵌套视图，所以这里必须使用ui-router。
 * @param  {[type]} $stateProvider
 * @param  {[type]} $urlRouterProvider
 * @return {[type]}
 */
var cspRouters = angular.module('cspRouters', ['ui.router']);

cspRouters.config(function($stateProvider, $urlRouterProvider){

  $urlRouterProvider.otherwise('/home');
  $stateProvider
    .state('home',{
      url: '/home',
      views: {
        '': {
          templateUrl: 'tpls/home/index.html'
        }
      }

    })

    .state('comment',{
      url: '/comment',
      views: {
        '': {
          templateUrl: 'tpls/comment/index.html',
        }
      }
    })

    .state('usercenter',{
        url: '/usercenter',
        views:{
            '': {
                templateUrl: 'tpls/usercenter/index.html'
            }
        },
        controller: 'usercenterCtrl'

    })
    .state('wchatreg',{
        url: '/wchatreg',
        views:{
            '': {
                templateUrl: 'tpls/usercenter/wchatregister.html'
            }
        }

    })

    .state('productView',{
        url: '/productView',
        views:{
            '': {
                templateUrl: 'tpls/productView/index.html'
            }
        },
        controller: 'productcontroller'
    })
    .state('productView0',{
        url: '/productView0',
        views:{
            '': {
                templateUrl: 'tpls/productView0/index.html'
            }
        },
        controller: 'productcontroller'
    })

    .state('allProducts',{
        url: '/allProducts',
        views:{
            '': {
                templateUrl: 'tpls/allProducts/index.html'
            }
        }
    })

    .state('allProducts0',{
        url: '/allProducts0',
        views:{
            '': {
                templateUrl: 'tpls/allProducts0/index.html'
            }
        }
    })

    .state('resetpass',{
        url: '/resetpass',
        views:{
            '': {
                templateUrl: 'tpls/resetpass/index.html'
            }
        }
    })
    .state('risklevel',{
        url:'/risklevel',
        views: {
            '': {
                templateUrl: 'tpls/risklevel/index.html'
            }
        }
    })
    .state('loginout',{
        url:'/loginout',
        views: {
            '': {
                templateUrl: 'tpls/loginout/index.html'
            }
        }
    })
    .state('managecenter',{
        url:'/managecenter',
        views: {
            '': {
                templateUrl: 'tpls/managecenter/index.html'
            }
        }
    })
    .state('customerGroup',{
      url:'/customerGroup',
      views:{
        '':{
          templateUrl: 'tpls/customerGroup/index.html'
        }
      }
    })
    .state('sendMessage',{
      url:'/sendMessage',
      views:{
        '':{
          templateUrl: 'tpls/sendMessage/index.html'
        }
      }
    })
    .state('operlogin',{
      url:'/operlogin',
      views:{
        '':{
          templateUrl: 'tpls/securitiesManage/operLogin.html'
        }
      }
    })
    .state('allocateStock',{
      url:'/allocateStock',
      views:{
        '':{
          templateUrl: 'tpls/allocateStock/index.html'
        }
      }
    })
    .state('tradeTeamManage',{
      url:'/tradeTeamManage',
      views:{
        '':{
          templateUrl: 'tpls/allocateStock/tradeTeamManageIndex.html'
        }
      }
    })
    .state('opermanage',{
      url:'/opermanage',
      views:{
        '':{
          templateUrl: 'tpls/operManage/index.html'
        }
      }
    })

    .state('layoutmanage',{
        url:'/layoutmanage',
        views:{
            '':{
                templateUrl: 'tpls/layoutmanage/index.html'
            }
        }
    })

    .state('unitManage',{
      url:'/unitManage',
      views:{
        '':{
          templateUrl: 'tpls/unitManage/index.html'
        }
      }
    })

    .state('wishList',{
      url:'/wishList',
      views:{
        '':{
          templateUrl: 'tpls/wishList/index.html'
        }
      }
    })
    .state('groupexchange',{
      url:'/groupexchange',
      views:{
        '':{
          templateUrl: 'tpls/groupexchange/index.html'
		}
	   }
	})

    .state('random',{
      url:'/random',
      views:{
        '':{
          templateUrl: 'tpls/random/index.html'
        }
      }
    })

    .state('importStockData',{
      url:'/importStockData',
      views:{
        '':{
          templateUrl: 'tpls/importStockData/index.html'
        }
      }
    })
    .state('operloginout',{
      url:'/operloginout',
      views:{
        '':{
          templateUrl: 'tpls/operloginout/index.html'
        }
      }
    })
})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
var cspServices = angular.module('cspServices', []);

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */

cspServices.factory('CommentService',function($http){

    var service = {};
    service.cspCommentSelectOpionByModule = function(params,callback) {
        $http({
            url: '/comment/selectopionbymodule',
            params: params,
            method: "GET"
        }).success(function(res) {
            callback(res);
        }).error(function(res) {
            var ret = {};
            ret.result = "failed";
            callback(ret);
        })
    }
    service.cspCommentGetReplysByTid = function(params,callback) {
        $http({
            url: 'comment/getreplysbytid',
            params: params,
            method: "GET"
        }).success(function(res) {
            callback(res);
        }).error(function(res) {
            var ret = {};
            ret.result = "failed";
            callback(ret);
        })
    }
    service.cspModuleAddReply = function(params,callback) {
        $http({
            url: 'comment/addreply',
            params: params,
            method: "POST"
        }).success(function(res) {
            callback(res);
        }).error(function(res) {
            var ret = {};
            ret.result = "failed";
            callback(ret);
        })
    }
    service.cspCommentSelectOpionsByVersion = function(params,callback) {
        $http({
            url: '/comment/selectopionbyversion',
            params: params,
            method: "GET"
        }).success(function(res) {
            callback(res);
        }).error(function(res) {
            var ret = {};
            ret.result = "failed";
            callback(ret);
        })
    }
    service.cspCommentUploadFile = function(params,callback) {
        $http({
			 method:'POST',
			 url:"/comment/fileload",
			 data: params,
			 headers: {'Content-Type':undefined},
			 transformRequest: angular.identity
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
    }
    service.cspCommentDeleteFile = function(params,callback) {
        $http({
            url: '/comment/deletefile',
            params: params,
            method: "POST"
        }).success(function(res) {
            callback(res);
        }).error(function(res) {
            var ret = {};
            ret.result = "failed";
            callback(ret);
        })
    }
    service.cspCommentAddOpion = function(params,callback) {
        $http({
            url: '/comment/addopion',
            params: params,
            method: "POST"
        }).success(function(res) {
            callback(res);
        }).error(function(res) {
            var ret = {};
            ret.result = "failed";
            callback(ret);
        })
    }
    service.cspCommentAddLike = function(params,callback) {
        $http({
            url: '/comment/addlike',
            params: params,
            method: "POST"
        }).success(function(res) {
            callback(res);
        }).error(function(res) {
            var ret = {};
            ret.result = "failed";
            callback(ret);
        })
    }
    service.cspCommentCancelLike = function(params,callback) {
        $http({
            url: '/comment/cancellike',
            params: params,
            method: "POST"
        }).success(function(res) {
            callback(res);
        }).error(function(res) {
            var ret = {};
            ret.result = "failed";
            callback(ret);
        })
    }
    return service;
  // var doRequest = function(path,params, method){
  //   return $http({
  //     url: path,
  //     params: params,
  //     method: method,
  //   })
  // }
  //
  // return {
  //   creatOpion: function(params,callback){
  //     doRequest('/comment/creatOpion', params, 'POST').success(function(res){
  //       console.log("我成功插入数据")
  //       callback(res)
  //     }).error(function(res){
  //       console.log("我插入数据失败",res)
  //     })
  //   },
  //   opionsDisplay: function(params,callback){
  //     doRequest('/comment/opionsDisplay', params, 'GET').success(function(res){
  //       console.log(JSON.stringify(res))
  //       callback(res)
  //     }).error(function(res){
  //
  //     })
  //   },
  //   likeClick: function(params, callback){
  //     doRequest('/comment/likeClick',params, 'POST').success(function(res){
  //       console.log("点赞成功")
  //       console.log(JSON.stringify(res))
  //       callback(res);
  //     }).error(function(res){
  //       console.log(JSON.stringify(res))
  //       console.log("点赞失败")
  //     });
  //   },
  //   likeAdd: function(params, callback){
  //     doRequest('/comment/likeAdd', params, 'POST').success(function(res){
  //       console.log("点赞加1成功")
  //       callback(res);
  //     }).error(function(res){
  //       console.log("点赞加一失败")
  //     });
  //   },
  //   likeQuery: function(params,callback){
  //     doRequest('/comment/likeQuery', params, 'GET').success(function(res){
  //       callback(res);
  //
  //     }).error(function(res){
  //
  //     })
  //   },
  //   usernameQuery: function(params,callback){
  //     doRequest('/comment/usernameQuery', params, 'GET').success(function(res){
  //       callback(res);
  //
  //     }).error(function(res){
  //
  //     })
  //   },
  //   reply: function(params,callback){
  //     doRequest('/comment/reply', params, 'POST' ).success(function(res){
  //       callback(res);
  //     }).error(function(res){
  //
  //     });
  //   },
  //   replyAdd: function(params, callback){
  //     doRequest('/comment/replyAdd', params, 'POST').success(function(res){
  //       console.log("回复加1成功")
  //       callback(res);
  //     }).error(function(res){
  //       console.log("回复加一失败")
  //     });
  //   },
  //   replyCounts: function(params, callback){
  //     doRequest('/comment/replyCounts', params, 'GET').success(function(res){
  //       callback(res);
  //     }).error(function(res){
  //
  //     })
  //   },
  //   replylist: function(params, callback){
  //     doRequest('/comment/replylist', params, 'GET').success(function(res){
  //       callback(res);
  //     }).error(function(res){
  //
  //     });
  //   },
  // }

})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */

cspServices.factory('HomeService', ['$http', function($http){
  var doRequest = function(path,params, method){
  return $http({
    url: path,
    params: params,
    method: method,
  })
}
 return {
   userCheck: function(params, callback){
     doRequest('/home/userCheck',params,'POST').success(function(res){
       callback(res);
     }).error(function(res){
       console.log("前端请求失败",res)
     })
   },
   reset: function(o,m){
     var t = typeof o;
     if(t == 'object'){
       for(var i in o){
         o[i]=0;
       }
     }
     o[m]=1;
     return o;
   },
   athen: function(params, callback){
      var self=this;
      doRequest('/home/athen',params, 'POST').success(function(res){

         if(res[0]==='undefined'||JSON.stringify(res)==='[]'){
           callback(res)
         }else {
              var user = {};
              user.uid=res[0].uid;
              user.username=res[0].username;
              user.tel=res[0].tel;
              user.email=res[0].email;


              console.log("看看user是什么",user)
              // self.getUserInfo.setUser(user);
              callback(user)
         }

      }).error(function(res){
        console.log("前端请求失败",res)
      })
    },
    lastLoginTime: function(params,callback){
    doRequest('/home/lastLoginTime', params, 'POST').success(function(res){
      callback(res)
    }).error(function(res){
        callback(res);
    })
  },
  sessionUid: function(params){
    doRequest('/home/sessionUid',params,'POST').success(function(res){

    }).error(function(res){

    })
  }

 }
}])

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
cspServices.factory('UserInfoService',function($http) {
	var service = {};
	service.cspCheckLoginState = function(params,callback) {
		$http({
			url: 'userinfo/checkloginstate',
			params: params,
			method: "POST"
		}).success(function(res) {
			//返回数据包含 result 值为 "succeed" ，loginState 值为 true,false
			//true 表示已经登录
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		})
	};

	service.cspCheckWechatCode= function(params,callback) {
		$http({
			url: 'userinfo/checkWechatCode',
			params: params,
			method: "POST"
		}).success(function(res) {
			console.log('cspCheckWechatCode service', res);
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			console.log('cspCheckWechatCode', res);
			callback(ret);
		})
	};

	service.WechatLogin= function(params,callback) {
		$http({
			url: 'userinfo/WechatLogin',
			params: params,
			method: "POST"
		}).success(function(res) {
			console.log('WechatLogin',res);
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.res=res;
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	};



	service.cspCheckRiskState = function(params,callback) {
			$http({
				url: 'userinfo/checkriskstate',
				params: params,
				method: "GET"
			}).success(function(res) {
				//请求结果 { 'result': 'succeed', 'riskstate': true/false} riskstate字段的值表示是否做了评测，用bool值表示
				callback(res);
			}).error(function(res) {
				var ret = {};
				ret.result = "failed";
				ret.reason = "请求失败";
				callback(ret);
			})
	};
	service.cspLoginOut = function(params,callback) {
		$http({
			url: 'userinfo/loginout',
			params: params,
			method: "GET"
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		})
	}
	service.cspCheckAuth = function(params,callback) {
		$http({
			url: 'userinfo/checkauth',
			params: params,
			method: "GET"
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		})
	};
	service.cspGetAllProduct = function(params,callback) {
		$http({
			url: 'userinfo/getallproduct',
			params: params,
			method: "GET"
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		})
	}

	service.getConLevel = function(params,callback) {
		$http({
			url: 'userinfo/getConLevel',
			params: params,
			method: "POST"
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}

	service.getRiskLevel = function(params,callback) {
		$http({
			url: 'userinfo/getRiskLevel',
			params: params,
			method: "POST"
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}

	service.checkAutoLogin = function(params,callback) {
		$http({
			url: 'userinfo/checkAutoLogin',
			params: params,
			method: "POST"
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}

	service.setAutoLoginState = function(params,callback) {
		console.log('setAutoLoginState',params);
		$http({
			url: 'userinfo/setAutoLoginState',
			params: params,
			method: "POST"
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}

	//检查登录状态，并根据cookie完成自动登录判断,参数需通过cookie传入账号密码格式如下
	// {
	// 	"username":"xxxxxxxx",
	// 	"password":"xxxxxxxx"
	// }
	service.cspUserCheckAndLoginByCookie = function(params,callback) {
		$http({
			url: 'userinfo/checkandloginbycookie',
			params: params,
			method: "POST"
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}

	return service;
});

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */


cspServices.factory('allocateStockService',function($http) {
	var service = {};


  	service.getModel=function(params,callback){

  		$http({
  			url:'/tradeTeamManage/getModel',
  			params: params,
  			method: 'GET'
  		}).success(function(res){
  			console.log(res);
  			callback(res);
  		}).error(function(res) {
  			var pro = {};
  			pro.result=false;
  			pro.reason='获取交易单元失败';
  			callback(pro);
  		});
  	}


//获取指定交易单元下未被分组的交易员
		service.getTradersNotInTeams=function(params,callback){

			$http({
				url:'/tradeTeamManage/getTradersNotInTeams',
				params: params,
				method: 'GET'
			}).success(function(res){
				console.log(res);
				callback(res);
			}).error(function(res) {
				var pro = {};
				pro.result=false;
				pro.reason='获取指定交易单元下未被分组的交易员失败';
				callback(pro);
			});
		}

//获取指定交易单元下未分组和在特定小组的成员信息
		service.getTradersForEdit=function(params,callback){

			$http({
				url:'/tradeTeamManage/getTradersForEdit',
				params: params,
				method: 'GET'
			}).success(function(res){
				console.log(res);
				callback(res);
			}).error(function(res) {
				var pro = {};
				pro.result=false;
				pro.reason='获取getTradersForEdit交易员失败';
				callback(pro);
			});
		}

//获取指定小组的小组成员及小组组长信息
		service.getTeamTraders=function(params,callback){

			$http({
				url:'/tradeTeamManage/getTeamTraders',
				params: params,
				method: 'GET'
			}).success(function(res){
				console.log(res);
				callback(res);
			}).error(function(res) {
				var pro = {};
				pro.result=false;
				pro.reason='获取指定小组的小组成员及小组组长信息失败';
				callback(pro);
			});
		}

		//新建小组数据库数据插入
				service.addNewTeam=function(params,callback){

					$http({
						url:'/tradeTeamManage/addNewTeam',
						params: params,
						method: 'POST'
					}).success(function(res){
						console.log(res);
						callback(res);
					}).error(function(res) {
						var pro = {};
						pro.result=false;
						pro.reason='新建小组数据插入失败';
						callback(pro);
					});
				}
				//获取交易单元下小组详细信息
						service.teamsInfo=function(params,callback){

							$http({
								url:'/tradeTeamManage/teamsInfo',
								params: params,
								method: 'GET'
							}).success(function(res){
								console.log(res);
								callback(res);
							}).error(function(res) {
								var pro = {};
								pro.result=false;
								pro.reason='获取交易单元下小组详细信息';
								callback(pro);
							});
						}





//确认编辑小组按钮
		service.editTeamConfirm=function(params,callback){

			$http({
				url:'/tradeTeamManage/editTeamConfirm',
				params: params,
				method: 'POST'
			}).success(function(res){
				console.log(res);
				callback(res);
			}).error(function(res) {
				var pro = {};
				pro.result=false;
				pro.reason='确认编辑小组失败';
				callback(pro);
			});
		}
//确认删除小组信息

service.delGid=function(params,callback){

	$http({
		url:'/tradeTeamManage/delGid',
		params: params,
		method: 'POST'
	}).success(function(res){
		console.log(res);
		callback(res);
	}).error(function(res) {
		var pro = {};
		pro.result=false;
		pro.reason='确认删除小组信息失败';
		callback(pro);
	});
}
  return service;
});

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */


cspServices.factory('customerGroupService',function($http) {
	var service = {};
	service.selectedCustomers=[];//保存已选择的客户的id

	console.log('customerGroupService初始化');
  service.createGroup=function(params,callback){

    $http({
      url:'/customerGroup/createGroup',
      params: params,
      method: 'POST'
    }).success(function(res){
      console.log(res);
      callback(res);
    }).error(function(res) {
      var pro = {};
      pro.result=false;
      pro.reason='创建分组失败';
      callback(pro);
    });
  }

	service.saveEditGroup=function(params,callback){

		$http({
			url:'/customerGroup/saveEditGroup',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='编辑分组失败';
			callback(pro);
		});
	}

	service.removeGroup=function(params,callback){

		$http({
			url:'/customerGroup/removeGroup',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='删除分组失败';
			callback(pro);
		});
	}


	service.getAllGroup=function(params,callback){

		$http({
			url:'/customerGroup/getAllGroup',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='获取所有分组失败';
			callback(pro);
		});
	}

	service.getUngroupedAmount=function(params,callback){

		$http({
			url:'/customerGroup/getUngroupedAmount',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='获取未分组分组失败';
			callback(pro);
		});
	}

	service.getGroupinfo=function(params,callback){

		$http({
			url:'/customerGroup/getGroupinfo',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='获取指定分组失败';
			callback(pro);
		});
	}

	service.getCustomers=function(params,callback){

		$http({
			url:'/customerGroup/getCustomers',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='获取指定分组客户失败';
			callback(pro);
		});
	}

	//获取多客户信息
	service.getCustomersFromID = function(params, callback) {
		$http({
			url:'/customerGroup/getCustomersFromID',
			params:params,
			method:'post'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res){
			var getCusInfo = {};
			getCusInfo.result = false;
			getCusInfo.info = '后台数据获取失败';
			callback(getCusInfo);
		});
	}


	//删除指定id的客户
	service.delCustomer = function(params, callback) {
		$http({
			url:'/customerGroup/delCustomer',
			params:params,
			method:'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res){
			var getInfo = {};
			getInfo.result = false;
			getInfo.info = '删除客户信息失败';
			callback(getCusInfo);
		});
	}

//
service.customerImport = function(params,callback) {
	$http({
		 method:'POST',
		 url:"/customerGroup/customerImport",
		 data: params,
		 headers: {'Content-Type':undefined},
		 transformRequest: angular.identity
	}).success(function(res) {
		callback(res);
	}).error(function(res) {
		var ret = {};
		ret.result = "failed";
		ret.reason = "请求失败";
		callback(ret);
	});
}

//获取指定组客户信息
service.getSpecialGroupCus = function(params, callback) {
	$http({
		url:'/customerGroup/getSpecialGroupCus',
		params:params,
		method:'GET'
	}).success(function(res){
		console.log(res);
		callback(res);
	}).error(function(res){
		var getInfo = {};
		getInfo.result = false;
		getInfo.info = '获取指定群客户信息失败';
		callback(getCusInfo);
	});
}

	//获取客户信息
	service.getCustomerInfo = function(params, callback) {
		$http({
			url:'/customerGroup/getCustomerInfo',
			params:params,
			method:'GET'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res){
			var getCusInfo = {};
			getCusInfo.result = false;
			getCusInfo.info = '后台数据获取失败';
			callback(getCusInfo);
		});
	}

  //确定修改客户信息
	service.editCustomerSure = function(params, callback) {
		$http({
			url:'/customerGroup/editCustomerSure',
			params:params,
			method:'POST'

		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res){
			var getCusInfo = {};
			getCusInfo.result = false;
			getCusInfo.info = '修改客户信息失败';
			callback(getCusInfo);
		});
	}
	//删除指定客户的某个群组信息
	service.deleteCustomerGroupInfo = function(params, callback) {
		$http({
			url:'/customerGroup/deleteCustomerGroupInfo',
			params:params,
			method:'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res){
			var getCusInfo = {};
			getCusInfo.result = false;
			getCusInfo.info = '删除客户群组信息失败';
			callback(getCusInfo);
		});
	}

	//确定添加新客户
	service.addNewCustomerSure = function(params, callback) {
		$http({
			url:'/customerGroup/addNewCustomerSure',
			params:params,
			method:'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res){
			var getCusInfo = {};
			getCusInfo.result = false;
			getCusInfo.info = '新客户添加失败';
			callback(getCusInfo);
		});
	}
	//为新客户添加分组
	service.addNewCustomerGroup = function(params, callback) {
		$http({
			url:'/customerGroup/addNewCustomerGroup',
			params:params,
			method:'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res){
			var getCusInfo = {};
			getCusInfo.result = false;
			getCusInfo.info = '新客户添加分组失败';
			callback(getCusInfo);
		});
	}

	//获取最新的新增客户id
	service.getNewestCustomerid= function(params, callback) {
		$http({
			url:'/customerGroup/getNewestCustomerid',
			params:params,
			method:'GET'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res){
			var getCusInfo = {};
			getCusInfo.result = false;
			getCusInfo.info = '获取最新的新增客户id失败';
			callback(getCusInfo);
		});
	}
//获取单个客户id的个人信息
service.getEditCustomerInfo= function(params, callback) {
	$http({
		url:'/customerGroup/getEditCustomerInfo',
		params:params,
		method:'GET'
	}).success(function(res){
		console.log(res);
		callback(res);
	}).error(function(res){
		var getCusInfo = {};
		getCusInfo.result = false;
		getCusInfo.info = '获取单个客户信息失败';
		callback(getCusInfo);
	});
}
//获取选中单个客户id所在的分组id
service.getEditCustomerGroupInfo= function(params, callback) {
	$http({
		url:'/customerGroup/getEditCustomerGroupInfo',
		params:params,
		method:'GET'
	}).success(function(res){
		console.log(res);
		callback(res);
	}).error(function(res){
		var getCusInfo = {};
		getCusInfo.result = false;
		getCusInfo.info = '获取单个客户所在分组失败';
		callback(getCusInfo);
	});
}
  return service;
});

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
cspServices.factory('groupExchangeService',function($http){
	var service = {};

	//获取小组信息，及券表
	service.cspGroupExchangeGetGroupInfoAndStock = function(params,callback) {
		$http({
			url: '/groupexchange/getgroupinfoandstock',
			params: params,
			method: "GET"
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "无法连接到服务器";
			callback(ret);
		})
	}

	//获取小组券表
	service.cspGroupExchangeGetGroupStock = function(params,callback) {
		$http({
			url: '/groupexchange/getgroupstock',
			params: params,
			method: "GET"
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "无法连接到服务器";
			callback(ret);
		})
	}

	//随机生成数据
	service.writedb = function(params,callback) {
		$http({
			url: '/groupexchange/writedb',
			params: params,
			method: "GET"
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			callback(ret);
		})
	}

	//添加到公共券池
	service.cspGroupExchangeAddExchange = function(params,callback) {
		$http({
			url: '/groupexchange/addexchange',
			params: params,
			method: "POST"
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "无法连接到服务器";
			callback(ret);
		})
	}

	//撤销
	service.cspGroupExchangeDeleteExchange = function(params,callback) {
		$http({
			url: '/groupexchange/deleteexchange',
			params: params,
			method: "POST"
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "无法连接到服务器";
			callback(ret);
		})
	}

	//添加交换请求
	service.cspGroupExchangeAddAskExchange = function(params,callback) {
		$http({
			url: '/groupexchange/addaskexchange',
			params: params,
			method: "POST"
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "无法连接到服务器";
			callback(ret);
		})
	}

	//获取消息
	service.cspGroupExchangeGetExchangeNews = function(params,callback) {
		$http({
			url: '/groupexchange/getexchangenews',
			params: params,
			method: "GET"
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "无法连接到服务器";
			callback(ret);
		})
	}

	return service;
})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */

cspServices.factory('LayoutManageService',function($http) {
	var service = {};

	//获取展示的卡片
	service.cspLayoutManageGetShowProduct = function(params,callback) {
		$http({
			url: '/layoutmanage/getshowproduct',
			params: params,
			method: "GET"
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			callback(ret);
		})
	}

	//获取所有的产品
	service.cspLayoutManageGetAllProducts = function(params,callback) {
		$http({
			url: '/layoutmanage/getallproducts',
			params: params,
			method: "GET"
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			callback(ret);
		})
	}

	//更新显示列表
	service.cspLayoutManageUpdateLayout = function(params,callback) {
		$http({
			url: '/layoutmanage/updatelayout',
			params: params,
			method: "POST"
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			callback(ret);
		})
	}

	return service;
})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */

cspServices.factory('ManageService',function($http) {
	var service = {};
	service.cspManageUploadFile = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/fileload",
			 data: params,
			 headers: {'Content-Type':undefined},
			 transformRequest: angular.identity
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageDeleteFile = function(params,callback) {
		$http({
			url: '/manage/deletefile',
			params: params,
			method: "POST"
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			callback(ret);
		})
	}
	service.cspAddProduct = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/addproduct",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspUpdateProduct = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/updateproduct",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspAddTactics = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/addtactics",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspGetAllTactics = function(params,callback) {
		$http({
			 method:'GET',
			 url:"/manage/getalltactics",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspDeleteTactics = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/deletetactics",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspUpdateTactics = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/updatetactics",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspGetAllProduct = function(params,callback) {
		$http({
			 method:'GET',
			 url:"/manage/getallproduct",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspGetNetByProductId = function(params,callback) {
		$http({
			 method:'GET',
			 url:"/manage/getnetbyproductid",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspDeleteProduct = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/deleteproduct",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspAddSingleNet = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/addsinglenet",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspUpdateSingleNet = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/updatesinglenet",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspDeleteSingleNet = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/deletesinglenet",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageImportLoadFile = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/importloadfile",
			 data: params,
			 headers: {'Content-Type':undefined},
			 transformRequest: angular.identity
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageImportInsertToDb = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/importinserttodb",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageGetCheckUser = function(params,callback) {
		$http({
			 method:'GET',
			 url:"/manage/getcheckuser",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageGetAllUser = function(params,callback) {
		$http({
			 method:'GET',
			 url:"/manage/getalluser",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageGetMemberLevel = function(params,callback) {
		$http({
			 method:'GET',
			 url:"/manage/getmemberlevel",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageChangeUserLevel = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/changeuserlevel",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageChangeUserCheckState = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/changeusercheckstate",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageCheckNetExist = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/checknetexist",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageMultipleDeleteNets = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/multipledeletenets",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageGetProductDes = function(params,callback) {
		$http({
			 method:'GET',
			 url:"/manage/getproductdes",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	//模拟产品

	service.cspAddanalogProduct = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/addanalogProduct",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspUpdateanalogProduct = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/updateanalogProduct",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspAddanalogTactics = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/addanalogTactics",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspGetAllanalogTactics = function(params,callback) {
		$http({
			 method:'GET',
			 url:"/manage/getallanalogTactics",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspDeleteanalogTactics = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/deleteanalogTactics",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspUpdateanalogTactics = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/updateanalogTactics",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspGetAllanalogProduct = function(params,callback) {
		$http({
			 method:'GET',
			 url:"/manage/getallanalogproduct",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspGetanalogNetByanalogProductId = function(params,callback) {
		$http({
			 method:'GET',
			 url:"/manage/getanalogNetbyanalogProductid",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspDeleteanalogProduct = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/deleteanalogProduct",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspAddSingleanalogNet = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/addsingleanalogNet",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspUpdateSingleanalogNet = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/updatesingleanalogNet",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspDeleteSingleanalogNet = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/deletesingleanalogNet",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageImportanalogLoadFile = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/importanalogloadfile",
			 data: params,
			 headers: {'Content-Type':undefined},
			 transformRequest: angular.identity
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageImportInsertToDb = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/importinserttodb",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageCheckanalogNetExist = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/checkanalogNetexist",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageMultipleDeleteanalogNets = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/multipledeleteanalogNets",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageGetanalogProductDes = function(params,callback) {
		$http({
			 method:'GET',
			 url:"/manage/getanalogProductdes",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageImportanalogInsertToDb = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/importanaloginserttodb",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageGetAllOrder = function(params,callback) {
		$http({
			 method:'GET',
			 url:"/manage/getallorder",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageUpdateOrder = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/updateorder",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageGetSpot = function(params,callback) {
		$http({
			 method:'GET',
			 url:"/manage/getspot",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageSpotLoadFile = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/spotloadfile",
			 data: params,
			 headers: {'Content-Type':undefined},
			 transformRequest: angular.identity
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageLoadSpotToDb = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/loadspottodb",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageSpotCheckDate = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/spotcheckdate",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageSpotInsertSingleData = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/spotinsertsingledata",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageMultipleDeleteSpots = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/multipledeletespots",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageUpdateSpot = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/updatespot",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageGetFutures = function(params,callback) {
		$http({
			 method:'GET',
			 url:"/manage/getfutures",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageFuturesInsertSingleData = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/futuresinsertsingledata",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageUpdateFutures = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/updatefutures",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageMultipleDeleteFutureses = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/multipledeletefutureses",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageFuturesLoadFile = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/futuresloadfile",
			 data: params,
			 headers: {'Content-Type':undefined},
			 transformRequest: angular.identity
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	service.cspManageLoadFuturesToDb = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/loadfuturestodb",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}

	//获取显示的产品
	service.cspManageGetShowProducts = function(params,callback) {
		$http({
			 method:'GET',
			 url:"/manage/getshowproducts",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	//删除显示的产品
	service.cspManageDeleteShowProduct = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/deleteshowproduct",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}

	//添加显示的产品
	service.cspManageAddShowProduct = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/addshowproduct",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}

	//获取系列数据
	service.cspManageGetAllSeries = function(params,callback) {
		$http({
			 method:'GET',
			 url:"/manage/getallseries",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}

	//获取分页系列
	service.cspManageGetPageSeries = function(params,callback) {
		$http({
			 method:'GET',
			 url:"/manage/getpageseries",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	//添加系列
	service.cspManageAddSeries = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/addseries",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	//更新系列
	service.cspManageUpdateSeries = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/updateseries",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	//删除系列
	service.cspManageDeleteSeries = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/deleteseries",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}

	//获取分页公告
	service.cspManageGetPageNotices = function(params,callback) {
		$http({
			 method:'GET',
			 url:"/manage/getpagenotices",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}

	//获取筛选的产品
	service.cspManageGetNoticeProduct = function(params,callback) {
		$http({
			 method:'GET',
			 url:"/manage/getnoticeproduct",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}

	//上传pdf
	service.cspManageUploadNoticeFile = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/uploadnoticefile",
			 data: params,
			 headers: {'Content-Type':undefined},
			 transformRequest: angular.identity
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}

	//创建公告
	service.cspManageAddNotice = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/addnotice",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}

	//更新公告
	service.cspManageUpdateNotice = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/updatenotice",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}

	//删除公告
	service.cspManageDeleteNotice = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/deletenotice",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}

	//导入用户上传文件
	service.cspManageLoadUserUpLoadFile = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/loaduseruploadfile",
			 data: params,
			 headers: {'Content-Type':undefined},
			 transformRequest: angular.identity
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}

	//验证身份证号码
	service.cspManageCheckIdcard = function(params) {
		var sId = params;
		var city={
			11:"北京",
			12:"天津",
			13:"河北",
			14:"山西",
			15:"内蒙古",
			21:"辽宁",
			22:"吉林",
			23:"黑龙江",
			31:"上海",
			32:"江苏",
			33:"浙江",
			34:"安徽",
			35:"福建",
			36:"江西",
			37:"山东",
			41:"河南",
			42:"湖北",
			43:"湖南",
			44:"广东",
			45:"广西",
			46:"海南",
			50:"重庆",
			51:"四川",
			52:"贵州",
			53:"云南",
			54:"西藏 ",
			61:"陕西",
			62:"甘肃",
			63:"青海",
			64:"宁夏",
			65:"新疆",
			71:"台湾",
			81:"香港",
			82:"澳门",
			91:"国外 "};
		var iSum=0 ;
	    var info="" ;
	 	if(!/^\d{17}(\d|x)$/i.test(sId)) return false;
	 	sId=sId.replace(/x$/i,"a");
	 	if(city[parseInt(sId.substr(0,2))]==null) return false;
	 	var sBirthday=sId.substr(6,4)+"-"+Number(sId.substr(10,2))+"-"+Number(sId.substr(12,2));
	 	var d=new Date(sBirthday.replace(/-/g,"/")) ;
	 	if(sBirthday!=(d.getFullYear()+"-"+ (d.getMonth()+1) + "-" + d.getDate())) return false;
	 	for(var i = 17;i>=0;i --) iSum += (Math.pow(2,i) % 11) * parseInt(sId.charAt(17 - i),11) ;
	 	if(iSum%11!=1) return false;
	 	//aCity[parseInt(sId.substr(0,2))]+","+sBirthday+","+(sId.substr(16,1)%2?"男":"女");//此次还可以判断出输入的身份证号的人性别
	 	return true;
	}

	//获取简略的user信息
	service.cspManageGetSimpleUserInfo = function(params,callback) {
		$http({
			 method:'GET',
			 url:"/manage/getsimpleuserinfo",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}

	//批量导入用户
	service.cspManageMultipleLoadUser = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/multipleloaduser",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}

	//获取权限等级表
	service.cspManageGetConlevel = function(params,callback) {
		$http({
			 method:'GET',
			 url:"/manage/getconlevel",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	//获取导入已购产品数据的产品列表
	service.cspManageGetSimpleProducts = function(params,callback) {
		$http({
			 method:'GET',
			 url:"/manage/getsimpleproducts",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}

	//导入已购产品上传文件
	service.cspManageLoadBoughtUpLoadFile = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/loadboughtuploadfile",
			 data: params,
			 headers: {'Content-Type':undefined},
			 transformRequest: angular.identity
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	//定位重复的已购产品
	service.cspManageGetRepeatLoadBought = function(params,callback) {
		$http({
			 method:'GET',
			 url:"/manage/getrepeatloadbought",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	//获取分页已购产品数据
	service.cspManageGetPageBoughts = function(params,callback) {
		$http({
			 method:'GET',
			 url:"/manage/getpageboughts",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}

	//批量导入已购产品
	service.cspManageMultipleLoadBoughts = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/multipleloadboughts",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}

	service.cspManageUpdateBought = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/updatebought",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}

	service.cspManageDeleteBought = function(params,callback) {
		$http({
			 method:'POST',
			 url:"/manage/deletebought",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}

	//获取产品风险等级表
	service.cspManageGetProductRisklevels = function(params,callback) {
		$http({
			 method:'GET',
			 url:"/manage/getproductrisklevels",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}

	//获取产品分页数据
	service.cspManageGetPageProducts = function(params,callback) {
		$http({
			 method:'GET',
			 url:"/manage/getpageproducts",
			 params: params
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	}

	return service;
})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */


cspServices.factory('messageService',function($http) {
	var service = {};

  service.getAllMessage=function(params,callback){

    $http({
      url:'/messageService/getAllMessage',
      params: params,
      method: 'POST'
    }).success(function(res){
      console.log(res);
      callback(res);
    }).error(function(res) {
      var pro = {};
      pro.result=false;
      pro.reason='获取所有短信信息失败';
      callback(pro);
    });
  }

	service.sendMessage=function(params,callback){

		$http({
			url:'/messageService/sendMessage',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='发送短信失败';
			callback(pro);
		});
	}

	service.saveCreateMessage=function(params,callback){

		$http({
			url:'/messageService/saveCreateMessage',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='创建短信模板失败';
			callback(pro);
		});
	}

	service.saveEditMessage=function(params,callback){

		$http({
			url:'/messageService/saveEditMessage',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='编辑短信模板失败';
			callback(pro);
		});
	}

	service.deleteMessage=function(params,callback){

		$http({
			url:'/messageService/deleteMessage',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='删除短信模板失败';
			callback(pro);
		});
	}

	service.setMessageType=function(params,callback){

		$http({
			url:'/messageService/setMessageType',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='设置短信界面失败';
			callback(pro);
		});
	}

	service.getMessageType=function(params,callback){

		$http({
			url:'/messageService/getMessageType',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='获取短信界面失败';
			callback(pro);
		});
	}


    return service;
})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
cspServices.factory('operLoginService',function($http) {
	var service = {};
	service.cspOperCheckLogin = function(params,callback) {
		$http({
			url:'/operlogin/checklogin',
	        params: params,
	        method: 'POST'
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var back = {};
			back.result = "failed";
			back.reason = "服务器连接失败";
			callback(back);
		});
	}
	service.cspOperLogin = function(params,callback) {
		$http({
			url:'/operlogin/login',
	        params: params,
	        method: 'POST'
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var back = {};
			back.result = "failed";
			back.reason = "服务器连接失败";
			callback(back);
		});
	}
	//判断登录及自动登录 参数
	// {
	// 	cookieExist : true / false, 表示是否传递了cookie信息，若为false，则不需要传递后三个字段
	// 	login_maid : "x",
	// 	login_oid : "x", //此处login_oid 与数据库中的不同
	// 	login_pass: "x"
	// }
	service.cspOperCheckAndLogin = function(params,callback) {
		$http({
			url:'/operlogin/checkandlogin',
	        params: params,
	        method: 'POST'
		}).success(function(res) {
			callback(res); //仅当result值为succeed时，表示登录成功
		}).error(function(res) {
			var back = {};
			back.result = "failed";
			back.reason = "服务器连接失败";
			callback(back);
		});
	}
	//验证身份证号码
	service.cspOperCheckIdcard = function(params) {
		var sId = params;
		var city={
			11:"北京",
			12:"天津",
			13:"河北",
			14:"山西",
			15:"内蒙古",
			21:"辽宁",
			22:"吉林",
			23:"黑龙江",
			31:"上海",
			32:"江苏",
			33:"浙江",
			34:"安徽",
			35:"福建",
			36:"江西",
			37:"山东",
			41:"河南",
			42:"湖北",
			43:"湖南",
			44:"广东",
			45:"广西",
			46:"海南",
			50:"重庆",
			51:"四川",
			52:"贵州",
			53:"云南",
			54:"西藏 ",
			61:"陕西",
			62:"甘肃",
			63:"青海",
			64:"宁夏",
			65:"新疆",
			71:"台湾",
			81:"香港",
			82:"澳门",
			91:"国外 "};
		var iSum=0 ;
	    var info="" ;
	 	if(!/^\d{17}(\d|x)$/i.test(sId)) return false;
	 	sId=sId.replace(/x$/i,"a");
	 	if(city[parseInt(sId.substr(0,2))]==null) return false;
	 	var sBirthday=sId.substr(6,4)+"-"+Number(sId.substr(10,2))+"-"+Number(sId.substr(12,2));
	 	var d=new Date(sBirthday.replace(/-/g,"/")) ;
	 	if(sBirthday!=(d.getFullYear()+"-"+ (d.getMonth()+1) + "-" + d.getDate())) return false;
	 	for(var i = 17;i>=0;i --) iSum += (Math.pow(2,i) % 11) * parseInt(sId.charAt(17 - i),11) ;
	 	if(iSum%11!=1) return false;
	 	//aCity[parseInt(sId.substr(0,2))]+","+sBirthday+","+(sId.substr(16,1)%2?"男":"女");//此次还可以判断出输入的身份证号的人性别
	 	return true;
	}

	//判断操作员是否是某个交易单元的组长,同时返回交易单元
	// 参数传递
	// {
	// 	useparams: 0, //0表示不使用传递的参数，改成使用session中的maid 和 oid，若要使用参数，将该字段值设为1
	// 	oid: "1.1"
	// }
	service.cspOperCheckGroupAndGetList = function(params,callback) {
		$http({
			url:'/operlogin/checkgroupandgetlist',
	        params: params,
	        method: 'GET'
		}).success(function(res) {
			callback(res); //仅当result值为succeed时，表示登录成功
		}).error(function(res) {
			var back = {};
			back.result = "failed";
			back.reason = "服务器连接失败";
			callback(back);
		});
	}

	service.cspOperLoginOut = function(params,callback) {
		$http({
			url:'/operlogin/loginout',
	        params: params,
	        method: 'POST'
		}).success(function(res) {
			callback(res); //仅当result值为succeed时，表示登录成功
		}).error(function(res) {
			var back = {};
			back.result = "failed";
			back.reason = "服务器连接失败";
			callback(back);
		});
	}

	return service;
})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
cspServices.factory('operManageService',function($http) {
	var service = {};
	service.cspOperManageGetAllMaid = function(params,callback) {
		$http({
			url:'/opermanage/getallmaid',
	        params: params,
	        method: 'GET'
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var back = {};
			back.result = "failed";
			back.reason = "服务器连接失败";
			callback(back);
		});
	}
	service.cspOperManageGetOidByMaid = function(params,callback) {
		$http({
			url:'/opermanage/getoidbymaid',
	        params: params,
	        method: 'GET'
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var back = {};
			back.result = "failed";
			back.reason = "服务器连接失败";
			callback(back);
		});
	}
	service.cspOperManageGetOperByOid = function(params,callback) {
		$http({
			url:'/opermanage/getoperbyoid',
	        params: params,
	        method: 'GET'
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var back = {};
			back.result = "failed";
			back.reason = "服务器连接失败";
			callback(back);
		});
	}
	service.cspOperManageAddOper = function(params,callback) {
		$http({
			url:'/opermanage/addoper',
	        params: params,
	        method: 'POST'
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var back = {};
			back.result = "failed";
			back.reason = "服务器连接失败";
			callback(back);
		});
	}
	service.cspOperManageUpdateOper = function(params,callback) {
		$http({
			url:'/opermanage/updateoper',
	        params: params,
	        method: 'POST'
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var back = {};
			back.result = "failed";
			back.reason = "服务器连接失败";
			callback(back);
		});
	}
	service.cspOperManageChangeOperStat = function(params,callback) {
		$http({
			url:'/opermanage/changeoperstat',
	        params: params,
	        method: 'POST'
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var back = {};
			back.result = "failed";
			back.reason = "服务器连接失败";
			callback(back);
		});
	}
	service.cspOperManageResetPass = function(params,callback) {
		$http({
			url:'/opermanage/resetpass',
	        params: params,
	        method: 'POST'
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var back = {};
			back.result = "failed";
			back.reason = "服务器连接失败";
			callback(back);
		});
	}
	//通过资产管理人获取资产单元
	service.cspOperManageGetCaidByMaid = function(params,callback) {
		$http({
			url:'/opermanage/getcaidbymaid',
	        params: params,
	        method: 'GET'
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var back = {};
			back.result = "failed";
			back.reason = "服务器连接失败";
			callback(back);
		});
	}

	//通过资产单元获取交易单元
	service.cspOperManageGetTridByCaid = function(params,callback) {
		$http({
			url:'/opermanage/gettridbycaid',
	        params: params,
	        method: 'GET'
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var back = {};
			back.result = "failed";
			back.reason = "服务器连接失败";
			callback(back);
		});
	}

	//添加交易员
	service.cspOperManageAddTrader = function(params,callback) {
		$http({
			url:'/opermanage/addtrader',
	        params: params,
	        method: 'POST'
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var back = {};
			back.result = "failed";
			back.reason = "服务器连接失败";
			callback(back);
		});
	}
	return service;
})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */


cspServices.factory('orderService',function($http) {
	var service = {};

  service.submitOrder=function(product,callback){

    $http({
      url:'/order/submitOrder',
      params: product,
      method: 'POST'
    }).success(function(res){
      console.log(res);
      callback(res);
    }).error(function(res) {
      var pro = {};
      pro.result=false;
      pro.reason='提交表单失败';
      callback(pro);
    });
  }

	service.getOrder=function(params,callback){

    $http({
      url:'/order/getOrder',
      params: params,
      method: 'POST'
    }).success(function(res){
      console.log(res);
      callback(res);
    }).error(function(res) {
      var pro = {};
      pro.result=false;
      pro.reason='提交表单失败';
      callback(pro);
    });
  }

	service.getOwnedProducts=function(params,callback){

		$http({
			url:'/order/getOwnedProducts',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='提交表单失败';
			callback(pro);
		});
	}

	service.getAllOrderState=function(params,callback){

		$http({
			url:'/order/getAllOrderState',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='获取所有预约订单失败';
			callback(pro);
		});
	}

	service.setOrderState=function(params,callback){

		$http({
			url:'/order/setOrderState',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='设置订单状态失败';
			callback(pro);
		});
	}

	service.getOrderAmount=function(params,callback){

		$http({
			url:'/order/getOrderAmount',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='获取订单数量失败';
			callback(pro);
		});
	}

	service.getOwnedProductAmount=function(params,callback){

		$http({
			url:'/order/getOwnedProductAmount',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='获取订单数量失败';
			callback(pro);
		});
	}

  return service;


});

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */
cspServices.factory('productService',function($http) {

	var service = {};


	service.getProductDetails=function(product,callback){

		$http({
			url:'/productView/getProductDetails',
			params: product,
			method: 'POST'
		}).success(function(res){

			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='获取产品信息失败';
			callback(pro);
		});
	}

	service.setProductID=function(product,callback){

		$http({
			url:'/productView/setProductID',
			params: product,
			method: 'POST'
		}).success(function(res){

			callback(res);
		}).error(function(res) {
			var user = {};
			user.result=false;
			user.reason='设置product id失败';
			callback(user);
		});
	}

	service.getFutures=function(params,callback){
		$http({
			url:'/productView/getFutures',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log('getFutures',res);
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result=false;
			ret.reason='获取 getFutures 失败';
			callback(ret);
		});
	}
	service.getProductAmount=function(params,callback){
		$http({
			url:'/productView/getProductAmount',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log('getProductAmount',res);
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result=false;
			ret.reason='获取 product id失败';
			callback(ret);
		});
	}

	service.getProductID=function(product,callback){

		$http({
			url:'/productView/getProductID',
			params: product,
			method: 'POST'
		}).success(function(res){
			console.log('getProductID',res);
			callback(res);
		}).error(function(res) {
			var user = {};
			user.result=false;
			user.reason='获取 product id失败';
			callback(user);
		});
	}
	service.getTactics = function(params,callback) {
		$http({
			url: 'productView/getTactics',
			params:params,
			method:'POST'
		}).success(function(res) {
			console.log('Tactics',res);

			callback(res);

		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}

	service.getRiskLevelInfo = function(params,callback) {
		$http({
			url: 'productView/getRiskLevelInfo',
			params:params,
			method:'POST'
		}).success(function(res) {
			console.log('getRiskLevelInfo',res);

			callback(res);

		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}

	service.getSeriesInfo = function(params,callback) {
		$http({
			url: 'productView/getSeriesInfo',
			params:params,
			method:'POST'
		}).success(function(res) {
			console.log('getSeriesInfo',res);

			callback(res);

		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}

	service.getAllTactics = function(params,callback) {
		$http({
			url: 'productView/getAllTactics',
			params:params,
			method:'POST'
		}).success(function(res) {
			console.log('getAllTactics',res);
			callback(res);

		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}


  service.getProducts = function(params,callback) {
    $http({
      url: 'productView/getProducts',
      params:params,
      method:'POST'
    }).success(function(res) {
      console.log('products',res);
      callback(res);

    }).error(function(res) {
      var ret = {};
      ret.result = false;
      ret.reason = "请求失败";
      callback(ret);
    })
  }


	//  var option={page:1请求页数,pageRows一页的数量,tacticsID:''请求策略,sortField:''排序字段,order=true;排序顺序}
	service.getProductsByFilter = function(params,callback) {
		$http({
			url: 'productView/getProductsByFilter',
			params:params,
			method:'POST'
		}).success(function(res) {

			console.log('getProductsByFilter service',res);
			callback(res);

		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}

	//获取普通卡片的所有产品
	service.getCardsProduct = function(params,callback) {
		$http({
			url: 'productView/getCardsProduct',
			params:params,
			method:'POST'
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}

	service.getAllProductSeries = function(params,callback) {
		$http({
			url: 'productView/getAllProductSeries',
			params:params,
			method:'POST'
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}

	service.getAllProRiskLevel = function(params,callback) {
		$http({
			url: 'productView/getAllProRiskLevel',
			params:params,
			method:'POST'
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}




	service.getProductsWithLatestNet = function(params,callback) {
    $http({
      url: 'productView/getProductsWithLatestNet',
      params:params,
      method:'POST'
    }).success(function(res) {
      console.log('products',res);
      callback(res);

    }).error(function(res) {
      var ret = {};
      ret.result = false;
      ret.reason = "请求失败";
      callback(ret);
    })
  }


	//  var option={page:1请求页数,pageRows一页的数量,tacticsID:''请求策略,sortField:''排序字段,order=true;排序顺序}
	service.getProductsByFilterWithLatestNet = function(params,callback) {
		$http({
			url: 'productView/getProductsByFilterWithLatestNet',
			params:params,
			method:'POST'
		}).success(function(res) {

			console.log('getProductsByFilter service',res);
			callback(res);

		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}

	service.getProductLatestNet = function(params,callback) {
		$http({
			url: 'productView/getProductLatestNet',
			params:params,
			method:'POST'
		}).success(function(res) {

			console.log('getProductLatestNet',res);
			callback(res);

		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}
	service.getNetAssetValue = function(params,callback) {
    $http({
      url: 'productView/getNetAssetValue',
      params:params,
      method:'POST'
    }).success(function(res) {

      console.log('NetAssetValue',res);
      callback(res);

    }).error(function(res) {
      var ret = {};
      ret.result = false;
      ret.reason = "请求失败";
      callback(ret);
    })
  }



service.getProductSpot = function(params,callback) {
	$http({
		url: 'productView/getProductSpot',
		params:params,
		method:'POST'
	}).success(function(res) {
		console.log('netProduct',typeof(res),res);

		callback(res);

	}).error(function(res) {
		var ret = {};
		ret.result = false;
		ret.reason = "请求失败";
		callback(ret);
	})
}


	service.getNetProduct = function(params,callback) {
    $http({
      url: 'productView/getNetProduct',
      params:params,
      method:'POST'
    }).success(function(res) {
      console.log('netProduct',typeof(res),res);

      callback(res);

    }).error(function(res) {
      var ret = {};
      ret.result = false;
      ret.reason = "请求失败";
      callback(ret);
    })
  }

	service.getProductNotices = function(params,callback) {
		$http({
			url: 'productView/getProductNotices',
			params:params,
			method:'POST'
		}).success(function(res) {
			console.log('getProductNotices',typeof(res),res);

			callback(res);

		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}


  return service;
});

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */

cspServices.factory('productService0',function($http) {

	var service = {};


	service.getProductDetails=function(product,callback){

		$http({
			url:'/productView0/getProductDetails',
			params: product,
			method: 'POST'
		}).success(function(res){

			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='获取产品信息失败';
			callback(pro);
		});
	}

	service.setProductID=function(product,callback){

		$http({
			url:'/productView0/setProductID',
			params: product,
			method: 'POST'
		}).success(function(res){

			callback(res);
		}).error(function(res) {
			var user = {};
			user.result=false;
			user.reason='设置product id失败';
			callback(user);
		});
	}

	service.getFutures=function(params,callback){
		$http({
			url:'/productView0/getFutures',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log('getFutures',res);
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result=false;
			ret.reason='获取 getFutures 失败';
			callback(ret);
		});
	}

	service.getProductAmount=function(params,callback){
		$http({
			url:'/productView0/getProductAmount',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log('getProductAmount',res);
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result=false;
			ret.reason='获取 product id失败';
			callback(ret);
		});
	}

	service.getProductID=function(product,callback){

		$http({
			url:'/productView0/getProductID',
			params: product,
			method: 'POST'
		}).success(function(res){
			console.log('getProductID',res);
			callback(res);
		}).error(function(res) {
			var user = {};
			user.result=false;
			user.reason='获取 product id失败';
			callback(user);
		});
	}
	service.getTactics = function(params,callback) {
		$http({
			url: 'productView0/getTactics',
			params:params,
			method:'POST'
		}).success(function(res) {
			console.log('Tactics',res);

			callback(res);

		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}

	service.getRiskLevelInfo = function(params,callback) {
		$http({
			url: 'productView0/getRiskLevelInfo',
			params:params,
			method:'POST'
		}).success(function(res) {
			console.log('getRiskLevelInfo',res);

			callback(res);

		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}

	service.getSeriesInfo = function(params,callback) {
		$http({
			url: 'productView0/getSeriesInfo',
			params:params,
			method:'POST'
		}).success(function(res) {
			console.log('getSeriesInfo',res);

			callback(res);

		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}

	service.getAllTactics = function(params,callback) {
		$http({
			url: 'productView0/getAllTactics',
			params:params,
			method:'POST'
		}).success(function(res) {
			console.log('getAllTactics',res);
			callback(res);

		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}

	service.getAllProductSeries = function(params,callback) {
		$http({
			url: 'productView0/getAllProductSeries',
			params:params,
			method:'POST'
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}

	service.getAllProRiskLevel = function(params,callback) {
		$http({
			url: 'productView0/getAllProRiskLevel',
			params:params,
			method:'POST'
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}


  service.getProducts = function(params,callback) {
    $http({
      url: 'productView0/getProducts',
      params:params,
      method:'POST'
    }).success(function(res) {
      console.log('products',res);
      callback(res);

    }).error(function(res) {
      var ret = {};
      ret.result = false;
      ret.reason = "请求失败";
      callback(ret);
    })
  }



	service.getProductsByFilter = function(params,callback) {
		$http({
			url: 'productView0/getProductsByFilter',
			params:params,
			method:'POST'
		}).success(function(res) {

			console.log('getProductsByFilter0 service',res);
			callback(res);

		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}

	//获取普通卡片的所有产品
	service.getCardsProduct = function(params,callback) {
		$http({
			url: 'productView0/getCardsProduct',
			params:params,
			method:'POST'
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}

	//  var option={page:1请求页数,pageRows一页的数量,tacticsID:''请求策略,sortField:''排序字段,order=true;排序顺序}
	service.getProductsByFilterWithLatestNet = function(params,callback) {
		$http({
			url: 'productView0/getProductsByFilterWithLatestNet',
			params:params,
			method:'POST'
		}).success(function(res) {

			console.log('getProductsByFilter service',res);
			callback(res);

		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}


		service.getProductLatestNet = function(params,callback) {
			$http({
				url: 'productView0/getProductLatestNet',
				params:params,
				method:'POST'
			}).success(function(res) {

				console.log('getProductLatestNet0',res);
				callback(res);

			}).error(function(res) {
				var ret = {};
				ret.result = false;
				ret.reason = "请求失败";
				callback(ret);
			})
		}

	service.getNetAssetValue = function(params,callback) {
    $http({
      url: 'productView0/getNetAssetValue',
      params:params,
      method:'POST'
    }).success(function(res) {

      console.log('NetAssetValue',res);
      callback(res);

    }).error(function(res) {
      var ret = {};
      ret.result = false;
      ret.reason = "请求失败";
      callback(ret);
    })
  }

	service.getProductSpot = function(params,callback) {
		$http({
			url: 'productView0/getProductSpot',
			params:params,
			method:'POST'
		}).success(function(res) {
			console.log('netProduct',typeof(res),res);

			callback(res);

		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}

	service.getNetProduct = function(params,callback) {
    $http({
      url: 'productView0/getNetProduct',
      params:params,
      method:'POST'
    }).success(function(res) {
      console.log('netProduct',typeof(res),res);

      callback(res);

    }).error(function(res) {
      var ret = {};
      ret.result = false;
      ret.reason = "请求失败";
      callback(ret);
    })
  }

	service.getProductNotices = function(params,callback) {
		$http({
			url: 'productView0/getProductNotices',
			params:params,
			method:'POST'
		}).success(function(res) {
			console.log('getProductNotices',typeof(res),res);

			callback(res);

		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		})
	}
	return service;
});

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */


cspServices.factory('randomService',function($http) {
	var service = {};



//获取交易单元下的小组
service.getWishTid=function(params,callback){

	$http({
		url:'/random/getWishTid',
		params: params,
		method: 'GET'
	}).success(function(res){
		console.log(res);
		callback(res);
	}).error(function(res) {
		var pro = {};
		pro.result=false;
		pro.reason='获取交易单元下的小组失败';
		callback(pro);
	});
}

service.unitRandmDiv=function(params,callback){

	$http({
		url:'/random/unitRandmDiv',
		params: params,
		method: 'POST'
	}).success(function(res){
		console.log(res);
		callback(res);
	}).error(function(res) {
		var pro = {};
		pro.result=false;
		pro.reason='分券失败';
		callback(pro);
	});
}
service.deleResults=function(params,callback){

	$http({
		url:'/random/deleResults',
		params: params,
		method: 'POST'
	}).success(function(res){
		console.log(res);
		callback(res);
	}).error(function(res) {
		var pro = {};
		pro.result=false;
		pro.reason='清除分券结果失败';
		callback(pro);
	});
}
service.writeResults=function(params,callback){

	$http({
		url:'/random/writeResults',
		params: params,
		method: 'POST'
	}).success(function(res){
		console.log(res);
		callback(res);
	}).error(function(res) {
		var pro = {};
		pro.result=false;
		pro.reason='写入分券结果失败';
		callback(pro);
	});
}
service.writeSec=function(params,callback){

	$http({
		url:'/random/writeSec',
		params: params,
		method: 'POST'
	}).success(function(res){
		console.log(res);
		callback(res);
	}).error(function(res) {
		var pro = {};
		pro.result=false;
		pro.reason='更改总券失败';
		callback(pro);
	});
}
service.recoverStock=function(params,callback){

	$http({
		url:'/random/recoverStock',
		params: params,
		method: 'POST'
	}).success(function(res){
		console.log(res);
		callback(res);
	}).error(function(res) {
		var pro = {};
		pro.result=false;
		pro.reason='恢复总券失败';
		callback(pro);
	});
}
service.noWishList=function(params,callback){

	$http({
		url:'/random/noWishList',
		params: params,
		method: 'GET'
	}).success(function(res){
		console.log(res);
		callback(res);
	}).error(function(res) {
		var pro = {};
		pro.result=false;
		pro.reason='获取是否所有小组均没有心愿清单失败';
		callback(pro);
	});
}

service.deleWishList=function(params,callback){

	$http({
		url:'/random/deleWishList',
		params: params,
		method: 'POST'
	}).success(function(res){
		console.log(res);
		callback(res);
	}).error(function(res) {
		var pro = {};
		pro.result=false;
		pro.reason='分券完毕后删除心愿清单失败';
		callback(pro);
	});
}
service.getRandmR=function(params,callback){

	$http({
		url:'/random/getRandmR',
		params: params,
		method: 'GET'
	}).success(function(res){
		console.log(res);
		callback(res);
	}).error(function(res) {
		var pro = {};
		pro.result=false;
		pro.reason='分券完毕后获取分券结果失败';
		callback(pro);
	});
}


service.randomOver=function(params,callback){

	$http({
		url:'/random/randomOver',
		params: params,
		method: 'GET'
	}).success(function(res){
		console.log(res);
		callback(res);
	}).error(function(res) {
		var pro = {};
		pro.result=false;
		pro.reason='分券完毕后检查总券是否有剩余券失败';
		callback(pro);
	});
}

service.getTname=function(params,callback){

	$http({
		url:'/random/getTname',
		params: params,
		method: 'GET'
	}).success(function(res){
		console.log(res);
		callback(res);
	}).error(function(res) {
		var pro = {};
		pro.result=false;
		pro.reason='根据小组gid获取小组名称失败';
		callback(pro);
	});
}



service.getInfobyGid=function(params,callback){

	$http({
		url:'/random/getInfobyGid',
		params: params,
		method: 'GET'
	}).success(function(res){
		console.log(res);
		callback(res);
	}).error(function(res) {
		var pro = {};
		pro.result=false;
		pro.reason='根据小组gid获取小组杠杆/分券市值失败';
		callback(pro);
	});
}

  return service;
});

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */

cspServices.factory('RegisterService',function($http) {
	var service = {};
	service.cspRegisterCheckPhone = function(params,callback) {
		$http({
			url:'/register/checkPhone',
			params: params,
			method: "POST"
		}).success(function(res){
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	};
	service.cspRegisterSendCode = function(params,callback) {
		$http({
			url:'/register/sendCheckCode',
			params: params,
			method: "POST"
		}).success(function(res){
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	};
	service.cspRegisterCommit = function(params,callback) {
		$http({
			url:'register/toRegister',
			params:params,
			method:'POST'
		}).success(function(res) {
			callback(res);
		}).error(function(res){
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	};
	service.cspRegisterDeleteSession = function(params,callback) {
		$http({
			url: 'register/toDeleteSession',
			params:params,
			method:'GET'
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		})
	}
	return service;
})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */

cspServices.factory('ResetpassService',function($http){
	var service = {};
	service.cspResetCheckPhone = function(params,callback) {
		$http({
			url:'/resetpass/checkPhone',
			params: params,
			method: "POST"
		}).success(function(res){
			console.log("请求成功");
			console.log(res);
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	};
	service.cspResetGetCode = function(params,callback) {
		$http({
			url:'/resetpass/sendCheckCode',
			params: params,
			method: "POST"
		}).success(function(res){
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		});
	};
	service.cspCheckCode = function(params,callback) {
		$http({
			url:'/resetpass/checkCode',
			params: params,
			method: "POST"
		}).success(function(res){
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "faile";
			ret.reason = "请求失败";
			callback(ret);
		});
	};
	service.cspUpdateUser = function(params,callback) {
		$http({
			url:'/resetpass/toUpdateUser',
			params: params,
			method: "POST"
		}).success(function(res){
			console.log('发送成功',res);
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "faile";
			ret.reason = "请求失败";
			callback(ret);
		});
	};
	service.cspDeleteSession = function(params,callback) {
		$http({
			url:'/resetpass/toDeleteSession',
			params: {},
			method: "GET"
		});
	};
	service.cspCheckImgCode = function(params,callback) {
		$http({
			url:'/resetpass/checkimgcode',
			params: params,
			method: "POST"
		}).success(function(res){
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "faile";
			ret.reason = "请求失败";
			callback(ret);
		});
	}
	return service;
})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */

cspServices.factory('RisklevelService',function($http) {
	var service = {};
	service.cspRiskGetPhone = function(params,callback) {
		$http({
			url: 'risklevel/getphone',
			params: params,
			method: "GET"
		}).success(function(res) {
			callback(res);
		}).error(function(res){
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		})
	};
	service.cspRiskCommit = function(params,callback) {
		$http({
			url: 'risklevel/riskcommit',
			params: params,
			method: "POST"
		}).success(function(res) {
			callback(res);
		}).error(function(res){
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		})
	};
	service.cspRiskCheckId = function(params) {
		console.log(params);
		var sId = params.idnumber;
		var city={
			11:"北京",
			12:"天津",
			13:"河北",
			14:"山西",
			15:"内蒙古",
			21:"辽宁",
			22:"吉林",
			23:"黑龙江",
			31:"上海",
			32:"江苏",
			33:"浙江",
			34:"安徽",
			35:"福建",
			36:"江西",
			37:"山东",
			41:"河南",
			42:"湖北",
			43:"湖南",
			44:"广东",
			45:"广西",
			46:"海南",
			50:"重庆",
			51:"四川",
			52:"贵州",
			53:"云南",
			54:"西藏 ",
			61:"陕西",
			62:"甘肃",
			63:"青海",
			64:"宁夏",
			65:"新疆",
			71:"台湾",
			81:"香港",
			82:"澳门",
			91:"国外 "};
		var iSum=0 ;
	    var info="" ;
	 	if(!/^\d{17}(\d|x)$/i.test(sId)) return false;
	 	sId=sId.replace(/x$/i,"a");
	 	if(city[parseInt(sId.substr(0,2))]==null) return false;
	 	var sBirthday=sId.substr(6,4)+"-"+Number(sId.substr(10,2))+"-"+Number(sId.substr(12,2));
	 	var d=new Date(sBirthday.replace(/-/g,"/")) ;
	 	if(sBirthday!=(d.getFullYear()+"-"+ (d.getMonth()+1) + "-" + d.getDate())) return false;
	 	for(var i = 17;i>=0;i --) iSum += (Math.pow(2,i) % 11) * parseInt(sId.charAt(17 - i),11) ;
	 	if(iSum%11!=1) return false;
	 	//aCity[parseInt(sId.substr(0,2))]+","+sBirthday+","+(sId.substr(16,1)%2?"男":"女");//此次还可以判断出输入的身份证号的人性别
	 	return true;
	}

	return service;
})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */


cspServices.factory('tradeUnitStockService',function($http) {
	var service = {};

	service.getStocksByTrade=function(params,callback){

    $http({
      url:'/tradeUnitStockService/getStocksByTrade',
      params: params,
      method: 'POST'
    }).success(function(res){
      console.log(res);
      callback(res);
    }).error(function(res) {
      var pro = {};
      pro.result=false;
      pro.reason='获取所有资产单元失败';
      callback(pro);
    });
  }

	service.loadStockFile=function(params,callback){

		$http({
			url:'/tradeUnitStockService/loadStockFile',
			data: params,
			method: 'POST',
			headers: {'Content-Type':undefined},
			transformRequest: angular.identity
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='上传券表文件失败';
			callback(pro);
		});
	}

	service.importStock=function(params,callback){

    $http({
      url:'/tradeUnitStockService/importStock',
      params: params,
      method: 'POST'
    }).success(function(res){
      console.log(res);
      callback(res);
    }).error(function(res) {
      var pro = {};
      pro.result=false;
      pro.reason='获取所有资产单元失败';
      callback(pro);
    });
  }

	service.saveEditStock=function(params,callback){

    $http({
      url:'/tradeUnitStockService/saveEditStock',
      params: params,
      method: 'POST'
    }).success(function(res){
      console.log(res);
      callback(res);
    }).error(function(res) {
      var pro = {};
      pro.result=false;
      pro.reason='编辑券表数据失败';
      callback(pro);
    });
  }
	service.delStock=function(params,callback){

		$http({
			url:'/tradeUnitStockService/delStock',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='删除券表数据失败';
			callback(pro);
		});
	}

	service.getStockAmountByTrade=function(params,callback){

		$http({
			url:'/tradeUnitStockService/getStockAmountByTrade',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='获取券表数量失败';
			callback(pro);
		});
	}


	service.createStock=function(params,callback){

		$http({
			url:'/tradeUnitStockService/createStock',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='创建券表数据失败';
			callback(pro);
		});
	}

	service.loadStockFileAndImport=function(params,callback){

		$http({
			url:'/tradeUnitStockService/loadStockFileAndImport',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='导入数据失败';
			callback(pro);
		});
	}


  return service;
});

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */


cspServices.factory('unitManageService',function($http) {
	var service = {};

  service.getValidAssetUnit=function(params,callback){

    $http({
      url:'/unitManageService/getValidAssetUnit',
      params: params,
      method: 'POST'
    }).success(function(res){
      console.log(res);
      callback(res);
    }).error(function(res) {
      var pro = {};
      pro.result=false;
      pro.reason='获取所有资产单元失败';
      callback(pro);
    });
  }

  service.getTotalAssetUnit=function(params,callback){

    $http({
      url:'/unitManageService/getTotalAssetUnit',
      params: params,
      method: 'POST'
    }).success(function(res){
      console.log(res);
      callback(res);
    }).error(function(res) {
      var pro = {};
      pro.result=false;
      pro.reason='获取所有资产单元失败';
      callback(pro);
    });
  }

  service.getAssetUnitFromCapManager=function(params,callback){

    $http({
      url:'/unitManageService/getAssetUnitFromCapManager',
      params: params,
      method: 'POST'
    }).success(function(res){
      console.log(res);
      callback(res);
    }).error(function(res) {
      var pro = {};
      pro.result=false;
      pro.reason='获取所有资产单元失败';
      callback(pro);
    });
  }




  service.getAllValidCapManager=function(params,callback){

    $http({
      url:'/unitManageService/getAllValidCapManager',
      params: params,
      method: 'POST'
    }).success(function(res){
      console.log(res);
      callback(res);
    }).error(function(res) {
      var pro = {};
      pro.result=false;
      pro.reason='获取所有有效的资产管理人失败';
      callback(pro);
    });
  }

  service.getAllCapManager=function(params,callback){

    $http({
      url:'/unitManageService/getAllCapManager',
      params: params,
      method: 'POST'
    }).success(function(res){
      console.log(res);
      callback(res);
    }).error(function(res) {
      var pro = {};
      pro.result=false;
      pro.reason='获取所有资产管理人失败';
      callback(pro);
    });
  }

  service.saveEditAssetUnit=function(params,callback){

    $http({
      url:'/unitManageService/saveEditAssetUnit',
      params: params,
      method: 'POST'
    }).success(function(res){
      console.log(res);
      callback(res);
    }).error(function(res) {
      var pro = {};
      pro.result=false;
      pro.reason='编辑资产单元失败';
      callback(pro);
    });
  }

  service.createAssetUnit=function(params,callback){

    $http({
      url:'/unitManageService/createAssetUnit',
      params: params,
      method: 'POST'
    }).success(function(res){
      console.log(res);
      callback(res);
    }).error(function(res) {
      var pro = {};
      pro.result=false;
      pro.reason='创建资产单元失败';
      callback(pro);
    });
  }

	service.saveEditAssetManager=function(params,callback){

    $http({
      url:'/unitManageService/saveEditAssetManager',
      params: params,
      method: 'POST'
    }).success(function(res){
      console.log(res);
      callback(res);
    }).error(function(res) {
      var pro = {};
      pro.result=false;
      pro.reason='编辑资产管理人失败';
      callback(pro);
    });
  }

  service.createAssetManager=function(params,callback){

    $http({
      url:'/unitManageService/createAssetManager',
      params: params,
      method: 'POST'
    }).success(function(res){
      console.log(res);
      callback(res);
    }).error(function(res) {
      var pro = {};
      pro.result=false;
      pro.reason='创建资产管理人失败';
      callback(pro);
    });
  }

	service.saveEditTradeUnit=function(params,callback){

    $http({
      url:'/unitManageService/saveEditTradeUnit',
      params: params,
      method: 'POST'
    }).success(function(res){
      console.log(res);
      callback(res);
    }).error(function(res) {
      var pro = {};
      pro.result=false;
      pro.reason='编辑交易单元失败';
      callback(pro);
    });
  }

  service.createTradeUnit=function(params,callback){

    $http({
      url:'/unitManageService/createTradeUnit',
      params: params,
      method: 'POST'
    }).success(function(res){
      console.log(res);
      callback(res);
    }).error(function(res) {
      var pro = {};
      pro.result=false;
      pro.reason='创建交易单元失败';
      callback(pro);
    });
  }

  service.getTransUnitFromAssetUnit=function(params,callback){

		$http({
			url:'/unitManageService/getTransUnitFromAssetUnit',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='获取所有交易单元失败';
			callback(pro);
		});
	}


  service.getAllAssetManagers=function(params,callback){

		$http({
			url:'/unitManageService/getAllAssetManagers',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='获取所有资产管理人失败';
			callback(pro);
		});
	}

	service.getAllAssetUnits=function(params,callback){

		$http({
			url:'/unitManageService/getAllAssetUnits',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='获取所有资产管理人失败';
			callback(pro);
		});
	}

	service.getAllAssetTraders=function(params,callback){

		$http({
			url:'/unitManageService/getAllAssetTraders',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='获取所有资产管理人失败';
			callback(pro);
		});
	}

  service.frozenAssetManager=function(params,callback){

    $http({
      url:'/unitManageService/frozenAssetManager',
      params: params,
      method: 'POST'
    }).success(function(res){
      console.log(res);
      callback(res);
    }).error(function(res) {
      var pro = {};
      pro.result=false;
      pro.reason='冻结资产管理人失败';
      callback(pro);
    });
  }

  service.frozenAssetUnit=function(params,callback){

    $http({
      url:'/unitManageService/frozenAssetUnit',
      params: params,
      method: 'POST'
    }).success(function(res){
      console.log(res);
      callback(res);
    }).error(function(res) {
      var pro = {};
      pro.result=false;
      pro.reason='冻结资产单元失败';
      callback(pro);
    });
  }

  service.frozenTradeUnit=function(params,callback){

    $http({
      url:'/unitManageService/frozenTradeUnit',
      params: params,
      method: 'POST'
    }).success(function(res){
      console.log(res);
      callback(res);
    }).error(function(res) {
      var pro = {};
      pro.result=false;
      pro.reason='冻结交易单元失败';
      callback(pro);
    });
  }

  service.unfreezeAssetManager=function(params,callback){

    $http({
      url:'/unitManageService/unfreezeAssetManager',
      params: params,
      method: 'POST'
    }).success(function(res){
      console.log(res);
      callback(res);
    }).error(function(res) {
      var pro = {};
      pro.result=false;
      pro.reason='解冻资产管理人失败';
      callback(pro);
    });
  }

  service.unfreezeAssetUnit=function(params,callback){

    $http({
      url:'/unitManageService/unfreezeAssetUnit',
      params: params,
      method: 'POST'
    }).success(function(res){
      console.log(res);
      callback(res);
    }).error(function(res) {
      var pro = {};
      pro.result=false;
      pro.reason='解冻资产单元失败';
      callback(pro);
    });
  }

  service.unfreezeTradeUnit=function(params,callback){

    $http({
      url:'/unitManageService/unfreezeTradeUnit',
      params: params,
      method: 'POST'
    }).success(function(res){
      console.log(res);
      callback(res);
    }).error(function(res) {
      var pro = {};
      pro.result=false;
      pro.reason='解冻交易单元失败';
      callback(pro);
    });
  }

	service.getNewManagerid=function(params,callback){

		$http({
			url:'/unitManageService/getNewManagerid',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='解冻交易单元失败';
			callback(pro);
		});
	}

	service.getNewCaid=function(params,callback){

		$http({
			url:'/unitManageService/getNewCaid',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='解冻交易单元失败';
			callback(pro);
		});
	}

	service.getNewTrid=function(params,callback){

		$http({
			url:'/unitManageService/getNewTrid',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='解冻交易单元失败';
			callback(pro);
		});
	}


  return service;
})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */

cspServices.factory('usercenterService',['$http', function($http) {
	var service = {};
	service.getUserInfo = function(params,callback) {

		$http({
			url:'/usercenter/getUserInfo',
			params: params,
			method: 'POST'
		}).success(function(res){
			console.log('getUserInfo,service',res);
			callback(res);

		}).error(function(res) {
			var user = {};
			user.result=false;
			user.reason='执行sql失败';
			callback(user);
		});
	};

	service.setUserInfo = function(params,callback) {

		$http({
			url:'/usercenter/setUserInfo',
			params: params,
			method: 'POST'
		}).success(function(res){
			var user = {};
			if(res.result===false)
			{
				user.result=false;
				user.reason=res.reason;
				callback(user);
				return;
			}

			user=res[0];
			user.result=true;

			callback(user);

		}).error(function(res) {
			var user = {};
			user.result=false;
			user.reason='执行sql失败';
			callback(user);
		});
	};

	service.setPassword = function(params,callback) {
		$http({
			url:'/usercenter/setPassword',
			params: params,
			method: 'POST'
		}).success(function(res){
			var user = {};
			user.result=res.result;
			user.reason=res.reason;
			callback(user);

		}).error(function(res) {
			var user = {};
			user.result=false;
			user.reason='执行sql出错';
			callback(user);
		});
	};

	service.setCurrentPage= function(params,callback) {
		$http({
			url:'/usercenter/setCurrentPage',
			params: params,
			method: 'POST'
		}).success(function(res){

			callback(res);

		}).error(function(res) {
			var user = {};
			user.result=false;
			user.reason='执行sql出错';
			callback(user);
		});
	};

	service.getCurrentPage= function(params,callback) {
		$http({
			url:'/usercenter/getCurrentPage',
			params: params,
			method: 'POST'
		}).success(function(res){

			callback(res);

		}).error(function(res) {
			var user = {};
			user.result=false;
			user.reason='执行sql出错';
			callback(user);
		});
	};

	service.setCenterData= function(params,callback) {
		console.log('setCenterData service',params);
		$http({
			url:'/usercenter/setCenterData',
			params: params,
			method: 'POST'
		}).success(function(res){
			callback(res);
		}).error(function(res) {
			var user = {};
			user.result=false;
			user.reason='执行sql出错';
			callback(user);
		});
	};
	service.getCenterData= function(params,callback) {
		$http({
			url:'/usercenter/getCenterData',
			params: params,
			method: 'POST'
		}).success(function(res){
			//var obj=JSON.parse(res);
			console.log('getCenterData service',res,typeof(res));

			callback(res);
		}).error(function(res) {
			var user = {};
			user.result=false;
			user.reason='执行sql出错';
			callback(user);
		});
	};

	service.setWeChatAccount= function(params,callback) {
		$http({
			url:'/usercenter/setWeChatAccount',
			params: params,
			method: 'POST'
		}).success(function(res){
			callback(res);
		}).error(function(res) {
			var user = {};
			user.result=false;
			user.reason='执行sql出错';
			callback(user);
		});
	};
	service.sendUserCenterCode = function(params,callback) {
		$http({
			url:'/usercenter/sendUserCenterCode',
			params: params,
			method: "POST"
		}).success(function(res){
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		});
	};

	service.checkUserCenterCode = function(params,callback) {
		console.log('checkUserCenterCode',params);
		$http({
			url:'/usercenter/checkUserCenterCode',
			params: params,
			method: "POST"
		}).success(function(res){
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		});
	};

	service.setEmail = function(params,callback) {
		console.log('setEmail',params);
		$http({
			url:'/usercenter/setEmail',
			params: params,
			method: "POST"
		}).success(function(res){
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		});
	};

	service.setPhone = function(params,callback) {
		console.log('setPhone',params);
		$http({
			url:'/usercenter/setPhone',
			params: params,
			method: "POST"
		}).success(function(res){
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = false;
			ret.reason = "请求失败";
			callback(ret);
		});
	};


	return service;
}])

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */

cspServices.factory('WchatRegService',function($http){
	var service = {};
	service.cspCheckWchatImgCode = function(params,callback) {
		$http({
			url: 'wchatreg/checkwchatimgcode',
			params:params,
			method:'GET'
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		})
	}
	service.cspCheckWchatState = function(params,callback) {
		$http({
			url: 'wchatreg/checkwchatregstate',
			params:params,
			method:'GET'
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		})
	}
	service.cspWchatRegSendCode = function(params,callback) {
		$http({
			url: 'wchatreg/wchatregsendcode',
			params:params,
			method:'POST'
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		})
	};
	service.cspWchatRegCheckCode = function(params,callback) {
		$http({
			url: 'wchatreg/wchatregcheckcode',
			params:params,
			method:'POST'
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		})
	};
	service.cspWchatRegDB = function(params,callback) {
		$http({
			url: 'wchatreg/wchatregdb',
			params:params,
			method:'POST'
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		})
	}
	service.cspWchatAutoLogin = function(params,callback) {
		$http({
			url: 'wchatreg/wchatautologin',
			params:params,
			method:'POST'
		}).success(function(res) {
			callback(res);
		}).error(function(res) {
			var ret = {};
			ret.result = "failed";
			ret.reason = "请求失败";
			callback(ret);
		})
	}
	return service;
})

/* Copyright (C) 2017 LeHigh Hongking - All Rights Reserved
 * You may not use, distribute and modify this code for any
 * purpose unless you receive an official authorization from
 * ShenZhen LeHigh Hongking Technologies Co., Ltd.
 *
 * You should have received a copy of the license with
 * this file. If not, please write to: admin@hongkingsystem.cn,
 * or visit: http://hongkingsystem.cn
 */


cspServices.factory('wishListService',function($http) {
	var service = {};


	service.getTidModel=function(params,callback){

		$http({
			url:'/wishList/getTidModel',
			params: params,
			method: 'GET'
		}).success(function(res){
			console.log(res);
			callback(res);
		}).error(function(res) {
			var pro = {};
			pro.result=false;
			pro.reason='获取交易小组失败';
			callback(pro);
		});
	}


service.getUnitStocks=function(params,callback){

	$http({
		url:'/wishList/getUnitStocks',
		params: params,
		method: 'GET'
	}).success(function(res){
		console.log(res);
		callback(res);
	}).error(function(res) {
		var pro = {};
		pro.result=false;
		pro.reason='获取交易单元券表失败';
		callback(pro);
	});
}

//保存心愿清单
service.submitWishList=function(params,callback){

	$http({
		url:'/wishList/submitWishList',
		params: params,
		method: 'POST'
	}).success(function(res){
		console.log(res);
		callback(res);
	}).error(function(res) {
		var pro = {};
		pro.result=false;
		pro.reason='保存心愿清单失败';
		callback(pro);
	});
}


//获取小组总BP
service.getGroupBpValue=function(params,callback){

	$http({
		url:'/wishList/getGroupBpValue',
		params: params,
		method: 'GET'
	}).success(function(res){
		console.log(res);
		callback(res);
	}).error(function(res) {
		var pro = {};
		pro.result=false;
		pro.reason='获取小组总BP失败';
		callback(pro);
	});
}


//获取小组心愿清单
service.getGroupWishList=function(params,callback){

	$http({
		url:'/wishList/getGroupWishList',
		params: params,
		method: 'GET'
	}).success(function(res){
		console.log(res);
		callback(res);
	}).error(function(res) {
		var pro = {};
		pro.result=false;
		pro.reason='获取小组心愿清单失败';
		callback(pro);
	});
}
  return service;
});
